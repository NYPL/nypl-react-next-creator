/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.removePathTrailingSlash = removePathTrailingSlash;\nexports.normalizePathTrailingSlash = void 0;\n/**\n* Removes the trailing slash of a path if there is one. Preserves the root path `/`.\n*/\n\nfunction removePathTrailingSlash(path) {\n  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;\n}\n/**\n* Normalizes the trailing slash of a path according to the `trailingSlash` option\n* in `next.config.js`.\n*/\n\n\nvar normalizePathTrailingSlash =  false ? 0 : removePathTrailingSlash;\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2gudHM/NTgzNyJdLCJuYW1lcyI6WyJwYXRoIiwibm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2giLCJwcm9jZXNzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBQ08sdUNBQXVEO0FBQzVELFNBQU9BLElBQUksQ0FBSkEsaUJBQXNCQSxJQUFJLEtBQTFCQSxNQUFxQ0EsSUFBSSxDQUFKQSxTQUFjLENBQW5EQSxDQUFxQ0EsQ0FBckNBLEdBQVA7QUFHRjtBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDTyxJQUFNQywwQkFBMEIsR0FBR0MsU0FDckNGLENBRHFDRSxHQUFuQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L25vcm1hbGl6ZS10cmFpbGluZy1zbGFzaC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVtb3ZlcyB0aGUgdHJhaWxpbmcgc2xhc2ggb2YgYSBwYXRoIGlmIHRoZXJlIGlzIG9uZS4gUHJlc2VydmVzIHRoZSByb290IHBhdGggYC9gLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2gocGF0aDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIHBhdGguZW5kc1dpdGgoJy8nKSAmJiBwYXRoICE9PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGhcbn1cblxuLyoqXG4gKiBOb3JtYWxpemVzIHRoZSB0cmFpbGluZyBzbGFzaCBvZiBhIHBhdGggYWNjb3JkaW5nIHRvIHRoZSBgdHJhaWxpbmdTbGFzaGAgb3B0aW9uXG4gKiBpbiBgbmV4dC5jb25maWcuanNgLlxuICovXG5leHBvcnQgY29uc3Qgbm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2ggPSBwcm9jZXNzLmVudi5fX05FWFRfVFJBSUxJTkdfU0xBU0hcbiAgPyAocGF0aDogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgICAgIGlmICgvXFwuW14vXStcXC8/JC8udGVzdChwYXRoKSkge1xuICAgICAgICByZXR1cm4gcmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2gocGF0aClcbiAgICAgIH0gZWxzZSBpZiAocGF0aC5lbmRzV2l0aCgnLycpKSB7XG4gICAgICAgIHJldHVybiBwYXRoXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gcGF0aCArICcvJ1xuICAgICAgfVxuICAgIH1cbiAgOiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\n\nvar requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback || function (cb) {\n  var start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\n\nexports.requestIdleCallback = requestIdleCallback;\n\nvar cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback || function (id) {\n  return clearTimeout(id);\n};\n\nexports.cancelIdleCallback = cancelIdleCallback;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2sudHM/ZDc5MCJdLCJuYW1lcyI6WyJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwic2VsZiIsInN0YXJ0IiwiRGF0ZSIsInNldFRpbWVvdXQiLCJjYiIsImRpZFRpbWVvdXQiLCJ0aW1lUmVtYWluaW5nIiwiTWF0aCIsImNhbmNlbElkbGVDYWxsYmFjayIsImNsZWFyVGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBbUJPLElBQU1BLG1CQUFtQixHQUM3QiwrQkFBK0JDLElBQUksQ0FBcEMsbUJBQUMsSUFDRCxjQUVrQjtBQUNoQixNQUFJQyxLQUFLLEdBQUdDLElBQUksQ0FBaEIsR0FBWUEsRUFBWjtBQUNBLFNBQU9DLFVBQVUsQ0FBQyxZQUFZO0FBQzVCQyxNQUFFLENBQUM7QUFDREMsZ0JBQVUsRUFEVDtBQUVEQyxtQkFBYSxFQUFFLHlCQUFZO0FBQ3pCLGVBQU9DLElBQUksQ0FBSkEsT0FBWSxNQUFNTCxJQUFJLENBQUpBLFFBQXpCLEtBQW1CLENBQVpLLENBQVA7QUFISkg7QUFBRyxLQUFELENBQUZBO0FBRGUsS0FBakIsQ0FBaUIsQ0FBakI7QUFORzs7OztBQWdCQSxJQUFNSSxrQkFBa0IsR0FDNUIsK0JBQStCUixJQUFJLENBQXBDLGtCQUFDLElBQ0QsY0FBeUM7QUFDdkMsU0FBT1MsWUFBWSxDQUFuQixFQUFtQixDQUFuQjtBQUhHIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidHlwZSBSZXF1ZXN0SWRsZUNhbGxiYWNrSGFuZGxlID0gYW55XG50eXBlIFJlcXVlc3RJZGxlQ2FsbGJhY2tPcHRpb25zID0ge1xuICB0aW1lb3V0OiBudW1iZXJcbn1cbnR5cGUgUmVxdWVzdElkbGVDYWxsYmFja0RlYWRsaW5lID0ge1xuICByZWFkb25seSBkaWRUaW1lb3V0OiBib29sZWFuXG4gIHRpbWVSZW1haW5pbmc6ICgpID0+IG51bWJlclxufVxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIHJlcXVlc3RJZGxlQ2FsbGJhY2s6IChcbiAgICAgIGNhbGxiYWNrOiAoZGVhZGxpbmU6IFJlcXVlc3RJZGxlQ2FsbGJhY2tEZWFkbGluZSkgPT4gdm9pZCxcbiAgICAgIG9wdHM/OiBSZXF1ZXN0SWRsZUNhbGxiYWNrT3B0aW9uc1xuICAgICkgPT4gUmVxdWVzdElkbGVDYWxsYmFja0hhbmRsZVxuICAgIGNhbmNlbElkbGVDYWxsYmFjazogKGlkOiBSZXF1ZXN0SWRsZUNhbGxiYWNrSGFuZGxlKSA9PiB2b2lkXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHJlcXVlc3RJZGxlQ2FsbGJhY2sgPVxuICAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYucmVxdWVzdElkbGVDYWxsYmFjaykgfHxcbiAgZnVuY3Rpb24gKFxuICAgIGNiOiAoZGVhZGxpbmU6IFJlcXVlc3RJZGxlQ2FsbGJhY2tEZWFkbGluZSkgPT4gdm9pZFxuICApOiBOb2RlSlMuVGltZW91dCB7XG4gICAgbGV0IHN0YXJ0ID0gRGF0ZS5ub3coKVxuICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGNiKHtcbiAgICAgICAgZGlkVGltZW91dDogZmFsc2UsXG4gICAgICAgIHRpbWVSZW1haW5pbmc6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoMCwgNTAgLSAoRGF0ZS5ub3coKSAtIHN0YXJ0KSlcbiAgICAgICAgfSxcbiAgICAgIH0pXG4gICAgfSwgMSlcbiAgfVxuXG5leHBvcnQgY29uc3QgY2FuY2VsSWRsZUNhbGxiYWNrID1cbiAgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyAmJiBzZWxmLmNhbmNlbElkbGVDYWxsYmFjaykgfHxcbiAgZnVuY3Rpb24gKGlkOiBSZXF1ZXN0SWRsZUNhbGxiYWNrSGFuZGxlKSB7XG4gICAgcmV0dXJuIGNsZWFyVGltZW91dChpZClcbiAgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.default = void 0;\n\nvar _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../next-server/lib/router/utils/get-asset-path-from-route */ \"./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\"));\n\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\"); // 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\n\n\nvar MS_MAX_IDLE_DELAY = 3800;\n\nfunction withFuture(key, map, generator) {\n  var entry = map.get(key);\n\n  if (entry) {\n    if ('future' in entry) {\n      return entry.future;\n    }\n\n    return Promise.resolve(entry);\n  }\n\n  var resolver;\n  var prom = new Promise(function (resolve) {\n    resolver = resolve;\n  });\n  map.set(key, entry = {\n    resolve: resolver,\n    future: prom\n  });\n  return generator ? // eslint-disable-next-line no-sequences\n  generator().then(function (value) {\n    return resolver(value), value;\n  }) : prom;\n}\n\nfunction hasPrefetch(link) {\n  try {\n    link = document.createElement('link');\n    return (// detect IE11 since it supports prefetch but isn't detected\n      // with relList.support\n      !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch')\n    );\n  } catch (_unused) {\n    return false;\n  }\n}\n\nvar canPrefetch = hasPrefetch();\n\nfunction prefetchViaDom(href, as, link) {\n  return new Promise(function (res, rej) {\n    if (document.querySelector(\"link[rel=\\\"prefetch\\\"][href^=\\\"\".concat(href, \"\\\"]\"))) {\n      return res();\n    }\n\n    link = document.createElement('link'); // The order of property assignment here is intentional:\n\n    if (as) link.as = as;\n    link.rel = \"prefetch\";\n    link.crossOrigin = undefined;\n    link.onload = res;\n    link.onerror = rej; // `href` should always be last:\n\n    link.href = href;\n    document.head.appendChild(link);\n  });\n}\n\nvar ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR'); // TODO: unexport\n\nfunction markAssetError(err) {\n  return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\n\nfunction isAssetError(err) {\n  return err && ASSET_LOAD_ERROR in err;\n}\n\nfunction appendScript(src, script) {\n  return new Promise(function (resolve, reject) {\n    script = document.createElement('script'); // The order of property assignment here is intentional.\n    // 1. Setup success/failure hooks in case the browser synchronously\n    //    executes when `src` is set.\n\n    script.onload = resolve;\n\n    script.onerror = function () {\n      return reject(markAssetError(new Error(\"Failed to load script: \".concat(src))));\n    }; // 2. Configure the cross-origin attribute before setting `src` in case the\n    //    browser begins to fetch.\n\n\n    script.crossOrigin = undefined; // 3. Finally, set the source and inject into the DOM in case the child\n    //    must be appended for fetching to start.\n\n    script.src = src;\n    document.body.appendChild(script);\n  });\n} // Resolve a promise that times out after given amount of milliseconds.\n\n\nfunction resolvePromiseWithTimeout(p, ms, err) {\n  return new Promise(function (resolve, reject) {\n    var cancelled = false;\n    p.then(function (r) {\n      // Resolved, cancel the timeout\n      cancelled = true;\n      resolve(r);\n    })[\"catch\"](reject);\n    (0, _requestIdleCallback.requestIdleCallback)(function () {\n      return setTimeout(function () {\n        if (!cancelled) {\n          reject(err);\n        }\n      }, ms);\n    });\n  });\n} // TODO: stop exporting or cache the failure\n// It'd be best to stop exporting this. It's an implementation detail. We're\n// only exporting it for backwards compatibilty with the `page-loader`.\n// Only cache this response as a last resort if we cannot eliminate all other\n// code branches that use the Build Manifest Callback and push them through\n// the Route Loader interface.\n\n\nfunction getClientBuildManifest() {\n  if (self.__BUILD_MANIFEST) {\n    return Promise.resolve(self.__BUILD_MANIFEST);\n  }\n\n  var onBuildManifest = new Promise(function (resolve) {\n    // Mandatory because this is not concurrent safe:\n    var cb = self.__BUILD_MANIFEST_CB;\n\n    self.__BUILD_MANIFEST_CB = function () {\n      resolve(self.__BUILD_MANIFEST);\n      cb && cb();\n    };\n  });\n  return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));\n}\n\nfunction getFilesForRoute(assetPrefix, route) {\n  if (true) {\n    return Promise.resolve({\n      scripts: [assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute[\"default\"])(route, '.js'))],\n      // Styles are handled by `style-loader` in development:\n      css: []\n    });\n  }\n\n  return getClientBuildManifest().then(function (manifest) {\n    if (!(route in manifest)) {\n      throw markAssetError(new Error(\"Failed to lookup route: \".concat(route)));\n    }\n\n    var allFiles = manifest[route].map(function (entry) {\n      return assetPrefix + '/_next/' + encodeURI(entry);\n    });\n    return {\n      scripts: allFiles.filter(function (v) {\n        return v.endsWith('.js');\n      }),\n      css: allFiles.filter(function (v) {\n        return v.endsWith('.css');\n      })\n    };\n  });\n}\n\nfunction createRouteLoader(assetPrefix) {\n  var entrypoints = new Map();\n  var loadedScripts = new Map();\n  var styleSheets = new Map();\n  var routes = new Map();\n\n  function maybeExecuteScript(src) {\n    var prom = loadedScripts.get(src);\n\n    if (prom) {\n      return prom;\n    } // Skip executing script if it's already in the DOM:\n\n\n    if (document.querySelector(\"script[src^=\\\"\".concat(src, \"\\\"]\"))) {\n      return Promise.resolve();\n    }\n\n    loadedScripts.set(src, prom = appendScript(src));\n    return prom;\n  }\n\n  function fetchStyleSheet(href) {\n    var prom = styleSheets.get(href);\n\n    if (prom) {\n      return prom;\n    }\n\n    styleSheets.set(href, prom = fetch(href).then(function (res) {\n      if (!res.ok) {\n        throw new Error(\"Failed to load stylesheet: \".concat(href));\n      }\n\n      return res.text().then(function (text) {\n        return {\n          href: href,\n          content: text\n        };\n      });\n    })[\"catch\"](function (err) {\n      throw markAssetError(err);\n    }));\n    return prom;\n  }\n\n  return {\n    whenEntrypoint: function whenEntrypoint(route) {\n      return withFuture(route, entrypoints);\n    },\n    onEntrypoint: function onEntrypoint(route, execute) {\n      Promise.resolve(execute).then(function (fn) {\n        return fn();\n      }).then(function (exports) {\n        return {\n          component: exports && exports[\"default\"] || exports,\n          exports: exports\n        };\n      }, function (err) {\n        return {\n          error: err\n        };\n      }).then(function (input) {\n        var old = entrypoints.get(route);\n        entrypoints.set(route, input);\n        if (old && 'resolve' in old) old.resolve(input);\n      });\n    },\n    loadRoute: function loadRoute(route, prefetch) {\n      var _this = this;\n\n      return withFuture(route, routes, function () {\n        return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then(function (_ref) {\n          var scripts = _ref.scripts,\n              css = _ref.css;\n          return Promise.all([entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)), Promise.all(css.map(fetchStyleSheet))]);\n        }).then(function (res) {\n          return _this.whenEntrypoint(route).then(function (entrypoint) {\n            return {\n              entrypoint: entrypoint,\n              styles: res[1]\n            };\n          });\n        }), MS_MAX_IDLE_DELAY, markAssetError(new Error(\"Route did not complete loading: \".concat(route)))).then(function (_ref2) {\n          var entrypoint = _ref2.entrypoint,\n              styles = _ref2.styles;\n          var res = Object.assign({\n            styles: styles\n          }, entrypoint);\n          return 'error' in entrypoint ? entrypoint : res;\n        })[\"catch\"](function (err) {\n          if (prefetch) {\n            // we don't want to cache errors during prefetch\n            throw err;\n          }\n\n          return {\n            error: err\n          };\n        });\n      });\n    },\n    prefetch: function prefetch(route) {\n      var _this2 = this;\n\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      var cn;\n\n      if (cn = navigator.connection) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n      }\n\n      return getFilesForRoute(assetPrefix, route).then(function (output) {\n        return Promise.all(canPrefetch ? output.scripts.map(function (script) {\n          return prefetchViaDom(script, 'script');\n        }) : []);\n      }).then(function () {\n        (0, _requestIdleCallback.requestIdleCallback)(function () {\n          return _this2.loadRoute(route, true)[\"catch\"](function () {});\n        });\n      })[\"catch\"]( // swallow prefetch errors\n      function () {});\n    }\n  };\n}\n\nvar _default = createRouteLoader;\nexports.default = _default;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nvar _construct = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/construct */ \"./node_modules/next/node_modules/@babel/runtime/helpers/construct.js\");\n\nvar _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports.useRouter = useRouter;\nexports.makePublicRouterInstance = makePublicRouterInstance;\nexports.createRouter = exports.withRouter = exports.default = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ \"./node_modules/next/dist/next-server/lib/router/router.js\"));\n\nexports.Router = _router2[\"default\"];\nexports.NextRouter = _router2.NextRouter;\n\nvar _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ \"./node_modules/next/dist/next-server/lib/router-context.js\");\n\nvar _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ \"./node_modules/next/dist/client/with-router.js\"));\n\nexports.withRouter = _withRouter[\"default\"];\n/* global window */\n\nvar singletonRouter = {\n  router: null,\n  // holds the actual router instance\n  readyCallbacks: [],\n  ready: function ready(cb) {\n    if (this.router) return cb();\n\n    if (true) {\n      this.readyCallbacks.push(cb);\n    }\n  }\n}; // Create public properties and methods of the router in the singletonRouter\n\nvar urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath', 'locale', 'locales', 'defaultLocale', 'isReady', 'isPreview', 'isLocaleDomain'];\nvar routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];\nvar coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it\n\nObject.defineProperty(singletonRouter, 'events', {\n  get: function get() {\n    return _router2[\"default\"].events;\n  }\n});\nurlPropertyFields.forEach(function (field) {\n  // Here we need to use Object.defineProperty because, we need to return\n  // the property assigned to the actual router\n  // The value might get changed as we change routes and this is the\n  // proper way to access it\n  Object.defineProperty(singletonRouter, field, {\n    get: function get() {\n      var router = getRouter();\n      return router[field];\n    }\n  });\n});\ncoreMethodFields.forEach(function (field) {\n  // We don't really know the types here, so we add them later instead\n  ;\n\n  singletonRouter[field] = function () {\n    var router = getRouter();\n    return router[field].apply(router, arguments);\n  };\n});\nrouterEvents.forEach(function (event) {\n  singletonRouter.ready(function () {\n    _router2[\"default\"].events.on(event, function () {\n      var eventField = \"on\".concat(event.charAt(0).toUpperCase()).concat(event.substring(1));\n      var _singletonRouter = singletonRouter;\n\n      if (_singletonRouter[eventField]) {\n        try {\n          _singletonRouter[eventField].apply(_singletonRouter, arguments);\n        } catch (err) {\n          console.error(\"Error when running the Router event: \".concat(eventField));\n          console.error(\"\".concat(err.message, \"\\n\").concat(err.stack));\n        }\n      }\n    });\n  });\n});\n\nfunction getRouter() {\n  if (!singletonRouter.router) {\n    var message = 'No router instance found.\\n' + 'You should only use \"next/router\" inside the client side of your app.\\n';\n    throw new Error(message);\n  }\n\n  return singletonRouter.router;\n} // Export the singletonRouter and this is the public API.\n\n\nvar _default = singletonRouter; // Reexport the withRoute HOC\n\nexports.default = _default;\n\nfunction useRouter() {\n  _s();\n\n  return _react[\"default\"].useContext(_routerContext.RouterContext);\n} // INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\n\n\n_s(useRouter, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar createRouter = function createRouter() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  singletonRouter.router = _construct(_router2[\"default\"], args);\n  singletonRouter.readyCallbacks.forEach(function (cb) {\n    return cb();\n  });\n  singletonRouter.readyCallbacks = [];\n  return singletonRouter.router;\n}; // This function is used to create the `withRouter` router instance\n\n\nexports.createRouter = createRouter;\n\nfunction makePublicRouterInstance(router) {\n  var _router = router;\n  var instance = {};\n\n  var _iterator = _createForOfIteratorHelper(urlPropertyFields),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var property = _step.value;\n\n      if (typeof _router[property] === 'object') {\n        instance[property] = Object.assign(Array.isArray(_router[property]) ? [] : {}, _router[property]); // makes sure query is not stateful\n\n        continue;\n      }\n\n      instance[property] = _router[property];\n    } // Events is a static property on the router, the router doesn't have to be initialized to use it\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  instance.events = _router2[\"default\"].events;\n  coreMethodFields.forEach(function (field) {\n    instance[field] = function () {\n      return _router[field].apply(_router, arguments);\n    };\n  });\n  return instance;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports.default = withRouter;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _router = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\n\nfunction withRouter(ComposedComponent) {\n  function WithRouterWrapper(props) {\n    return /*#__PURE__*/_react[\"default\"].createElement(ComposedComponent, Object.assign({\n      router: (0, _router.useRouter)()\n    }, props));\n  }\n\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app\n  ;\n  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n\n  if (true) {\n    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';\n    WithRouterWrapper.displayName = \"withRouter(\".concat(name, \")\");\n  }\n\n  return WithRouterWrapper;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL2NsaWVudC93aXRoLXJvdXRlci50c3g/OThmZiJdLCJuYW1lcyI6WyJDb21wb3NlZENvbXBvbmVudCIsImdldEluaXRpYWxQcm9wcyIsIldpdGhSb3V0ZXJXcmFwcGVyIiwibmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFXZSx1Q0FLK0I7QUFDNUMsb0NBQW9EO0FBQ2xELHdCQUFPO0FBQW1CLFlBQU0sRUFBRSxZQUEzQixTQUEyQjtBQUEzQixPQUFQLEtBQU8sRUFBUDtBQUdGOztBQUFBLG1CQUFpQixDQUFqQixrQkFBb0NBLGlCQUFpQixDQUFDQyxlQUF0RCxDQUNBO0FBREE7QUFFRUMsbUJBQUQsb0JBQUNBLEdBQWlERixpQkFBRCxDQUFqRCxtQkFBQ0U7O0FBQ0YsWUFBMkM7QUFDekMsUUFBTUMsSUFBSSxHQUNSSCxpQkFBaUIsQ0FBakJBLGVBQWlDQSxpQkFBaUIsQ0FBbERBLFFBREY7QUFFQUUscUJBQWlCLENBQWpCQTtBQUdGOztBQUFBO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC93aXRoLXJvdXRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IE5leHRDb21wb25lbnRUeXBlLCBOZXh0UGFnZUNvbnRleHQgfSBmcm9tICcuLi9uZXh0LXNlcnZlci9saWIvdXRpbHMnXG5pbXBvcnQgeyBOZXh0Um91dGVyLCB1c2VSb3V0ZXIgfSBmcm9tICcuL3JvdXRlcidcblxuZXhwb3J0IHR5cGUgV2l0aFJvdXRlclByb3BzID0ge1xuICByb3V0ZXI6IE5leHRSb3V0ZXJcbn1cblxuZXhwb3J0IHR5cGUgRXhjbHVkZVJvdXRlclByb3BzPFA+ID0gUGljazxcbiAgUCxcbiAgRXhjbHVkZTxrZXlvZiBQLCBrZXlvZiBXaXRoUm91dGVyUHJvcHM+XG4+XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHdpdGhSb3V0ZXI8XG4gIFAgZXh0ZW5kcyBXaXRoUm91dGVyUHJvcHMsXG4gIEMgPSBOZXh0UGFnZUNvbnRleHRcbj4oXG4gIENvbXBvc2VkQ29tcG9uZW50OiBOZXh0Q29tcG9uZW50VHlwZTxDLCBhbnksIFA+XG4pOiBSZWFjdC5Db21wb25lbnRUeXBlPEV4Y2x1ZGVSb3V0ZXJQcm9wczxQPj4ge1xuICBmdW5jdGlvbiBXaXRoUm91dGVyV3JhcHBlcihwcm9wczogYW55KTogSlNYLkVsZW1lbnQge1xuICAgIHJldHVybiA8Q29tcG9zZWRDb21wb25lbnQgcm91dGVyPXt1c2VSb3V0ZXIoKX0gey4uLnByb3BzfSAvPlxuICB9XG5cbiAgV2l0aFJvdXRlcldyYXBwZXIuZ2V0SW5pdGlhbFByb3BzID0gQ29tcG9zZWRDb21wb25lbnQuZ2V0SW5pdGlhbFByb3BzXG4gIC8vIFRoaXMgaXMgbmVlZGVkIHRvIGFsbG93IGNoZWNraW5nIGZvciBjdXN0b20gZ2V0SW5pdGlhbFByb3BzIGluIF9hcHBcbiAgOyhXaXRoUm91dGVyV3JhcHBlciBhcyBhbnkpLm9yaWdHZXRJbml0aWFsUHJvcHMgPSAoQ29tcG9zZWRDb21wb25lbnQgYXMgYW55KS5vcmlnR2V0SW5pdGlhbFByb3BzXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgY29uc3QgbmFtZSA9XG4gICAgICBDb21wb3NlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb3NlZENvbXBvbmVudC5uYW1lIHx8ICdVbmtub3duJ1xuICAgIFdpdGhSb3V0ZXJXcmFwcGVyLmRpc3BsYXlOYW1lID0gYHdpdGhSb3V0ZXIoJHtuYW1lfSlgXG4gIH1cblxuICByZXR1cm4gV2l0aFJvdXRlcldyYXBwZXJcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/with-router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js ***!
  \******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.normalizeLocalePath = normalizeLocalePath;\n\nfunction normalizeLocalePath(pathname, locales) {\n  var detectedLocale; // first item will be empty string from splitting at first char\n\n  var pathnameParts = pathname.split('/');\n  (locales || []).some(function (locale) {\n    if (pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n      detectedLocale = locale;\n      pathnameParts.splice(1, 1);\n      pathname = pathnameParts.join('/') || '/';\n      return true;\n    }\n\n    return false;\n  });\n  return {\n    pathname: pathname,\n    detectedLocale: detectedLocale\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC50cz9iMzAxIl0sIm5hbWVzIjpbInBhdGhuYW1lUGFydHMiLCJwYXRobmFtZSIsImxvY2FsZXMiLCJsb2NhbGUiLCJkZXRlY3RlZExvY2FsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sZ0RBTUw7QUFDQSxxQkFEQSxDQUVBOztBQUNBLE1BQU1BLGFBQWEsR0FBR0MsUUFBUSxDQUFSQSxNQUF0QixHQUFzQkEsQ0FBdEI7QUFFQyxHQUFDQyxPQUFPLElBQVIsU0FBc0JDLGdCQUFELEVBQVk7QUFDaEMsUUFBSUgsYUFBYSxDQUFiQSxDQUFhLENBQWJBLG1CQUFtQ0csTUFBTSxDQUE3QyxXQUF1Q0EsRUFBdkMsRUFBNkQ7QUFDM0RDLG9CQUFjLEdBQWRBO0FBQ0FKLG1CQUFhLENBQWJBO0FBQ0FDLGNBQVEsR0FBR0QsYUFBYSxDQUFiQSxhQUFYQztBQUNBO0FBRUY7O0FBQUE7QUFQRDtBQVVELFNBQU87QUFDTEEsWUFESyxFQUNMQSxRQURLO0FBRUxHLGtCQUZGLEVBRUVBO0FBRkssR0FBUDtBQUlEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvaTE4bi9ub3JtYWxpemUtbG9jYWxlLXBhdGguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplTG9jYWxlUGF0aChcbiAgcGF0aG5hbWU6IHN0cmluZyxcbiAgbG9jYWxlcz86IHN0cmluZ1tdXG4pOiB7XG4gIGRldGVjdGVkTG9jYWxlPzogc3RyaW5nXG4gIHBhdGhuYW1lOiBzdHJpbmdcbn0ge1xuICBsZXQgZGV0ZWN0ZWRMb2NhbGU6IHN0cmluZyB8IHVuZGVmaW5lZFxuICAvLyBmaXJzdCBpdGVtIHdpbGwgYmUgZW1wdHkgc3RyaW5nIGZyb20gc3BsaXR0aW5nIGF0IGZpcnN0IGNoYXJcbiAgY29uc3QgcGF0aG5hbWVQYXJ0cyA9IHBhdGhuYW1lLnNwbGl0KCcvJylcblxuICA7KGxvY2FsZXMgfHwgW10pLnNvbWUoKGxvY2FsZSkgPT4ge1xuICAgIGlmIChwYXRobmFtZVBhcnRzWzFdLnRvTG93ZXJDYXNlKCkgPT09IGxvY2FsZS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICBkZXRlY3RlZExvY2FsZSA9IGxvY2FsZVxuICAgICAgcGF0aG5hbWVQYXJ0cy5zcGxpY2UoMSwgMSlcbiAgICAgIHBhdGhuYW1lID0gcGF0aG5hbWVQYXJ0cy5qb2luKCcvJykgfHwgJy8nXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2VcbiAgfSlcblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lLFxuICAgIGRldGVjdGVkTG9jYWxlLFxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.default = mitt;\n/*\nMIT License\nCopyright (c) Jason Miller (https://jasonformat.com/)\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js\n// It's been edited for the needs of this script\n// See the LICENSE at the top of the file\n\nfunction mitt() {\n  var all = Object.create(null);\n  return {\n    on: function on(type, handler) {\n      ;\n      (all[type] || (all[type] = [])).push(handler);\n    },\n    off: function off(type, handler) {\n      if (all[type]) {\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n      }\n    },\n    emit: function emit(type) {\n      for (var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        evts[_key - 1] = arguments[_key];\n      }\n\n      // eslint-disable-next-line array-callback-return\n      ;\n      (all[type] || []).slice().map(function (handler) {\n        handler.apply(void 0, evts);\n      });\n    }\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9taXR0LnRzP2RhMmUiXSwibmFtZXMiOlsiYWxsIiwiT2JqZWN0Iiwib24iLCJvZmYiLCJlbWl0IiwiaGFuZGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTs7QUFVZSxnQkFBNkI7QUFDMUMsTUFBTUEsR0FBK0IsR0FBR0MsTUFBTSxDQUFOQSxPQUF4QyxJQUF3Q0EsQ0FBeEM7QUFFQSxTQUFPO0FBQ0xDLE1BREssY0FDSCxJQURHLEVBQ0gsT0FERyxFQUM4QjtBQUNqQztBQUFDLE9BQUNGLEdBQUcsQ0FBSEEsSUFBRyxDQUFIQSxLQUFjQSxHQUFHLENBQUhBLElBQUcsQ0FBSEEsR0FBZixFQUFDQSxDQUFEO0FBRkU7QUFLTEcsT0FMSyxlQUtGLElBTEUsRUFLRixPQUxFLEVBSytCO0FBQ2xDLFVBQUlILEdBQUcsQ0FBUCxJQUFPLENBQVAsRUFBZTtBQUNiQSxXQUFHLENBQUhBLElBQUcsQ0FBSEEsUUFBaUJBLEdBQUcsQ0FBSEEsSUFBRyxDQUFIQSxzQkFBakJBO0FBRUg7QUFUSTtBQVdMSSxRQVhLLGdCQVdELElBWEMsRUFXOEI7QUFBQSx3Q0FBL0IsSUFBK0I7QUFBL0IsWUFBK0I7QUFBQTs7QUFDakM7QUFDQTtBQUFDLE9BQUNKLEdBQUcsQ0FBSEEsSUFBRyxDQUFIQSxJQUFELGdCQUErQkssaUJBQUQsRUFBc0I7QUFDbkRBLGVBQU8sTUFBUEE7QUFERDtBQWJMO0FBQU8sR0FBUDtBQWtCRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL21pdHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuTUlUIExpY2Vuc2VcblxuQ29weXJpZ2h0IChjKSBKYXNvbiBNaWxsZXIgKGh0dHBzOi8vamFzb25mb3JtYXQuY29tLylcblxuUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcblxuVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuKi9cblxuLy8gVGhpcyBmaWxlIGlzIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9kZXZlbG9waXQvbWl0dC9ibG9iL3YxLjEuMy9zcmMvaW5kZXguanNcbi8vIEl0J3MgYmVlbiBlZGl0ZWQgZm9yIHRoZSBuZWVkcyBvZiB0aGlzIHNjcmlwdFxuLy8gU2VlIHRoZSBMSUNFTlNFIGF0IHRoZSB0b3Agb2YgdGhlIGZpbGVcblxudHlwZSBIYW5kbGVyID0gKC4uLmV2dHM6IGFueVtdKSA9PiB2b2lkXG5cbmV4cG9ydCB0eXBlIE1pdHRFbWl0dGVyID0ge1xuICBvbih0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEhhbmRsZXIpOiB2b2lkXG4gIG9mZih0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEhhbmRsZXIpOiB2b2lkXG4gIGVtaXQodHlwZTogc3RyaW5nLCAuLi5ldnRzOiBhbnlbXSk6IHZvaWRcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWl0dCgpOiBNaXR0RW1pdHRlciB7XG4gIGNvbnN0IGFsbDogeyBbczogc3RyaW5nXTogSGFuZGxlcltdIH0gPSBPYmplY3QuY3JlYXRlKG51bGwpXG5cbiAgcmV0dXJuIHtcbiAgICBvbih0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEhhbmRsZXIpIHtcbiAgICAgIDsoYWxsW3R5cGVdIHx8IChhbGxbdHlwZV0gPSBbXSkpLnB1c2goaGFuZGxlcilcbiAgICB9LFxuXG4gICAgb2ZmKHR5cGU6IHN0cmluZywgaGFuZGxlcjogSGFuZGxlcikge1xuICAgICAgaWYgKGFsbFt0eXBlXSkge1xuICAgICAgICBhbGxbdHlwZV0uc3BsaWNlKGFsbFt0eXBlXS5pbmRleE9mKGhhbmRsZXIpID4+PiAwLCAxKVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBlbWl0KHR5cGU6IHN0cmluZywgLi4uZXZ0czogYW55W10pIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBhcnJheS1jYWxsYmFjay1yZXR1cm5cbiAgICAgIDsoYWxsW3R5cGVdIHx8IFtdKS5zbGljZSgpLm1hcCgoaGFuZGxlcjogSGFuZGxlcikgPT4ge1xuICAgICAgICBoYW5kbGVyKC4uLmV2dHMpXG4gICAgICB9KVxuICAgIH0sXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/mitt.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router-context.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router-context.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.RouterContext = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar RouterContext = /*#__PURE__*/_react[\"default\"].createContext(null);\n\nexports.RouterContext = RouterContext;\n\nif (true) {\n  RouterContext.displayName = 'RouterContext';\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXItY29udGV4dC50cz84NmJlIl0sIm5hbWVzIjpbIlJvdXRlckNvbnRleHQiLCJSZWFjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUdPOztBQUFBLElBQU1BLGFBQWEsZ0JBQUdDLGdDQUF0QixJQUFzQkEsQ0FBdEI7Ozs7QUFFUCxJQUFJLE1BQXVDO0FBQ3pDRCxlQUFhLENBQWJBO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9yb3V0ZXItY29udGV4dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IE5leHRSb3V0ZXIgfSBmcm9tICcuL3JvdXRlci9yb3V0ZXInXG5cbmV4cG9ydCBjb25zdCBSb3V0ZXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxOZXh0Um91dGVyPihudWxsIGFzIGFueSlcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgUm91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdSb3V0ZXJDb250ZXh0J1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router-context.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nvar _regeneratorRuntime = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/regenerator */ \"./node_modules/next/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator */ \"./node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nvar _classCallCheck = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck */ \"./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js\");\n\nvar _createClass = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/createClass */ \"./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js\");\n\nvar _slicedToArray = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray */ \"./node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nexports.__esModule = true;\nexports.getDomainLocale = getDomainLocale;\nexports.addLocale = addLocale;\nexports.delLocale = delLocale;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports.default = void 0;\n\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\n\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\n\nvar _denormalizePagePath = __webpack_require__(/*! ../../server/denormalize-page-path */ \"./node_modules/next/dist/next-server/server/denormalize-page-path.js\");\n\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js\");\n\nvar _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ \"./node_modules/next/dist/next-server/lib/mitt.js\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/next/dist/next-server/lib/utils.js\");\n\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js\");\n\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js\");\n\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./node_modules/next/dist/next-server/lib/router/utils/querystring.js\");\n\nvar _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ \"?ca47\"));\n\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js\");\n\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./node_modules/next/dist/next-server/lib/router/utils/route-regex.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} // tslint:disable:no-console\n\n\nvar detectDomainLocale;\n\nif (false) {}\n\nvar basePath =  false || '';\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true\n  });\n}\n\nfunction addPathPrefix(path, prefix) {\n  return prefix && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(prefix) : \"\".concat(prefix).concat(pathNoQueryHash(path) === '/' ? path.substring(1) : path) : path;\n}\n\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n  if (false) { var detectedDomain; }\n\n  return false;\n}\n\nfunction addLocale(path, locale, defaultLocale) {\n  if (false) { var localeLower, pathLower, pathname; }\n\n  return path;\n}\n\nfunction delLocale(path, locale) {\n  if (false) { var localeLower, pathLower, pathname; }\n\n  return path;\n}\n\nfunction pathNoQueryHash(path) {\n  var queryIndex = path.indexOf('?');\n  var hashIndex = path.indexOf('#');\n\n  if (queryIndex > -1 || hashIndex > -1) {\n    path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);\n  }\n\n  return path;\n}\n\nfunction hasBasePath(path) {\n  path = pathNoQueryHash(path);\n  return path === basePath || path.startsWith(basePath + '/');\n}\n\nfunction addBasePath(path) {\n  // we only add the basepath on relative urls\n  return addPathPrefix(path, basePath);\n}\n\nfunction delBasePath(path) {\n  path = path.slice(basePath.length);\n  if (!path.startsWith('/')) path = \"/\".concat(path);\n  return path;\n}\n/**\n* Detects whether a given url is routable by the Next.js router (browser only).\n*/\n\n\nfunction isLocalURL(url) {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (url.startsWith('/') || url.startsWith('#')) return true;\n\n  try {\n    // absolute urls can be local if they are on the same origin\n    var locationOrigin = (0, _utils.getLocationOrigin)();\n    var resolved = new URL(url, locationOrigin);\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction interpolateAs(route, asPathname, query) {\n  var interpolatedRoute = '';\n  var dynamicRegex = (0, _routeRegex.getRouteRegex)(route);\n  var dynamicGroups = dynamicRegex.groups;\n  var dynamicMatches = // Try to match the dynamic route against the asPath\n  (asPathname !== route ? (0, _routeMatcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href\n  // TODO: should this take priority; also need to change in the router.\n  query;\n  interpolatedRoute = route;\n  var params = Object.keys(dynamicGroups);\n\n  if (!params.every(function (param) {\n    var value = dynamicMatches[param] || '';\n    var _dynamicGroups$param = dynamicGroups[param],\n        repeat = _dynamicGroups$param.repeat,\n        optional = _dynamicGroups$param.optional; // support single-level catch-all\n    // TODO: more robust handling for user-error (passing `/`)\n\n    var replaced = \"[\".concat(repeat ? '...' : '').concat(param, \"]\");\n\n    if (optional) {\n      replaced = \"\".concat(!value ? '/' : '', \"[\").concat(replaced, \"]\");\n    }\n\n    if (repeat && !Array.isArray(value)) value = [value];\n    return (optional || param in dynamicMatches) && ( // Interpolate group into data URL if present\n    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map( // these values should be fully encoded instead of just\n    // path delimiter escaped since they are being inserted\n    // into the URL and we expect URL encoded segments\n    // when parsing dynamic route params\n    function (segment) {\n      return encodeURIComponent(segment);\n    }).join('/') : encodeURIComponent(value)) || '/');\n  })) {\n    interpolatedRoute = ''; // did not satisfy all requirements\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n\n  return {\n    params: params,\n    result: interpolatedRoute\n  };\n}\n\nfunction omitParmsFromQuery(query, params) {\n  var filteredQuery = {};\n  Object.keys(query).forEach(function (key) {\n    if (!params.includes(key)) {\n      filteredQuery[key] = query[key];\n    }\n  });\n  return filteredQuery;\n}\n/**\n* Resolves a given hyperlink with a certain router state (basePath not included).\n* Preserves absolute urls.\n*/\n\n\nfunction resolveHref(currentPath, href, resolveAs) {\n  // we use a dummy base url for relative urls\n  var base = new URL(currentPath, 'http://n');\n  var urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href); // Return because it cannot be routed by the Next.js router\n\n  if (!isLocalURL(urlAsString)) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n\n  try {\n    var finalUrl = new URL(urlAsString, base);\n    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname);\n    var interpolatedAs = '';\n\n    if ((0, _isDynamic.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n      var query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);\n\n      var _interpolateAs = interpolateAs(finalUrl.pathname, finalUrl.pathname, query),\n          result = _interpolateAs.result,\n          params = _interpolateAs.params;\n\n      if (result) {\n        interpolatedAs = (0, _utils.formatWithValidation)({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omitParmsFromQuery(query, params)\n        });\n      }\n    } // if the origin didn't change, it means we received a relative href\n\n\n    var resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;\n  } catch (_) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n}\n\nfunction stripOrigin(url) {\n  var origin = (0, _utils.getLocationOrigin)();\n  return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\n\nfunction prepareUrlAs(router, url, as) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  var _resolveHref = resolveHref(router.pathname, url, true),\n      _resolveHref2 = _slicedToArray(_resolveHref, 2),\n      resolvedHref = _resolveHref2[0],\n      resolvedAs = _resolveHref2[1];\n\n  var origin = (0, _utils.getLocationOrigin)();\n  var hrefHadOrigin = resolvedHref.startsWith(origin);\n  var asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);\n  resolvedHref = stripOrigin(resolvedHref);\n  resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n  var preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);\n  var preparedAs = as ? stripOrigin(resolveHref(router.pathname, as)) : resolvedAs || resolvedHref;\n  return {\n    url: preparedUrl,\n    as: asHadOrigin ? preparedAs : addBasePath(preparedAs)\n  };\n}\n\nfunction resolveDynamicRoute(pathname, pages) {\n  var cleanPathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)((0, _denormalizePagePath.denormalizePagePath)(pathname));\n\n  if (cleanPathname === '/404' || cleanPathname === '/_error') {\n    return pathname;\n  } // handle resolving href for dynamic routes\n\n\n  if (!pages.includes(cleanPathname)) {\n    // eslint-disable-next-line array-callback-return\n    pages.some(function (page) {\n      if ((0, _isDynamic.isDynamicRoute)(page) && (0, _routeRegex.getRouteRegex)(page).re.test(cleanPathname)) {\n        pathname = page;\n        return true;\n      }\n    });\n  }\n\n  return (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);\n}\n\nvar manualScrollRestoration =  false && 0;\nvar SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');\n\nfunction fetchRetry(url, attempts) {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin'\n  }).then(function (res) {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1);\n      }\n\n      if (res.status === 404) {\n        return res.json().then(function (data) {\n          if (data.notFound) {\n            return {\n              notFound: SSG_DATA_NOT_FOUND\n            };\n          }\n\n          throw new Error(\"Failed to load static props\");\n        });\n      }\n\n      throw new Error(\"Failed to load static props\");\n    }\n\n    return res.json();\n  });\n}\n\nfunction fetchNextData(dataHref, isServerRender) {\n  return fetchRetry(dataHref, isServerRender ? 3 : 1)[\"catch\"](function (err) {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      (0, _routeLoader.markAssetError)(err);\n    }\n\n    throw err;\n  });\n}\n\nvar Router = /*#__PURE__*/function () {\n  /**\n  * Map of all components loaded in `Router`\n  */\n  // Static Data Cache\n  // In-flight Server Data Requests, for deduping\n  function Router(_pathname, _query, _as, _ref) {\n    var _this = this;\n\n    var initialProps = _ref.initialProps,\n        pageLoader = _ref.pageLoader,\n        App = _ref.App,\n        wrapApp = _ref.wrapApp,\n        Component = _ref.Component,\n        err = _ref.err,\n        subscription = _ref.subscription,\n        isFallback = _ref.isFallback,\n        locale = _ref.locale,\n        locales = _ref.locales,\n        defaultLocale = _ref.defaultLocale,\n        domainLocales = _ref.domainLocales,\n        isPreview = _ref.isPreview;\n\n    _classCallCheck(this, Router);\n\n    this.route = void 0;\n    this.pathname = void 0;\n    this.query = void 0;\n    this.asPath = void 0;\n    this.basePath = void 0;\n    this.components = void 0;\n    this.sdc = {};\n    this.sdr = {};\n    this.sub = void 0;\n    this.clc = void 0;\n    this.pageLoader = void 0;\n    this._bps = void 0;\n    this.events = void 0;\n    this._wrapApp = void 0;\n    this.isSsr = void 0;\n    this.isFallback = void 0;\n    this._inFlightRoute = void 0;\n    this._shallow = void 0;\n    this.locale = void 0;\n    this.locales = void 0;\n    this.defaultLocale = void 0;\n    this.domainLocales = void 0;\n    this.isReady = void 0;\n    this.isPreview = void 0;\n    this.isLocaleDomain = void 0;\n    this._idx = 0;\n\n    this.onPopState = function (e) {\n      var state = e.state;\n\n      if (!state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var _pathname2 = _this.pathname,\n            query = _this.query;\n\n        _this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: addBasePath(_pathname2),\n          query: query\n        }), (0, _utils.getURL)());\n\n        return;\n      }\n\n      if (!state.__N) {\n        return;\n      }\n\n      var forcedScroll;\n      var url = state.url,\n          as = state.as,\n          options = state.options,\n          idx = state.idx;\n\n      if (false) { var v; }\n\n      _this._idx = idx;\n\n      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(url),\n          pathname = _ref2.pathname; // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n\n\n      if (_this.isSsr && as === _this.asPath && pathname === _this.pathname) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n\n\n      if (_this._bps && !_this._bps(state)) {\n        return;\n      }\n\n      _this.change('replaceState', url, as, Object.assign({}, options, {\n        shallow: options.shallow && _this._shallow,\n        locale: options.locale || _this.defaultLocale\n      }), forcedScroll);\n    }; // represents the current component key\n\n\n    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)\n\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n\n    if (_pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        initial: true,\n        props: initialProps,\n        err: err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP\n      };\n    }\n\n    this.components['/_app'] = {\n      Component: App,\n      styleSheets: [\n        /* /_app does not need its stylesheets managed */\n      ]\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = _pathname;\n    this.query = _query; // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n\n    var autoExportDynamic = (0, _isDynamic.isDynamicRoute)(_pathname) && self.__NEXT_DATA__.autoExport;\n\n    this.asPath = autoExportDynamic ? _pathname : _as;\n    this.basePath = basePath;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating\n    // back from external site\n\n    this.isSsr = true;\n    this.isFallback = isFallback;\n    this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || !autoExportDynamic && !self.location.search && !false);\n    this.isPreview = !!isPreview;\n    this.isLocaleDomain = false;\n\n    if (false) {}\n\n    if (true) {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (_as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: addBasePath(_pathname),\n          query: _query\n        }), (0, _utils.getURL)(), {\n          locale: locale\n        });\n      }\n\n      window.addEventListener('popstate', this.onPopState); // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n\n      if (false) {}\n    }\n  }\n\n  _createClass(Router, [{\n    key: \"reload\",\n    value: function reload() {\n      window.location.reload();\n    }\n    /**\n    * Go back in history\n    */\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    }\n    /**\n    * Performs a `pushState` with arguments\n    * @param url of the route\n    * @param as masks `url` for the browser\n    * @param options object you can define `shallow` and other options\n    */\n\n  }, {\n    key: \"push\",\n    value: function push(url, as) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (false) {}\n\n      ;\n\n      var _prepareUrlAs = prepareUrlAs(this, url, as);\n\n      url = _prepareUrlAs.url;\n      as = _prepareUrlAs.as;\n      return this.change('pushState', url, as, options);\n    }\n    /**\n    * Performs a `replaceState` with arguments\n    * @param url of the route\n    * @param as masks `url` for the browser\n    * @param options object you can define `shallow` and other options\n    */\n\n  }, {\n    key: \"replace\",\n    value: function replace(url, as) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      ;\n\n      var _prepareUrlAs2 = prepareUrlAs(this, url, as);\n\n      url = _prepareUrlAs2.url;\n      as = _prepareUrlAs2.as;\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function () {\n      var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, as, options, forcedScroll) {\n        var _options$scroll, localeChange, parsedAs, localePathResult, didNavigate, _this$locales, detectedDomain, asNoBasePath, _options$shallow, shallow, routeProps, cleanedAs, parsed, pathname, query, pages, rewrites, _yield, resolvedAs, rewritesResult, route, _parsedAs, asPathname, routeRegex, routeMatch, shouldInterpolate, interpolatedAs, missingParams, _self$__NEXT_DATA__$p, _self$__NEXT_DATA__$p2, routeInfo, _routeInfo, error, props, __N_SSG, __N_SSP, destination, parsedHref, _prepareUrlAs3, newUrl, newAs, notFoundRoute, appComp, isValidShallowRoute;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (isLocalURL(url)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                window.location.href = url;\n                return _context.abrupt(\"return\", false);\n\n              case 3:\n                // for static pages with query params in the URL we delay\n                // marking the router ready until after the query is updated\n                if (options._h) {\n                  this.isReady = true;\n                } // Default to scroll reset behavior unless explicitly specified to be\n                // `false`! This makes the behavior between using `Router#push` and a\n                // `<Link />` consistent.\n\n\n                options.scroll = !!((_options$scroll = options.scroll) != null ? _options$scroll : true);\n                localeChange = options.locale !== this.locale;\n\n                if (true) {\n                  _context.next = 18;\n                  break;\n                }\n\n                this.locale = options.locale === false ? this.defaultLocale : options.locale || this.locale;\n\n                if (typeof options.locale === 'undefined') {\n                  options.locale = this.locale;\n                }\n\n                parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(hasBasePath(as) ? delBasePath(as) : as);\n                localePathResult = (0, _normalizeLocalePath.normalizeLocalePath)(parsedAs.pathname, this.locales);\n\n                if (localePathResult.detectedLocale) {\n                  this.locale = localePathResult.detectedLocale;\n                  parsedAs.pathname = addBasePath(parsedAs.pathname);\n                  as = (0, _utils.formatWithValidation)(parsedAs);\n                  url = addBasePath((0, _normalizeLocalePath.normalizeLocalePath)(hasBasePath(url) ? delBasePath(url) : url, this.locales).pathname);\n                }\n\n                didNavigate = false; // we need to wrap this in the env check again since regenerator runtime\n                // moves this on its own due to the return\n\n                if (false) {}\n\n                detectedDomain = detectDomainLocale(this.domainLocales, undefined, this.locale); // we need to wrap this in the env check again since regenerator runtime\n                // moves this on its own due to the return\n\n                if (false) {}\n\n                if (!didNavigate) {\n                  _context.next = 18;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", new Promise(function () {}));\n\n              case 18:\n                if (!options._h) {\n                  this.isSsr = false;\n                } // marking route changes as a navigation start entry\n\n\n                if (_utils.ST) {\n                  performance.mark('routeChange');\n                }\n\n                _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow;\n                routeProps = {\n                  shallow: shallow\n                };\n\n                if (this._inFlightRoute) {\n                  this.abortComponentLoad(this._inFlightRoute, routeProps);\n                }\n\n                as = addBasePath(addLocale(hasBasePath(as) ? delBasePath(as) : as, options.locale, this.defaultLocale));\n                cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, this.locale);\n                this._inFlightRoute = as; // If the url change is only related to a hash change\n                // We should not proceed. We should only change the state.\n                // WARNING: `_h` is an internal option for handing Next.js client-side\n                // hydration. Your app should _never_ use this property. It may change at\n                // any time without notice.\n\n                if (!(!options._h && this.onlyAHashChange(cleanedAs))) {\n                  _context.next = 34;\n                  break;\n                }\n\n                this.asPath = cleanedAs;\n                Router.events.emit('hashChangeStart', as, routeProps); // TODO: do we need the resolved href when only a hash change?\n\n                this.changeState(method, url, as, options);\n                this.scrollToHash(cleanedAs);\n                this.notify(this.components[this.route], null);\n                Router.events.emit('hashChangeComplete', as, routeProps);\n                return _context.abrupt(\"return\", true);\n\n              case 34:\n                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);\n                pathname = parsed.pathname, query = parsed.query; // The build manifest needs to be loaded before auto-static dynamic pages\n                // get their query parameters to allow ensuring they can be parsed properly\n                // when rewritten to\n\n                _context.prev = 36;\n                _context.next = 39;\n                return this.pageLoader.getPageList();\n\n              case 39:\n                pages = _context.sent;\n                _context.next = 42;\n                return (0, _routeLoader.getClientBuildManifest)();\n\n              case 42:\n                _yield = _context.sent;\n                rewrites = _yield.__rewrites;\n                _context.next = 50;\n                break;\n\n              case 46:\n                _context.prev = 46;\n                _context.t0 = _context[\"catch\"](36);\n                // If we fail to resolve the page list or client-build manifest, we must\n                // do a server-side transition:\n                window.location.href = as;\n                return _context.abrupt(\"return\", false);\n\n              case 50:\n                // If asked to change the current URL we should reload the current page\n                // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n                // We also need to set the method = replaceState always\n                // as this should not go into the history (That's how browsers work)\n                // We should compare the new asPath to the current asPath, not the url\n                if (!this.urlIsNew(cleanedAs) && !localeChange) {\n                  method = 'replaceState';\n                } // we need to resolve the as value using rewrites for dynamic SSG\n                // pages to allow building the data URL correctly\n\n\n                resolvedAs = as; // url and as should always be prefixed with basePath by this\n                // point by either next/link or router.push/replace so strip the\n                // basePath from the pathname to match the pages dir 1-to-1\n\n                pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname;\n\n                if (pathname !== '/_error') {\n                  if (false) {} else {\n                    parsed.pathname = resolveDynamicRoute(pathname, pages);\n\n                    if (parsed.pathname !== pathname) {\n                      pathname = parsed.pathname;\n                      url = (0, _utils.formatWithValidation)(parsed);\n                    }\n                  }\n                }\n\n                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);\n\n                if (isLocalURL(as)) {\n                  _context.next = 60;\n                  break;\n                }\n\n                if (false) {}\n\n                throw new Error(\"Invalid href: \\\"\".concat(url, \"\\\" and as: \\\"\").concat(as, \"\\\", received relative href and external as\") + \"\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as\");\n\n              case 58:\n                window.location.href = as;\n                return _context.abrupt(\"return\", false);\n\n              case 60:\n                resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);\n\n                if (!(0, _isDynamic.isDynamicRoute)(route)) {\n                  _context.next = 76;\n                  break;\n                }\n\n                _parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(resolvedAs);\n                asPathname = _parsedAs.pathname;\n                routeRegex = (0, _routeRegex.getRouteRegex)(route);\n                routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);\n                shouldInterpolate = route === asPathname;\n                interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n\n                if (!(!routeMatch || shouldInterpolate && !interpolatedAs.result)) {\n                  _context.next = 75;\n                  break;\n                }\n\n                missingParams = Object.keys(routeRegex.groups).filter(function (param) {\n                  return !query[param];\n                });\n\n                if (!(missingParams.length > 0)) {\n                  _context.next = 73;\n                  break;\n                }\n\n                if (true) {\n                  console.warn(\"\".concat(shouldInterpolate ? \"Interpolating href\" : \"Mismatching `as` and `href`\", \" failed to manually provide \") + \"the params: \".concat(missingParams.join(', '), \" in the `href`'s `query`\"));\n                }\n\n                throw new Error((shouldInterpolate ? \"The provided `href` (\".concat(url, \") value is missing query values (\").concat(missingParams.join(', '), \") to be interpolated properly. \") : \"The provided `as` value (\".concat(asPathname, \") is incompatible with the `href` value (\").concat(route, \"). \")) + \"Read more: https://nextjs.org/docs/messages/\".concat(shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'));\n\n              case 73:\n                _context.next = 76;\n                break;\n\n              case 75:\n                if (shouldInterpolate) {\n                  as = (0, _utils.formatWithValidation)(Object.assign({}, _parsedAs, {\n                    pathname: interpolatedAs.result,\n                    query: omitParmsFromQuery(query, interpolatedAs.params)\n                  }));\n                } else {\n                  // Merge params into `query`, overwriting any specified in search\n                  Object.assign(query, routeMatch);\n                }\n\n              case 76:\n                Router.events.emit('routeChangeStart', as, routeProps);\n                _context.prev = 77;\n                _context.next = 80;\n                return this.getRouteInfo(route, pathname, query, as, resolvedAs, routeProps);\n\n              case 80:\n                routeInfo = _context.sent;\n                _routeInfo = routeInfo, error = _routeInfo.error, props = _routeInfo.props, __N_SSG = _routeInfo.__N_SSG, __N_SSP = _routeInfo.__N_SSP; // handle redirect on client-transition\n\n                if (!((__N_SSG || __N_SSP) && props)) {\n                  _context.next = 107;\n                  break;\n                }\n\n                if (!(props.pageProps && props.pageProps.__N_REDIRECT)) {\n                  _context.next = 93;\n                  break;\n                }\n\n                destination = props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt\n                // client-navigation if it is falling back to hard navigation if\n                // it's not\n\n                if (!destination.startsWith('/')) {\n                  _context.next = 91;\n                  break;\n                }\n\n                parsedHref = (0, _parseRelativeUrl.parseRelativeUrl)(destination);\n                parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n\n                if (!pages.includes(parsedHref.pathname)) {\n                  _context.next = 91;\n                  break;\n                }\n\n                _prepareUrlAs3 = prepareUrlAs(this, destination, destination), newUrl = _prepareUrlAs3.url, newAs = _prepareUrlAs3.as;\n                return _context.abrupt(\"return\", this.change(method, newUrl, newAs, options));\n\n              case 91:\n                window.location.href = destination;\n                return _context.abrupt(\"return\", new Promise(function () {}));\n\n              case 93:\n                this.isPreview = !!props.__N_PREVIEW; // handle SSG data 404\n\n                if (!(props.notFound === SSG_DATA_NOT_FOUND)) {\n                  _context.next = 107;\n                  break;\n                }\n\n                _context.prev = 95;\n                _context.next = 98;\n                return this.fetchComponent('/404');\n\n              case 98:\n                notFoundRoute = '/404';\n                _context.next = 104;\n                break;\n\n              case 101:\n                _context.prev = 101;\n                _context.t1 = _context[\"catch\"](95);\n                notFoundRoute = '/_error';\n\n              case 104:\n                _context.next = 106;\n                return this.getRouteInfo(notFoundRoute, notFoundRoute, query, as, resolvedAs, {\n                  shallow: false\n                });\n\n              case 106:\n                routeInfo = _context.sent;\n\n              case 107:\n                Router.events.emit('beforeHistoryChange', as, routeProps);\n                this.changeState(method, url, as, options);\n\n                if (true) {\n                  appComp = this.components['/_app'].Component;\n                  window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;\n                } // shallow routing is only allowed for same page URL changes.\n\n\n                isValidShallowRoute = options.shallow && this.route === route;\n\n                if (options._h && pathname === '/_error' && ((_self$__NEXT_DATA__$p = self.__NEXT_DATA__.props) == null ? void 0 : (_self$__NEXT_DATA__$p2 = _self$__NEXT_DATA__$p.pageProps) == null ? void 0 : _self$__NEXT_DATA__$p2.statusCode) === 500 && props != null && props.pageProps) {\n                  // ensure statusCode is still correct for static 500 page\n                  // when updating query information\n                  props.pageProps.statusCode = 500;\n                }\n\n                _context.next = 114;\n                return this.set(route, pathname, query, cleanedAs, routeInfo, forcedScroll || (isValidShallowRoute || !options.scroll ? null : {\n                  x: 0,\n                  y: 0\n                }))[\"catch\"](function (e) {\n                  if (e.cancelled) error = error || e;else throw e;\n                });\n\n              case 114:\n                if (!error) {\n                  _context.next = 117;\n                  break;\n                }\n\n                Router.events.emit('routeChangeError', error, cleanedAs, routeProps);\n                throw error;\n\n              case 117:\n                if (false) {}\n\n                Router.events.emit('routeChangeComplete', as, routeProps);\n                return _context.abrupt(\"return\", true);\n\n              case 122:\n                _context.prev = 122;\n                _context.t2 = _context[\"catch\"](77);\n\n                if (!_context.t2.cancelled) {\n                  _context.next = 126;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 126:\n                throw _context.t2;\n\n              case 127:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[36, 46], [77, 122], [95, 101]]);\n      }));\n\n      function change(_x, _x2, _x3, _x4, _x5) {\n        return _change.apply(this, arguments);\n      }\n\n      return change;\n    }()\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      if (true) {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n\n      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {\n        this._shallow = options.shallow;\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options,\n          __N: true,\n          idx: this._idx = method !== 'pushState' ? this._idx : this._idx + 1\n        }, // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '', as);\n      }\n    }\n  }, {\n    key: \"handleRouteInfoError\",\n    value: function () {\n      var _handleRouteInfoError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err, pathname, query, as, routeProps, loadErrorFail) {\n        var Component, styleSheets, props, _yield$this$fetchComp, routeInfo;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!err.cancelled) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw err;\n\n              case 2:\n                if (!((0, _routeLoader.isAssetError)(err) || loadErrorFail)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                Router.events.emit('routeChangeError', err, as, routeProps); // If we can't load the page it could be one of following reasons\n                //  1. Page doesn't exists\n                //  2. Page does exist in a different zone\n                //  3. Internal error while loading the page\n                // So, doing a hard reload is the proper way to deal with this.\n\n                window.location.href = as; // Changing the URL doesn't block executing the current code path.\n                // So let's throw a cancellation error stop the routing logic.\n\n                throw buildCancellationError();\n\n              case 6:\n                _context2.prev = 6;\n\n                if (!(typeof Component === 'undefined' || typeof styleSheets === 'undefined')) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                ;\n                _context2.next = 11;\n                return this.fetchComponent('/_error');\n\n              case 11:\n                _yield$this$fetchComp = _context2.sent;\n                Component = _yield$this$fetchComp.page;\n                styleSheets = _yield$this$fetchComp.styleSheets;\n\n              case 14:\n                routeInfo = {\n                  props: props,\n                  Component: Component,\n                  styleSheets: styleSheets,\n                  err: err,\n                  error: err\n                };\n\n                if (routeInfo.props) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                _context2.prev = 16;\n                _context2.next = 19;\n                return this.getInitialProps(Component, {\n                  err: err,\n                  pathname: pathname,\n                  query: query\n                });\n\n              case 19:\n                routeInfo.props = _context2.sent;\n                _context2.next = 26;\n                break;\n\n              case 22:\n                _context2.prev = 22;\n                _context2.t0 = _context2[\"catch\"](16);\n                console.error('Error in error page `getInitialProps`: ', _context2.t0);\n                routeInfo.props = {};\n\n              case 26:\n                return _context2.abrupt(\"return\", routeInfo);\n\n              case 29:\n                _context2.prev = 29;\n                _context2.t1 = _context2[\"catch\"](6);\n                return _context2.abrupt(\"return\", this.handleRouteInfoError(_context2.t1, pathname, query, as, routeProps, true));\n\n              case 32:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 29], [16, 22]]);\n      }));\n\n      function handleRouteInfoError(_x6, _x7, _x8, _x9, _x10, _x11) {\n        return _handleRouteInfoError.apply(this, arguments);\n      }\n\n      return handleRouteInfoError;\n    }()\n  }, {\n    key: \"getRouteInfo\",\n    value: function () {\n      var _getRouteInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(route, pathname, query, as, resolvedAs, routeProps) {\n        var _this2 = this;\n\n        var existingRouteInfo, cachedRouteInfo, routeInfo, Component, __N_SSG, __N_SSP, _require, isValidElementType, dataHref, props;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                existingRouteInfo = this.components[route];\n\n                if (!(routeProps.shallow && existingRouteInfo && this.route === route)) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", existingRouteInfo);\n\n              case 4:\n                cachedRouteInfo = existingRouteInfo && 'initial' in existingRouteInfo ? undefined : existingRouteInfo;\n\n                if (!cachedRouteInfo) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.t0 = cachedRouteInfo;\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.next = 11;\n                return this.fetchComponent(route).then(function (res) {\n                  return {\n                    Component: res.page,\n                    styleSheets: res.styleSheets,\n                    __N_SSG: res.mod.__N_SSG,\n                    __N_SSP: res.mod.__N_SSP\n                  };\n                });\n\n              case 11:\n                _context3.t0 = _context3.sent;\n\n              case 12:\n                routeInfo = _context3.t0;\n                Component = routeInfo.Component, __N_SSG = routeInfo.__N_SSG, __N_SSP = routeInfo.__N_SSP;\n\n                if (false) {}\n\n                _require = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\"), isValidElementType = _require.isValidElementType;\n\n                if (isValidElementType(Component)) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n\n              case 18:\n                if (__N_SSG || __N_SSP) {\n                  dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({\n                    pathname: pathname,\n                    query: query\n                  }), resolvedAs, __N_SSG, this.locale);\n                }\n\n                _context3.next = 21;\n                return this._getData(function () {\n                  return __N_SSG ? _this2._getStaticData(dataHref) : __N_SSP ? _this2._getServerData(dataHref) : _this2.getInitialProps(Component, // we provide AppTree later so this needs to be `any`\n                  {\n                    pathname: pathname,\n                    query: query,\n                    asPath: as\n                  });\n                });\n\n              case 21:\n                props = _context3.sent;\n                routeInfo.props = props;\n                this.components[route] = routeInfo;\n                return _context3.abrupt(\"return\", routeInfo);\n\n              case 27:\n                _context3.prev = 27;\n                _context3.t1 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", this.handleRouteInfoError(_context3.t1, pathname, query, as, routeProps));\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 27]]);\n      }));\n\n      function getRouteInfo(_x12, _x13, _x14, _x15, _x16, _x17) {\n        return _getRouteInfo.apply(this, arguments);\n      }\n\n      return getRouteInfo;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data, resetScroll) {\n      this.isFallback = false;\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      return this.notify(data, resetScroll);\n    }\n    /**\n    * Callback to execute before replacing router state\n    * @param cb callback to be executed\n    */\n\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n\n      var _this$asPath$split = this.asPath.split('#'),\n          _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),\n          oldUrlNoHash = _this$asPath$split2[0],\n          oldHash = _this$asPath$split2[1];\n\n      var _as$split = as.split('#'),\n          _as$split2 = _slicedToArray(_as$split, 2),\n          newUrlNoHash = _as$split2[0],\n          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same\n\n\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      } // If the urls are change, there's more than a hash change\n\n\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      } // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n\n\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n          _as$split4 = _slicedToArray(_as$split3, 2),\n          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value or `#top`\n      // To mirror browsers\n\n\n      if (hash === '' || hash === 'top') {\n        window.scrollTo(0, 0);\n        return;\n      } // First we check if the element by id is found\n\n\n      var idEl = document.getElementById(hash);\n\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      } // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n\n\n      var nameEl = document.getElementsByName(hash)[0];\n\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    }\n    /**\n    * Prefetch page code, you may wait for the data during page rendering.\n    * This feature only works in production!\n    * @param url the href of prefetched page\n    * @param asPath the as path of the prefetched page\n    */\n\n  }, {\n    key: \"prefetch\",\n    value: function () {\n      var _prefetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url) {\n        var _this3 = this;\n\n        var asPath,\n            options,\n            parsed,\n            pathname,\n            parsedAs,\n            localePathResult,\n            pages,\n            resolvedAs,\n            rewrites,\n            _yield2,\n            rewritesResult,\n            route,\n            _args4 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                asPath = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : url;\n                options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);\n                pathname = parsed.pathname;\n\n                if (false) {}\n\n                _context4.next = 7;\n                return this.pageLoader.getPageList();\n\n              case 7:\n                pages = _context4.sent;\n                resolvedAs = asPath;\n\n                if (true) {\n                  _context4.next = 19;\n                  break;\n                }\n\n                _context4.next = 12;\n                return (0, _routeLoader.getClientBuildManifest)();\n\n              case 12:\n                _yield2 = _context4.sent;\n                rewrites = _yield2.__rewrites;\n                rewritesResult = (0, _resolveRewrites[\"default\"])(addBasePath(addLocale(asPath, this.locale)), pages, rewrites, parsed.query, function (p) {\n                  return resolveDynamicRoute(p, pages);\n                }, this.locales);\n                resolvedAs = delLocale(delBasePath(rewritesResult.asPath), this.locale);\n\n                if (rewritesResult.matchedPage && rewritesResult.resolvedHref) {\n                  // if this directly matches a page we need to update the href to\n                  // allow the correct page chunk to be loaded\n                  pathname = rewritesResult.resolvedHref;\n                  parsed.pathname = pathname;\n                  url = (0, _utils.formatWithValidation)(parsed);\n                }\n\n                _context4.next = 21;\n                break;\n\n              case 19:\n                parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n\n                if (parsed.pathname !== pathname) {\n                  pathname = parsed.pathname;\n                  url = (0, _utils.formatWithValidation)(parsed);\n                }\n\n              case 21:\n                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname); // Prefetch is not supported in development mode because it would trigger on-demand-entries\n\n                if (false) {}\n\n                return _context4.abrupt(\"return\");\n\n              case 24:\n                _context4.next = 26;\n                return Promise.all([this.pageLoader._isSsg(route).then(function (isSsg) {\n                  return isSsg ? _this3._getStaticData(_this3.pageLoader.getDataHref(url, resolvedAs, true, typeof options.locale !== 'undefined' ? options.locale : _this3.locale)) : false;\n                }), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);\n\n              case 26:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function prefetch(_x18) {\n        return _prefetch.apply(this, arguments);\n      }\n\n      return prefetch;\n    }()\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(route) {\n        var cancelled, cancel, componentResult, error;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                cancelled = false;\n\n                cancel = this.clc = function () {\n                  cancelled = true;\n                };\n\n                _context5.next = 4;\n                return this.pageLoader.loadPage(route);\n\n              case 4:\n                componentResult = _context5.sent;\n\n                if (!cancelled) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n                error.cancelled = true;\n                throw error;\n\n              case 9:\n                if (cancel === this.clc) {\n                  this.clc = null;\n                }\n\n                return _context5.abrupt(\"return\", componentResult);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function fetchComponent(_x19) {\n        return _fetchComponent.apply(this, arguments);\n      }\n\n      return fetchComponent;\n    }()\n  }, {\n    key: \"_getData\",\n    value: function _getData(fn) {\n      var _this4 = this;\n\n      var cancelled = false;\n\n      var cancel = function cancel() {\n        cancelled = true;\n      };\n\n      this.clc = cancel;\n      return fn().then(function (data) {\n        if (cancel === _this4.clc) {\n          _this4.clc = null;\n        }\n\n        if (cancelled) {\n          var err = new Error('Loading initial props cancelled');\n          err.cancelled = true;\n          throw err;\n        }\n\n        return data;\n      });\n    }\n  }, {\n    key: \"_getStaticData\",\n    value: function _getStaticData(dataHref) {\n      var _this5 = this;\n\n      var _URL = new URL(dataHref, window.location.href),\n          cacheKey = _URL.href;\n\n      if (false) {}\n\n      return fetchNextData(dataHref, this.isSsr).then(function (data) {\n        _this5.sdc[cacheKey] = data;\n        return data;\n      });\n    }\n  }, {\n    key: \"_getServerData\",\n    value: function _getServerData(dataHref) {\n      var _this6 = this;\n\n      var _URL2 = new URL(dataHref, window.location.href),\n          resourceKey = _URL2.href;\n\n      if (this.sdr[resourceKey]) {\n        return this.sdr[resourceKey];\n      }\n\n      return this.sdr[resourceKey] = fetchNextData(dataHref, this.isSsr).then(function (data) {\n        delete _this6.sdr[resourceKey];\n        return data;\n      })[\"catch\"](function (err) {\n        delete _this6.sdr[resourceKey];\n        throw err;\n      });\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps(Component, ctx) {\n      var App = this.components['/_app'].Component;\n\n      var AppTree = this._wrapApp(App);\n\n      ctx.AppTree = AppTree;\n      return (0, _utils.loadGetInitialProps)(App, {\n        AppTree: AppTree,\n        Component: Component,\n        router: this,\n        ctx: ctx\n      });\n    }\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as, routeProps) {\n      if (this.clc) {\n        Router.events.emit('routeChangeError', buildCancellationError(), as, routeProps);\n        this.clc();\n        this.clc = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data, resetScroll) {\n      return this.sub(data, this.components['/_app'].Component, resetScroll);\n    }\n  }]);\n\n  return Router;\n}();\n\nexports.default = Router;\nRouter.events = (0, _mitt[\"default\"])();\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/format-url.js ***!
  \***************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.formatUrl = formatUrl;\n\nvar querystring = _interopRequireWildcard(__webpack_require__(/*! ./querystring */ \"./node_modules/next/dist/next-server/lib/router/utils/querystring.js\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nvar slashedProtocols = /https?|ftp|gopher|file/;\n\nfunction formatUrl(urlObj) {\n  var auth = urlObj.auth,\n      hostname = urlObj.hostname;\n  var protocol = urlObj.protocol || '';\n  var pathname = urlObj.pathname || '';\n  var hash = urlObj.hash || '';\n  var query = urlObj.query || '';\n  var host = false;\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';\n\n  if (urlObj.host) {\n    host = auth + urlObj.host;\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? \"[\".concat(hostname, \"]\") : hostname);\n\n    if (urlObj.port) {\n      host += ':' + urlObj.port;\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query));\n  }\n\n  var search = urlObj.search || query && \"?\".concat(query) || '';\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash;\n  if (search && search[0] !== '?') search = '?' + search;\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent);\n  search = search.replace('#', '%23');\n  return \"\".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LXVybC50cz9kNjUwIl0sIm5hbWVzIjpbInNsYXNoZWRQcm90b2NvbHMiLCJwcm90b2NvbCIsInVybE9iaiIsInBhdGhuYW1lIiwiaGFzaCIsInF1ZXJ5IiwiaG9zdCIsImF1dGgiLCJlbmNvZGVVUklDb21wb25lbnQiLCJob3N0bmFtZSIsIlN0cmluZyIsInF1ZXJ5c3RyaW5nIiwic2VhcmNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUF3QkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF4QkEsQyxDQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBTUEsSUFBTUEsZ0JBQWdCLEdBQXRCOztBQUVPLDJCQUFzQztBQUFBLE1BQ3ZDLElBRHVDLEdBQzNDLE1BRDJDLENBQ3ZDLElBRHVDO0FBQUEsTUFDdkMsUUFEdUMsR0FDM0MsTUFEMkMsQ0FDdkMsUUFEdUM7QUFFM0MsTUFBSUMsUUFBUSxHQUFHQyxNQUFNLENBQU5BLFlBQWY7QUFDQSxNQUFJQyxRQUFRLEdBQUdELE1BQU0sQ0FBTkEsWUFBZjtBQUNBLE1BQUlFLElBQUksR0FBR0YsTUFBTSxDQUFOQSxRQUFYO0FBQ0EsTUFBSUcsS0FBSyxHQUFHSCxNQUFNLENBQU5BLFNBQVo7QUFDQSxNQUFJSSxJQUFvQixHQUF4QjtBQUVBQyxNQUFJLEdBQUdBLElBQUksR0FBR0Msa0JBQWtCLENBQWxCQSxJQUFrQixDQUFsQkEsd0JBQUgsTUFBWEQ7O0FBRUEsTUFBSUwsTUFBTSxDQUFWLE1BQWlCO0FBQ2ZJLFFBQUksR0FBR0MsSUFBSSxHQUFHTCxNQUFNLENBQXBCSTtBQURGLFNBRU8sY0FBYztBQUNuQkEsUUFBSSxHQUFHQyxJQUFJLElBQUksQ0FBQ0UsUUFBUSxDQUFSQSxRQUFELEdBQUNBLENBQUQsK0JBQWZILFFBQVcsQ0FBWEE7O0FBQ0EsUUFBSUosTUFBTSxDQUFWLE1BQWlCO0FBQ2ZJLFVBQUksSUFBSSxNQUFNSixNQUFNLENBQXBCSTtBQUVIO0FBRUQ7O0FBQUEsTUFBSUQsS0FBSyxJQUFJLGlCQUFiLFVBQXdDO0FBQ3RDQSxTQUFLLEdBQUdLLE1BQU0sQ0FBQ0MsV0FBVyxDQUFYQSx1QkFBZk4sS0FBZU0sQ0FBRCxDQUFkTjtBQUdGOztBQUFBLE1BQUlPLE1BQU0sR0FBR1YsTUFBTSxDQUFOQSxVQUFrQkcsS0FBSyxlQUF2QkgsS0FBdUIsQ0FBdkJBLElBQWI7QUFFQSxNQUFJRCxRQUFRLElBQUlBLFFBQVEsQ0FBUkEsT0FBZ0IsQ0FBaEJBLE9BQWhCLEtBQTZDQSxRQUFRLElBQVJBOztBQUU3QyxNQUNFQyxNQUFNLENBQU5BLFdBQ0MsQ0FBQyxhQUFhRixnQkFBZ0IsQ0FBaEJBLEtBQWQsUUFBY0EsQ0FBZCxLQUFrRE0sSUFBSSxLQUZ6RCxPQUdFO0FBQ0FBLFFBQUksR0FBRyxRQUFRQSxJQUFJLElBQW5CQSxFQUFPLENBQVBBO0FBQ0EsUUFBSUgsUUFBUSxJQUFJQSxRQUFRLENBQVJBLENBQVEsQ0FBUkEsS0FBaEIsS0FBcUNBLFFBQVEsR0FBRyxNQUFYQTtBQUx2QyxTQU1PLElBQUksQ0FBSixNQUFXO0FBQ2hCRyxRQUFJLEdBQUpBO0FBR0Y7O0FBQUEsTUFBSUYsSUFBSSxJQUFJQSxJQUFJLENBQUpBLENBQUksQ0FBSkEsS0FBWixLQUE2QkEsSUFBSSxHQUFHLE1BQVBBO0FBQzdCLE1BQUlRLE1BQU0sSUFBSUEsTUFBTSxDQUFOQSxDQUFNLENBQU5BLEtBQWQsS0FBaUNBLE1BQU0sR0FBRyxNQUFUQTtBQUVqQ1QsVUFBUSxHQUFHQSxRQUFRLENBQVJBLGlCQUFYQSxrQkFBV0EsQ0FBWEE7QUFDQVMsUUFBTSxHQUFHQSxNQUFNLENBQU5BLGFBQVRBLEtBQVNBLENBQVRBO0FBRUEsbUJBQVVYLFFBQVYsU0FBcUJLLElBQXJCLFNBQTRCSCxRQUE1QixTQUF1Q1MsTUFBdkM7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9mb3JtYXQtdXJsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRm9ybWF0IGZ1bmN0aW9uIG1vZGlmaWVkIGZyb20gbm9kZWpzXG4vLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHsgVXJsT2JqZWN0IH0gZnJvbSAndXJsJ1xuaW1wb3J0IHsgUGFyc2VkVXJsUXVlcnkgfSBmcm9tICdxdWVyeXN0cmluZydcbmltcG9ydCAqIGFzIHF1ZXJ5c3RyaW5nIGZyb20gJy4vcXVlcnlzdHJpbmcnXG5cbmNvbnN0IHNsYXNoZWRQcm90b2NvbHMgPSAvaHR0cHM/fGZ0cHxnb3BoZXJ8ZmlsZS9cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFVybCh1cmxPYmo6IFVybE9iamVjdCkge1xuICBsZXQgeyBhdXRoLCBob3N0bmFtZSB9ID0gdXJsT2JqXG4gIGxldCBwcm90b2NvbCA9IHVybE9iai5wcm90b2NvbCB8fCAnJ1xuICBsZXQgcGF0aG5hbWUgPSB1cmxPYmoucGF0aG5hbWUgfHwgJydcbiAgbGV0IGhhc2ggPSB1cmxPYmouaGFzaCB8fCAnJ1xuICBsZXQgcXVlcnkgPSB1cmxPYmoucXVlcnkgfHwgJydcbiAgbGV0IGhvc3Q6IHN0cmluZyB8IGZhbHNlID0gZmFsc2VcblxuICBhdXRoID0gYXV0aCA/IGVuY29kZVVSSUNvbXBvbmVudChhdXRoKS5yZXBsYWNlKC8lM0EvaSwgJzonKSArICdAJyA6ICcnXG5cbiAgaWYgKHVybE9iai5ob3N0KSB7XG4gICAgaG9zdCA9IGF1dGggKyB1cmxPYmouaG9zdFxuICB9IGVsc2UgaWYgKGhvc3RuYW1lKSB7XG4gICAgaG9zdCA9IGF1dGggKyAofmhvc3RuYW1lLmluZGV4T2YoJzonKSA/IGBbJHtob3N0bmFtZX1dYCA6IGhvc3RuYW1lKVxuICAgIGlmICh1cmxPYmoucG9ydCkge1xuICAgICAgaG9zdCArPSAnOicgKyB1cmxPYmoucG9ydFxuICAgIH1cbiAgfVxuXG4gIGlmIChxdWVyeSAmJiB0eXBlb2YgcXVlcnkgPT09ICdvYmplY3QnKSB7XG4gICAgcXVlcnkgPSBTdHJpbmcocXVlcnlzdHJpbmcudXJsUXVlcnlUb1NlYXJjaFBhcmFtcyhxdWVyeSBhcyBQYXJzZWRVcmxRdWVyeSkpXG4gIH1cblxuICBsZXQgc2VhcmNoID0gdXJsT2JqLnNlYXJjaCB8fCAocXVlcnkgJiYgYD8ke3F1ZXJ5fWApIHx8ICcnXG5cbiAgaWYgKHByb3RvY29sICYmIHByb3RvY29sLnN1YnN0cigtMSkgIT09ICc6JykgcHJvdG9jb2wgKz0gJzonXG5cbiAgaWYgKFxuICAgIHVybE9iai5zbGFzaGVzIHx8XG4gICAgKCghcHJvdG9jb2wgfHwgc2xhc2hlZFByb3RvY29scy50ZXN0KHByb3RvY29sKSkgJiYgaG9zdCAhPT0gZmFsc2UpXG4gICkge1xuICAgIGhvc3QgPSAnLy8nICsgKGhvc3QgfHwgJycpXG4gICAgaWYgKHBhdGhuYW1lICYmIHBhdGhuYW1lWzBdICE9PSAnLycpIHBhdGhuYW1lID0gJy8nICsgcGF0aG5hbWVcbiAgfSBlbHNlIGlmICghaG9zdCkge1xuICAgIGhvc3QgPSAnJ1xuICB9XG5cbiAgaWYgKGhhc2ggJiYgaGFzaFswXSAhPT0gJyMnKSBoYXNoID0gJyMnICsgaGFzaFxuICBpZiAoc2VhcmNoICYmIHNlYXJjaFswXSAhPT0gJz8nKSBzZWFyY2ggPSAnPycgKyBzZWFyY2hcblxuICBwYXRobmFtZSA9IHBhdGhuYW1lLnJlcGxhY2UoL1s/I10vZywgZW5jb2RlVVJJQ29tcG9uZW50KVxuICBzZWFyY2ggPSBzZWFyY2gucmVwbGFjZSgnIycsICclMjMnKVxuXG4gIHJldHVybiBgJHtwcm90b2NvbH0ke2hvc3R9JHtwYXRobmFtZX0ke3NlYXJjaH0ke2hhc2h9YFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/format-url.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js ***!
  \******************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.default = getAssetPathFromRoute; // Translates a logical route into its pages asset path (relative from a common prefix)\n// \"asset path\" being its javascript file, data file, prerendered html,...\n\nfunction getAssetPathFromRoute(route) {\n  var ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var path = route === '/' ? '/index' : /^\\/index(\\/|$)/.test(route) ? \"/index\".concat(route) : \"\".concat(route);\n  return path + ext;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LWFzc2V0LXBhdGgtZnJvbS1yb3V0ZS50cz80ZGNiIl0sIm5hbWVzIjpbImV4dCIsInBhdGgiLCJyb3V0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozt5Q0FBQTtBQUNBOztBQUNlLHNDQUdMO0FBQUEsTUFEUkEsR0FDUSx1RUFISyxFQUdMO0FBQ1IsTUFBTUMsSUFBSSxHQUNSQyxLQUFLLEtBQUxBLGlCQUVJLGtFQUhOLEtBR00sQ0FITjtBQU1BLFNBQU9ELElBQUksR0FBWDtBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvcm91dGVyL3V0aWxzL2dldC1hc3NldC1wYXRoLWZyb20tcm91dGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUcmFuc2xhdGVzIGEgbG9naWNhbCByb3V0ZSBpbnRvIGl0cyBwYWdlcyBhc3NldCBwYXRoIChyZWxhdGl2ZSBmcm9tIGEgY29tbW9uIHByZWZpeClcbi8vIFwiYXNzZXQgcGF0aFwiIGJlaW5nIGl0cyBqYXZhc2NyaXB0IGZpbGUsIGRhdGEgZmlsZSwgcHJlcmVuZGVyZWQgaHRtbCwuLi5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEFzc2V0UGF0aEZyb21Sb3V0ZShcbiAgcm91dGU6IHN0cmluZyxcbiAgZXh0OiBzdHJpbmcgPSAnJ1xuKTogc3RyaW5nIHtcbiAgY29uc3QgcGF0aCA9XG4gICAgcm91dGUgPT09ICcvJ1xuICAgICAgPyAnL2luZGV4J1xuICAgICAgOiAvXlxcL2luZGV4KFxcL3wkKS8udGVzdChyb3V0ZSlcbiAgICAgID8gYC9pbmRleCR7cm91dGV9YFxuICAgICAgOiBgJHtyb3V0ZX1gXG4gIHJldHVybiBwYXRoICsgZXh0XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string\n\nvar TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/;\n\nfunction isDynamicRoute(route) {\n  return TEST_ROUTE.test(route);\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvaXMtZHluYW1pYy50cz9kYTU2Il0sIm5hbWVzIjpbIlRFU1RfUk9VVEUiXSwibWFwcGluZ3MiOiI7Ozs7eUNBQUE7O0FBQ0EsSUFBTUEsVUFBVSxHQUFoQjs7QUFFTywrQkFBZ0Q7QUFDckQsU0FBT0EsVUFBVSxDQUFWQSxLQUFQLEtBQU9BLENBQVA7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9pcy1keW5hbWljLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSWRlbnRpZnkgL1twYXJhbV0vIGluIHJvdXRlIHN0cmluZ1xuY29uc3QgVEVTVF9ST1VURSA9IC9cXC9cXFtbXi9dKz9cXF0oPz1cXC98JCkvXG5cbmV4cG9ydCBmdW5jdGlvbiBpc0R5bmFtaWNSb3V0ZShyb3V0ZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gIHJldHVybiBURVNUX1JPVVRFLnRlc3Qocm91dGUpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js ***!
  \***********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.parseRelativeUrl = parseRelativeUrl;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"./node_modules/next/dist/next-server/lib/utils.js\");\n\nvar _querystring = __webpack_require__(/*! ./querystring */ \"./node_modules/next/dist/next-server/lib/router/utils/querystring.js\");\n/**\n* Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n* (e.g. `./hello`) then at least base must be.\n* Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n* the current origin will be parsed as relative\n*/\n\n\nfunction parseRelativeUrl(url, base) {\n  var globalBase = new URL( false ? 0 : (0, _utils.getLocationOrigin)());\n  var resolvedBase = base ? new URL(base, globalBase) : globalBase;\n\n  var _URL = new URL(url, resolvedBase),\n      pathname = _URL.pathname,\n      searchParams = _URL.searchParams,\n      search = _URL.search,\n      hash = _URL.hash,\n      href = _URL.href,\n      origin = _URL.origin;\n\n  if (origin !== globalBase.origin) {\n    throw new Error(\"invariant: invalid relative URL, router received \".concat(url));\n  }\n\n  return {\n    pathname: pathname,\n    query: (0, _querystring.searchParamsToUrlQuery)(searchParams),\n    search: search,\n    hash: hash,\n    href: href.slice(globalBase.origin.length)\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcmVsYXRpdmUtdXJsLnRzPzJlOGQiXSwibmFtZXMiOlsiZ2xvYmFsQmFzZSIsInJlc29sdmVkQmFzZSIsImJhc2UiLCJvcmlnaW4iLCJwYXRobmFtZSIsInF1ZXJ5Iiwic2VhcmNoIiwiaGFzaCIsImhyZWYiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDTyxxQ0FBc0Q7QUFDM0QsTUFBTUEsVUFBVSxHQUFHLFFBQ2pCLGFBQTZDLFdBRC9DLGlCQUMrQyxHQUQ1QixDQUFuQjtBQUdBLE1BQU1DLFlBQVksR0FBR0MsSUFBSSxHQUFHLGNBQUgsVUFBRyxDQUFILEdBQXpCOztBQUoyRCxhQUtJLGFBQS9ELFlBQStELENBTEo7QUFBQSxNQUtyRCxRQUxxRCxRQUtyRCxRQUxxRDtBQUFBLE1BS3JELFlBTHFELFFBS3JELFlBTHFEO0FBQUEsTUFLckQsTUFMcUQsUUFLckQsTUFMcUQ7QUFBQSxNQUtyRCxJQUxxRCxRQUtyRCxJQUxxRDtBQUFBLE1BS3JELElBTHFELFFBS3JELElBTHFEO0FBQUEsTUFLckQsTUFMcUQsUUFLckQsTUFMcUQ7O0FBUzNELE1BQUlDLE1BQU0sS0FBS0gsVUFBVSxDQUF6QixRQUFrQztBQUNoQyxVQUFNLHFFQUFOLEdBQU0sRUFBTjtBQUVGOztBQUFBLFNBQU87QUFDTEksWUFESyxFQUNMQSxRQURLO0FBRUxDLFNBQUssRUFBRSx5Q0FGRixZQUVFLENBRkY7QUFHTEMsVUFISyxFQUdMQSxNQUhLO0FBSUxDLFFBSkssRUFJTEEsSUFKSztBQUtMQyxRQUFJLEVBQUVBLElBQUksQ0FBSkEsTUFBV1IsVUFBVSxDQUFWQSxPQUxuQixNQUtRUTtBQUxELEdBQVA7QUFPRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9wYXJzZS1yZWxhdGl2ZS11cmwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRMb2NhdGlvbk9yaWdpbiB9IGZyb20gJy4uLy4uL3V0aWxzJ1xuaW1wb3J0IHsgc2VhcmNoUGFyYW1zVG9VcmxRdWVyeSB9IGZyb20gJy4vcXVlcnlzdHJpbmcnXG5cbi8qKlxuICogUGFyc2VzIHBhdGgtcmVsYXRpdmUgdXJscyAoZS5nLiBgL2hlbGxvL3dvcmxkP2Zvbz1iYXJgKS4gSWYgdXJsIGlzbid0IHBhdGgtcmVsYXRpdmVcbiAqIChlLmcuIGAuL2hlbGxvYCkgdGhlbiBhdCBsZWFzdCBiYXNlIG11c3QgYmUuXG4gKiBBYnNvbHV0ZSB1cmxzIGFyZSByZWplY3RlZCB3aXRoIG9uZSBleGNlcHRpb24sIGluIHRoZSBicm93c2VyLCBhYnNvbHV0ZSB1cmxzIHRoYXQgYXJlIG9uXG4gKiB0aGUgY3VycmVudCBvcmlnaW4gd2lsbCBiZSBwYXJzZWQgYXMgcmVsYXRpdmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUmVsYXRpdmVVcmwodXJsOiBzdHJpbmcsIGJhc2U/OiBzdHJpbmcpIHtcbiAgY29uc3QgZ2xvYmFsQmFzZSA9IG5ldyBVUkwoXG4gICAgdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgPyAnaHR0cDovL24nIDogZ2V0TG9jYXRpb25PcmlnaW4oKVxuICApXG4gIGNvbnN0IHJlc29sdmVkQmFzZSA9IGJhc2UgPyBuZXcgVVJMKGJhc2UsIGdsb2JhbEJhc2UpIDogZ2xvYmFsQmFzZVxuICBjb25zdCB7IHBhdGhuYW1lLCBzZWFyY2hQYXJhbXMsIHNlYXJjaCwgaGFzaCwgaHJlZiwgb3JpZ2luIH0gPSBuZXcgVVJMKFxuICAgIHVybCxcbiAgICByZXNvbHZlZEJhc2VcbiAgKVxuICBpZiAob3JpZ2luICE9PSBnbG9iYWxCYXNlLm9yaWdpbikge1xuICAgIHRocm93IG5ldyBFcnJvcihgaW52YXJpYW50OiBpbnZhbGlkIHJlbGF0aXZlIFVSTCwgcm91dGVyIHJlY2VpdmVkICR7dXJsfWApXG4gIH1cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZSxcbiAgICBxdWVyeTogc2VhcmNoUGFyYW1zVG9VcmxRdWVyeShzZWFyY2hQYXJhbXMpLFxuICAgIHNlYXJjaCxcbiAgICBoYXNoLFxuICAgIGhyZWY6IGhyZWYuc2xpY2UoZ2xvYmFsQmFzZS5vcmlnaW4ubGVuZ3RoKSxcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/querystring.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nvar _slicedToArray = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray */ \"./node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nexports.__esModule = true;\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\n\nfunction searchParamsToUrlQuery(searchParams) {\n  var query = {};\n  searchParams.forEach(function (value, key) {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value;\n    } else if (Array.isArray(query[key])) {\n      ;\n      query[key].push(value);\n    } else {\n      query[key] = [query[key], value];\n    }\n  });\n  return query;\n}\n\nfunction stringifyUrlQueryParam(param) {\n  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n    return String(param);\n  } else {\n    return '';\n  }\n}\n\nfunction urlQueryToSearchParams(urlQuery) {\n  var result = new URLSearchParams();\n  Object.entries(urlQuery).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (Array.isArray(value)) {\n      value.forEach(function (item) {\n        return result.append(key, stringifyUrlQueryParam(item));\n      });\n    } else {\n      result.set(key, stringifyUrlQueryParam(value));\n    }\n  });\n  return result;\n}\n\nfunction assign(target) {\n  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    searchParamsList[_key - 1] = arguments[_key];\n  }\n\n  searchParamsList.forEach(function (searchParams) {\n    Array.from(searchParams.keys()).forEach(function (key) {\n      return target[\"delete\"](key);\n    });\n    searchParams.forEach(function (value, key) {\n      return target.append(key, value);\n    });\n  });\n  return target;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcudHM/NWU2YSJdLCJuYW1lcyI6WyJxdWVyeSIsInNlYXJjaFBhcmFtcyIsIkFycmF5IiwiaXNOYU4iLCJTdHJpbmciLCJyZXN1bHQiLCJPYmplY3QiLCJ2YWx1ZSIsIml0ZW0iLCJzdHJpbmdpZnlVcmxRdWVyeVBhcmFtIiwic2VhcmNoUGFyYW1zTGlzdCIsImtleSIsInRhcmdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVPLDhDQUVXO0FBQ2hCLE1BQU1BLEtBQXFCLEdBQTNCO0FBQ0FDLGNBQVksQ0FBWkEsUUFBcUIsc0JBQWdCO0FBQ25DLFFBQUksT0FBT0QsS0FBSyxDQUFaLEdBQVksQ0FBWixLQUFKLGFBQXVDO0FBQ3JDQSxXQUFLLENBQUxBLEdBQUssQ0FBTEE7QUFERixXQUVPLElBQUlFLEtBQUssQ0FBTEEsUUFBY0YsS0FBSyxDQUF2QixHQUF1QixDQUFuQkUsQ0FBSixFQUErQjtBQUNwQztBQUFFRixXQUFLLENBQU4sR0FBTSxDQUFMQSxDQUFELElBQUNBLENBQUQsS0FBQ0E7QUFERyxXQUVBO0FBQ0xBLFdBQUssQ0FBTEEsR0FBSyxDQUFMQSxHQUFhLENBQUNBLEtBQUssQ0FBTixHQUFNLENBQU4sRUFBYkEsS0FBYSxDQUFiQTtBQUVIO0FBUkRDO0FBU0E7QUFHRjs7QUFBQSx1Q0FBdUQ7QUFDckQsTUFDRSw2QkFDQyw2QkFBNkIsQ0FBQ0UsS0FBSyxDQURwQyxLQUNvQyxDQURwQyxJQUVBLGlCQUhGLFdBSUU7QUFDQSxXQUFPQyxNQUFNLENBQWIsS0FBYSxDQUFiO0FBTEYsU0FNTztBQUNMO0FBRUg7QUFFTTs7QUFBQSwwQ0FFWTtBQUNqQixNQUFNQyxNQUFNLEdBQUcsSUFBZixlQUFlLEVBQWY7QUFDQUMsUUFBTSxDQUFOQSwwQkFBaUMsZ0JBQWtCO0FBQUE7QUFBQSxRQUFqQixHQUFpQjtBQUFBLFFBQWxCLEtBQWtCOztBQUNqRCxRQUFJSixLQUFLLENBQUxBLFFBQUosS0FBSUEsQ0FBSixFQUEwQjtBQUN4QkssV0FBSyxDQUFMQSxRQUFlQyxjQUFEO0FBQUEsZUFBVUgsTUFBTSxDQUFOQSxZQUFtQkksc0JBQXNCLENBQWpFRixJQUFpRSxDQUF6Q0YsQ0FBVjtBQUFBLE9BQWRFO0FBREYsV0FFTztBQUNMRixZQUFNLENBQU5BLFNBQWdCSSxzQkFBc0IsQ0FBdENKLEtBQXNDLENBQXRDQTtBQUVIO0FBTkRDO0FBT0E7QUFHSzs7QUFBQSx3QkFHWTtBQUFBLG9DQUhaLGdCQUdZO0FBSFosb0JBR1k7QUFBQTs7QUFDakJJLGtCQUFnQixDQUFoQkEsUUFBMEJULHNCQUFELEVBQWtCO0FBQ3pDQyxTQUFLLENBQUxBLEtBQVdELFlBQVksQ0FBdkJDLElBQVdELEVBQVhDLFVBQXlDUyxhQUFEO0FBQUEsYUFBU0MsaUJBQWpEVixHQUFpRFUsQ0FBVDtBQUFBLEtBQXhDVjtBQUNBRCxnQkFBWSxDQUFaQSxRQUFxQjtBQUFBLGFBQWdCVyxNQUFNLENBQU5BLFlBQXJDWCxLQUFxQ1csQ0FBaEI7QUFBQSxLQUFyQlg7QUFGRlM7QUFJQTtBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvcm91dGVyL3V0aWxzL3F1ZXJ5c3RyaW5nLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFyc2VkVXJsUXVlcnkgfSBmcm9tICdxdWVyeXN0cmluZydcblxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaFBhcmFtc1RvVXJsUXVlcnkoXG4gIHNlYXJjaFBhcmFtczogVVJMU2VhcmNoUGFyYW1zXG4pOiBQYXJzZWRVcmxRdWVyeSB7XG4gIGNvbnN0IHF1ZXJ5OiBQYXJzZWRVcmxRdWVyeSA9IHt9XG4gIHNlYXJjaFBhcmFtcy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgaWYgKHR5cGVvZiBxdWVyeVtrZXldID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcXVlcnlba2V5XSA9IHZhbHVlXG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHF1ZXJ5W2tleV0pKSB7XG4gICAgICA7KHF1ZXJ5W2tleV0gYXMgc3RyaW5nW10pLnB1c2godmFsdWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIHF1ZXJ5W2tleV0gPSBbcXVlcnlba2V5XSBhcyBzdHJpbmcsIHZhbHVlXVxuICAgIH1cbiAgfSlcbiAgcmV0dXJuIHF1ZXJ5XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0ocGFyYW06IHN0cmluZyk6IHN0cmluZyB7XG4gIGlmIChcbiAgICB0eXBlb2YgcGFyYW0gPT09ICdzdHJpbmcnIHx8XG4gICAgKHR5cGVvZiBwYXJhbSA9PT0gJ251bWJlcicgJiYgIWlzTmFOKHBhcmFtKSkgfHxcbiAgICB0eXBlb2YgcGFyYW0gPT09ICdib29sZWFuJ1xuICApIHtcbiAgICByZXR1cm4gU3RyaW5nKHBhcmFtKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiAnJ1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cmxRdWVyeVRvU2VhcmNoUGFyYW1zKFxuICB1cmxRdWVyeTogUGFyc2VkVXJsUXVlcnlcbik6IFVSTFNlYXJjaFBhcmFtcyB7XG4gIGNvbnN0IHJlc3VsdCA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKVxuICBPYmplY3QuZW50cmllcyh1cmxRdWVyeSkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICB2YWx1ZS5mb3JFYWNoKChpdGVtKSA9PiByZXN1bHQuYXBwZW5kKGtleSwgc3RyaW5naWZ5VXJsUXVlcnlQYXJhbShpdGVtKSkpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdC5zZXQoa2V5LCBzdHJpbmdpZnlVcmxRdWVyeVBhcmFtKHZhbHVlKSlcbiAgICB9XG4gIH0pXG4gIHJldHVybiByZXN1bHRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2lnbihcbiAgdGFyZ2V0OiBVUkxTZWFyY2hQYXJhbXMsXG4gIC4uLnNlYXJjaFBhcmFtc0xpc3Q6IFVSTFNlYXJjaFBhcmFtc1tdXG4pOiBVUkxTZWFyY2hQYXJhbXMge1xuICBzZWFyY2hQYXJhbXNMaXN0LmZvckVhY2goKHNlYXJjaFBhcmFtcykgPT4ge1xuICAgIEFycmF5LmZyb20oc2VhcmNoUGFyYW1zLmtleXMoKSkuZm9yRWFjaCgoa2V5KSA9PiB0YXJnZXQuZGVsZXRlKGtleSkpXG4gICAgc2VhcmNoUGFyYW1zLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHRhcmdldC5hcHBlbmQoa2V5LCB2YWx1ZSkpXG4gIH0pXG4gIHJldHVybiB0YXJnZXRcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/querystring.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.getRouteMatcher = getRouteMatcher;\n\nfunction getRouteMatcher(routeRegex) {\n  var re = routeRegex.re,\n      groups = routeRegex.groups;\n  return function (pathname) {\n    var routeMatch = re.exec(pathname);\n\n    if (!routeMatch) {\n      return false;\n    }\n\n    var decode = function decode(param) {\n      try {\n        return decodeURIComponent(param);\n      } catch (_) {\n        var err = new Error('failed to decode param');\n        err.code = 'DECODE_FAILED';\n        throw err;\n      }\n    };\n\n    var params = {};\n    Object.keys(groups).forEach(function (slugName) {\n      var g = groups[slugName];\n      var m = routeMatch[g.pos];\n\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/') ? m.split('/').map(function (entry) {\n          return decode(entry);\n        }) : g.repeat ? [decode(m)] : decode(m);\n      }\n    });\n    return params;\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcm91dGUtbWF0Y2hlci50cz85MjZkIl0sIm5hbWVzIjpbInBhdGhuYW1lIiwicm91dGVNYXRjaCIsInJlIiwiZGVjb2RlIiwicGFyYW0iLCJkZWNvZGVVUklDb21wb25lbnQiLCJlcnIiLCJwYXJhbXMiLCJPYmplY3QiLCJzbHVnTmFtZSIsImciLCJncm91cHMiLCJtIiwiZW50cnkiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVPLHFDQUF1RTtBQUFBLE1BQ3RFLEVBRHNFLEdBQzVFLFVBRDRFLENBQ3RFLEVBRHNFO0FBQUEsTUFDdEUsTUFEc0UsR0FDNUUsVUFENEUsQ0FDdEUsTUFEc0U7QUFFNUUsU0FBUUEsa0JBQUQsRUFBeUM7QUFDOUMsUUFBTUMsVUFBVSxHQUFHQyxFQUFFLENBQUZBLEtBQW5CLFFBQW1CQSxDQUFuQjs7QUFDQSxRQUFJLENBQUosWUFBaUI7QUFDZjtBQUdGOztBQUFBLFFBQU1DLE1BQU0sR0FBSUMsU0FBVkQsTUFBVUMsTUFBRCxFQUFtQjtBQUNoQyxVQUFJO0FBQ0YsZUFBT0Msa0JBQWtCLENBQXpCLEtBQXlCLENBQXpCO0FBQ0EsT0FGRixDQUVFLFVBQVU7QUFDVixZQUFNQyxHQUE4QixHQUFHLFVBQXZDLHdCQUF1QyxDQUF2QztBQUdBQSxXQUFHLENBQUhBO0FBQ0E7QUFFSDtBQVZEOztBQVdBLFFBQU1DLE1BQWtELEdBQXhEO0FBRUFDLFVBQU0sQ0FBTkEscUJBQTZCQyxrQkFBRCxFQUFzQjtBQUNoRCxVQUFNQyxDQUFDLEdBQUdDLE1BQU0sQ0FBaEIsUUFBZ0IsQ0FBaEI7QUFDQSxVQUFNQyxDQUFDLEdBQUdYLFVBQVUsQ0FBQ1MsQ0FBQyxDQUF0QixHQUFvQixDQUFwQjs7QUFDQSxVQUFJRSxDQUFDLEtBQUwsV0FBcUI7QUFDbkJMLGNBQU0sQ0FBTkEsUUFBTSxDQUFOQSxHQUFtQixDQUFDSyxDQUFDLENBQURBLFFBQUQsR0FBQ0EsQ0FBRCxHQUNmQSxDQUFDLENBQURBLGVBQWtCQyxlQUFEO0FBQUEsaUJBQVdWLE1BQU0sQ0FEbkIsS0FDbUIsQ0FBakI7QUFBQSxTQUFqQlMsQ0FEZSxHQUVmRixDQUFDLENBQURBLFNBQ0EsQ0FBQ1AsTUFBTSxDQURQTyxDQUNPLENBQVAsQ0FEQUEsR0FFQVAsTUFBTSxDQUpWSSxDQUlVLENBSlZBO0FBTUg7QUFWREM7QUFXQTtBQTlCRjtBQWdDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9yb3V0ZS1tYXRjaGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Um91dGVSZWdleCB9IGZyb20gJy4vcm91dGUtcmVnZXgnXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRSb3V0ZU1hdGNoZXIocm91dGVSZWdleDogUmV0dXJuVHlwZTx0eXBlb2YgZ2V0Um91dGVSZWdleD4pIHtcbiAgY29uc3QgeyByZSwgZ3JvdXBzIH0gPSByb3V0ZVJlZ2V4XG4gIHJldHVybiAocGF0aG5hbWU6IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpID0+IHtcbiAgICBjb25zdCByb3V0ZU1hdGNoID0gcmUuZXhlYyhwYXRobmFtZSEpXG4gICAgaWYgKCFyb3V0ZU1hdGNoKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICBjb25zdCBkZWNvZGUgPSAocGFyYW06IHN0cmluZykgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChwYXJhbSlcbiAgICAgIH0gY2F0Y2ggKF8pIHtcbiAgICAgICAgY29uc3QgZXJyOiBFcnJvciAmIHsgY29kZT86IHN0cmluZyB9ID0gbmV3IEVycm9yKFxuICAgICAgICAgICdmYWlsZWQgdG8gZGVjb2RlIHBhcmFtJ1xuICAgICAgICApXG4gICAgICAgIGVyci5jb2RlID0gJ0RFQ09ERV9GQUlMRUQnXG4gICAgICAgIHRocm93IGVyclxuICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBwYXJhbXM6IHsgW3BhcmFtTmFtZTogc3RyaW5nXTogc3RyaW5nIHwgc3RyaW5nW10gfSA9IHt9XG5cbiAgICBPYmplY3Qua2V5cyhncm91cHMpLmZvckVhY2goKHNsdWdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgIGNvbnN0IGcgPSBncm91cHNbc2x1Z05hbWVdXG4gICAgICBjb25zdCBtID0gcm91dGVNYXRjaFtnLnBvc11cbiAgICAgIGlmIChtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcGFyYW1zW3NsdWdOYW1lXSA9IH5tLmluZGV4T2YoJy8nKVxuICAgICAgICAgID8gbS5zcGxpdCgnLycpLm1hcCgoZW50cnkpID0+IGRlY29kZShlbnRyeSkpXG4gICAgICAgICAgOiBnLnJlcGVhdFxuICAgICAgICAgID8gW2RlY29kZShtKV1cbiAgICAgICAgICA6IGRlY29kZShtKVxuICAgICAgfVxuICAgIH0pXG4gICAgcmV0dXJuIHBhcmFtc1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nexports.__esModule = true;\nexports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module\n// to reduce bytes\n\nfunction escapeRegex(str) {\n  return str.replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&');\n}\n\nfunction parseParameter(param) {\n  var optional = param.startsWith('[') && param.endsWith(']');\n\n  if (optional) {\n    param = param.slice(1, -1);\n  }\n\n  var repeat = param.startsWith('...');\n\n  if (repeat) {\n    param = param.slice(3);\n  }\n\n  return {\n    key: param,\n    repeat: repeat,\n    optional: optional\n  };\n}\n\nfunction getRouteRegex(normalizedRoute) {\n  var segments = (normalizedRoute.replace(/\\/$/, '') || '/').slice(1).split('/');\n  var groups = {};\n  var groupIndex = 1;\n  var parameterizedRoute = segments.map(function (segment) {\n    if (segment.startsWith('[') && segment.endsWith(']')) {\n      var _parseParameter = parseParameter(segment.slice(1, -1)),\n          key = _parseParameter.key,\n          optional = _parseParameter.optional,\n          repeat = _parseParameter.repeat;\n\n      groups[key] = {\n        pos: groupIndex++,\n        repeat: repeat,\n        optional: optional\n      };\n      return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';\n    } else {\n      return \"/\".concat(escapeRegex(segment));\n    }\n  }).join(''); // dead code eliminate for browser since it's only needed\n  // while generating routes-manifest\n\n  if (false) { var namedParameterizedRoute, routeKeys, getSafeRouteKey, routeKeyCharLength, routeKeyCharCode; }\n\n  return {\n    re: new RegExp(\"^\".concat(parameterizedRoute, \"(?:/)?$\")),\n    groups: groups\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcm91dGUtcmVnZXgudHM/NTdlNiJdLCJuYW1lcyI6WyJzdHIiLCJvcHRpb25hbCIsInBhcmFtIiwicmVwZWF0Iiwia2V5Iiwic2VnbWVudHMiLCJub3JtYWxpemVkUm91dGUiLCJncm91cHMiLCJncm91cEluZGV4IiwicGFyYW1ldGVyaXplZFJvdXRlIiwic2VnbWVudCIsInBhcnNlUGFyYW1ldGVyIiwicG9zIiwiZXNjYXBlUmVnZXgiLCJyZSJdLCJtYXBwaW5ncyI6Ijs7Ozt1Q0FNQTtBQUNBOztBQUNBLDBCQUFrQztBQUNoQyxTQUFPQSxHQUFHLENBQUhBLGdDQUFQLE1BQU9BLENBQVA7QUFHRjs7QUFBQSwrQkFBdUM7QUFDckMsTUFBTUMsUUFBUSxHQUFHQyxLQUFLLENBQUxBLG1CQUF5QkEsS0FBSyxDQUFMQSxTQUExQyxHQUEwQ0EsQ0FBMUM7O0FBQ0EsZ0JBQWM7QUFDWkEsU0FBSyxHQUFHQSxLQUFLLENBQUxBLFNBQWUsQ0FBdkJBLENBQVFBLENBQVJBO0FBRUY7O0FBQUEsTUFBTUMsTUFBTSxHQUFHRCxLQUFLLENBQUxBLFdBQWYsS0FBZUEsQ0FBZjs7QUFDQSxjQUFZO0FBQ1ZBLFNBQUssR0FBR0EsS0FBSyxDQUFMQSxNQUFSQSxDQUFRQSxDQUFSQTtBQUVGOztBQUFBLFNBQU87QUFBRUUsT0FBRyxFQUFMO0FBQWNELFVBQWQsRUFBY0EsTUFBZDtBQUFzQkYsWUFBN0IsRUFBNkJBO0FBQXRCLEdBQVA7QUFHSzs7QUFBQSx3Q0FPTDtBQUNBLE1BQU1JLFFBQVEsR0FBRyxDQUFDQyxlQUFlLENBQWZBLHNCQUFELG9CQUFqQixHQUFpQixDQUFqQjtBQUlBLE1BQU1DLE1BQXNDLEdBQTVDO0FBQ0EsTUFBSUMsVUFBVSxHQUFkO0FBQ0EsTUFBTUMsa0JBQWtCLEdBQUdKLFFBQVEsQ0FBUkEsSUFDbkJLLGlCQUFELEVBQWE7QUFDaEIsUUFBSUEsT0FBTyxDQUFQQSxtQkFBMkJBLE9BQU8sQ0FBUEEsU0FBL0IsR0FBK0JBLENBQS9CLEVBQXNEO0FBQUEsNEJBQ2xCQyxjQUFjLENBQUNELE9BQU8sQ0FBUEEsU0FBaUIsQ0FBbEUsQ0FBaURBLENBQUQsQ0FESTtBQUFBLFVBQzlDLEdBRDhDLG1CQUM5QyxHQUQ4QztBQUFBLFVBQzlDLFFBRDhDLG1CQUM5QyxRQUQ4QztBQUFBLFVBQzlDLE1BRDhDLG1CQUM5QyxNQUQ4Qzs7QUFFcERILFlBQU0sQ0FBTkEsR0FBTSxDQUFOQSxHQUFjO0FBQUVLLFdBQUcsRUFBRUosVUFBUDtBQUFxQkwsY0FBckIsRUFBcUJBLE1BQXJCO0FBQTZCRixnQkFBM0NNLEVBQTJDTjtBQUE3QixPQUFkTTtBQUNBLGFBQU9KLE1BQU0sR0FBSUYsUUFBUSxtQkFBWixXQUFiO0FBSEYsV0FJTztBQUNMLHdCQUFXWSxXQUFXLENBQXRCLE9BQXNCLENBQXRCO0FBRUg7QUFUd0JSLFVBQTNCLEVBQTJCQSxDQUEzQixDQVBBLENBbUJBO0FBQ0E7O0FBQ0EsYUFBbUMsa0dBZ0VuQzs7QUFBQSxTQUFPO0FBQ0xTLE1BQUUsRUFBRSxzQkFEQyxrQkFDRCxhQURDO0FBRUxQLFVBRkYsRUFFRUE7QUFGSyxHQUFQO0FBSUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcm91dGUtcmVnZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIEdyb3VwIHtcbiAgcG9zOiBudW1iZXJcbiAgcmVwZWF0OiBib29sZWFuXG4gIG9wdGlvbmFsOiBib29sZWFuXG59XG5cbi8vIHRoaXMgaXNuJ3QgaW1wb3J0aW5nIHRoZSBlc2NhcGUtc3RyaW5nLXJlZ2V4IG1vZHVsZVxuLy8gdG8gcmVkdWNlIGJ5dGVzXG5mdW5jdGlvbiBlc2NhcGVSZWdleChzdHI6IHN0cmluZykge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL1t8XFxcXHt9KClbXFxdXiQrKj8uLV0vZywgJ1xcXFwkJicpXG59XG5cbmZ1bmN0aW9uIHBhcnNlUGFyYW1ldGVyKHBhcmFtOiBzdHJpbmcpIHtcbiAgY29uc3Qgb3B0aW9uYWwgPSBwYXJhbS5zdGFydHNXaXRoKCdbJykgJiYgcGFyYW0uZW5kc1dpdGgoJ10nKVxuICBpZiAob3B0aW9uYWwpIHtcbiAgICBwYXJhbSA9IHBhcmFtLnNsaWNlKDEsIC0xKVxuICB9XG4gIGNvbnN0IHJlcGVhdCA9IHBhcmFtLnN0YXJ0c1dpdGgoJy4uLicpXG4gIGlmIChyZXBlYXQpIHtcbiAgICBwYXJhbSA9IHBhcmFtLnNsaWNlKDMpXG4gIH1cbiAgcmV0dXJuIHsga2V5OiBwYXJhbSwgcmVwZWF0LCBvcHRpb25hbCB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRSb3V0ZVJlZ2V4KFxuICBub3JtYWxpemVkUm91dGU6IHN0cmluZ1xuKToge1xuICByZTogUmVnRXhwXG4gIG5hbWVkUmVnZXg/OiBzdHJpbmdcbiAgcm91dGVLZXlzPzogeyBbbmFtZWQ6IHN0cmluZ106IHN0cmluZyB9XG4gIGdyb3VwczogeyBbZ3JvdXBOYW1lOiBzdHJpbmddOiBHcm91cCB9XG59IHtcbiAgY29uc3Qgc2VnbWVudHMgPSAobm9ybWFsaXplZFJvdXRlLnJlcGxhY2UoL1xcLyQvLCAnJykgfHwgJy8nKVxuICAgIC5zbGljZSgxKVxuICAgIC5zcGxpdCgnLycpXG5cbiAgY29uc3QgZ3JvdXBzOiB7IFtncm91cE5hbWU6IHN0cmluZ106IEdyb3VwIH0gPSB7fVxuICBsZXQgZ3JvdXBJbmRleCA9IDFcbiAgY29uc3QgcGFyYW1ldGVyaXplZFJvdXRlID0gc2VnbWVudHNcbiAgICAubWFwKChzZWdtZW50KSA9PiB7XG4gICAgICBpZiAoc2VnbWVudC5zdGFydHNXaXRoKCdbJykgJiYgc2VnbWVudC5lbmRzV2l0aCgnXScpKSB7XG4gICAgICAgIGNvbnN0IHsga2V5LCBvcHRpb25hbCwgcmVwZWF0IH0gPSBwYXJzZVBhcmFtZXRlcihzZWdtZW50LnNsaWNlKDEsIC0xKSlcbiAgICAgICAgZ3JvdXBzW2tleV0gPSB7IHBvczogZ3JvdXBJbmRleCsrLCByZXBlYXQsIG9wdGlvbmFsIH1cbiAgICAgICAgcmV0dXJuIHJlcGVhdCA/IChvcHRpb25hbCA/ICcoPzovKC4rPykpPycgOiAnLyguKz8pJykgOiAnLyhbXi9dKz8pJ1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGAvJHtlc2NhcGVSZWdleChzZWdtZW50KX1gXG4gICAgICB9XG4gICAgfSlcbiAgICAuam9pbignJylcblxuICAvLyBkZWFkIGNvZGUgZWxpbWluYXRlIGZvciBicm93c2VyIHNpbmNlIGl0J3Mgb25seSBuZWVkZWRcbiAgLy8gd2hpbGUgZ2VuZXJhdGluZyByb3V0ZXMtbWFuaWZlc3RcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgbGV0IHJvdXRlS2V5Q2hhckNvZGUgPSA5N1xuICAgIGxldCByb3V0ZUtleUNoYXJMZW5ndGggPSAxXG5cbiAgICAvLyBidWlsZHMgYSBtaW5pbWFsIHJvdXRlS2V5IHVzaW5nIG9ubHkgYS16IGFuZCBtaW5pbWFsIG51bWJlciBvZiBjaGFyYWN0ZXJzXG4gICAgY29uc3QgZ2V0U2FmZVJvdXRlS2V5ID0gKCkgPT4ge1xuICAgICAgbGV0IHJvdXRlS2V5ID0gJydcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByb3V0ZUtleUNoYXJMZW5ndGg7IGkrKykge1xuICAgICAgICByb3V0ZUtleSArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKHJvdXRlS2V5Q2hhckNvZGUpXG4gICAgICAgIHJvdXRlS2V5Q2hhckNvZGUrK1xuXG4gICAgICAgIGlmIChyb3V0ZUtleUNoYXJDb2RlID4gMTIyKSB7XG4gICAgICAgICAgcm91dGVLZXlDaGFyTGVuZ3RoKytcbiAgICAgICAgICByb3V0ZUtleUNoYXJDb2RlID0gOTdcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJvdXRlS2V5XG4gICAgfVxuXG4gICAgY29uc3Qgcm91dGVLZXlzOiB7IFtuYW1lZDogc3RyaW5nXTogc3RyaW5nIH0gPSB7fVxuXG4gICAgbGV0IG5hbWVkUGFyYW1ldGVyaXplZFJvdXRlID0gc2VnbWVudHNcbiAgICAgIC5tYXAoKHNlZ21lbnQpID0+IHtcbiAgICAgICAgaWYgKHNlZ21lbnQuc3RhcnRzV2l0aCgnWycpICYmIHNlZ21lbnQuZW5kc1dpdGgoJ10nKSkge1xuICAgICAgICAgIGNvbnN0IHsga2V5LCBvcHRpb25hbCwgcmVwZWF0IH0gPSBwYXJzZVBhcmFtZXRlcihzZWdtZW50LnNsaWNlKDEsIC0xKSlcbiAgICAgICAgICAvLyByZXBsYWNlIGFueSBub24td29yZCBjaGFyYWN0ZXJzIHNpbmNlIHRoZXkgY2FuIGJyZWFrXG4gICAgICAgICAgLy8gdGhlIG5hbWVkIHJlZ2V4XG4gICAgICAgICAgbGV0IGNsZWFuZWRLZXkgPSBrZXkucmVwbGFjZSgvXFxXL2csICcnKVxuICAgICAgICAgIGxldCBpbnZhbGlkS2V5ID0gZmFsc2VcblxuICAgICAgICAgIC8vIGNoZWNrIGlmIHRoZSBrZXkgaXMgc3RpbGwgaW52YWxpZCBhbmQgZmFsbGJhY2sgdG8gdXNpbmcgYSBrbm93blxuICAgICAgICAgIC8vIHNhZmUga2V5XG4gICAgICAgICAgaWYgKGNsZWFuZWRLZXkubGVuZ3RoID09PSAwIHx8IGNsZWFuZWRLZXkubGVuZ3RoID4gMzApIHtcbiAgICAgICAgICAgIGludmFsaWRLZXkgPSB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICghaXNOYU4ocGFyc2VJbnQoY2xlYW5lZEtleS5zdWJzdHIoMCwgMSkpKSkge1xuICAgICAgICAgICAgaW52YWxpZEtleSA9IHRydWVcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoaW52YWxpZEtleSkge1xuICAgICAgICAgICAgY2xlYW5lZEtleSA9IGdldFNhZmVSb3V0ZUtleSgpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcm91dGVLZXlzW2NsZWFuZWRLZXldID0ga2V5XG4gICAgICAgICAgcmV0dXJuIHJlcGVhdFxuICAgICAgICAgICAgPyBvcHRpb25hbFxuICAgICAgICAgICAgICA/IGAoPzovKD88JHtjbGVhbmVkS2V5fT4uKz8pKT9gXG4gICAgICAgICAgICAgIDogYC8oPzwke2NsZWFuZWRLZXl9Pi4rPylgXG4gICAgICAgICAgICA6IGAvKD88JHtjbGVhbmVkS2V5fT5bXi9dKz8pYFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBgLyR7ZXNjYXBlUmVnZXgoc2VnbWVudCl9YFxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmpvaW4oJycpXG5cbiAgICByZXR1cm4ge1xuICAgICAgcmU6IG5ldyBSZWdFeHAoYF4ke3BhcmFtZXRlcml6ZWRSb3V0ZX0oPzovKT8kYCksXG4gICAgICBncm91cHMsXG4gICAgICByb3V0ZUtleXMsXG4gICAgICBuYW1lZFJlZ2V4OiBgXiR7bmFtZWRQYXJhbWV0ZXJpemVkUm91dGV9KD86Lyk/JGAsXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICByZTogbmV3IFJlZ0V4cChgXiR7cGFyYW1ldGVyaXplZFJvdXRlfSg/Oi8pPyRgKSxcbiAgICBncm91cHMsXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/route-regex.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nvar _regeneratorRuntime = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/regenerator */ \"./node_modules/next/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator */ \"./node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nexports.__esModule = true;\nexports.execOnce = execOnce;\nexports.getLocationOrigin = getLocationOrigin;\nexports.getURL = getURL;\nexports.getDisplayName = getDisplayName;\nexports.isResSent = isResSent;\nexports.loadGetInitialProps = loadGetInitialProps;\nexports.formatWithValidation = formatWithValidation;\nexports.ST = exports.SP = exports.urlObjectKeys = void 0;\n\nvar _formatUrl = __webpack_require__(/*! ./router/utils/format-url */ \"./node_modules/next/dist/next-server/lib/router/utils/format-url.js\");\n/**\n* Utils\n*/\n\n\nfunction execOnce(fn) {\n  var used = false;\n  var result;\n  return function () {\n    if (!used) {\n      used = true;\n      result = fn.apply(void 0, arguments);\n    }\n\n    return result;\n  };\n}\n\nfunction getLocationOrigin() {\n  var _window$location = window.location,\n      protocol = _window$location.protocol,\n      hostname = _window$location.hostname,\n      port = _window$location.port;\n  return \"\".concat(protocol, \"//\").concat(hostname).concat(port ? ':' + port : '');\n}\n\nfunction getURL() {\n  var href = window.location.href;\n  var origin = getLocationOrigin();\n  return href.substring(origin.length);\n}\n\nfunction getDisplayName(Component) {\n  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';\n}\n\nfunction isResSent(res) {\n  return res.finished || res.headersSent;\n}\n\nfunction loadGetInitialProps(_x, _x2) {\n  return _loadGetInitialProps.apply(this, arguments);\n}\n\nfunction _loadGetInitialProps() {\n  _loadGetInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(App, ctx) {\n    var _App$prototype, message, res, props, _message;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (false) {}\n\n            if (!((_App$prototype = App.prototype) != null && _App$prototype.getInitialProps)) {\n              _context.next = 4;\n              break;\n            }\n\n            message = \"\\\"\".concat(getDisplayName(App), \".getInitialProps()\\\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.\");\n            throw new Error(message);\n\n          case 4:\n            // when called from _app `ctx` is nested in `ctx`\n            res = ctx.res || ctx.ctx && ctx.ctx.res;\n\n            if (App.getInitialProps) {\n              _context.next = 12;\n              break;\n            }\n\n            if (!(ctx.ctx && ctx.Component)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return loadGetInitialProps(ctx.Component, ctx.ctx);\n\n          case 9:\n            _context.t0 = _context.sent;\n            return _context.abrupt(\"return\", {\n              pageProps: _context.t0\n            });\n\n          case 11:\n            return _context.abrupt(\"return\", {});\n\n          case 12:\n            _context.next = 14;\n            return App.getInitialProps(ctx);\n\n          case 14:\n            props = _context.sent;\n\n            if (!(res && isResSent(res))) {\n              _context.next = 17;\n              break;\n            }\n\n            return _context.abrupt(\"return\", props);\n\n          case 17:\n            if (props) {\n              _context.next = 20;\n              break;\n            }\n\n            _message = \"\\\"\".concat(getDisplayName(App), \".getInitialProps()\\\" should resolve to an object. But found \\\"\").concat(props, \"\\\" instead.\");\n            throw new Error(_message);\n\n          case 20:\n            if (true) {\n              if (Object.keys(props).length === 0 && !ctx.ctx) {\n                console.warn(\"\".concat(getDisplayName(App), \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\"));\n              }\n            }\n\n            return _context.abrupt(\"return\", props);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadGetInitialProps.apply(this, arguments);\n}\n\nvar urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];\nexports.urlObjectKeys = urlObjectKeys;\n\nfunction formatWithValidation(url) {\n  if (true) {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach(function (key) {\n        if (urlObjectKeys.indexOf(key) === -1) {\n          console.warn(\"Unknown key passed via urlObject into url.format: \".concat(key));\n        }\n      });\n    }\n  }\n\n  return (0, _formatUrl.formatUrl)(url);\n}\n\nvar SP = typeof performance !== 'undefined';\nexports.SP = SP;\nvar ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';\nexports.ST = ST;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/utils.js\n");

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_crystalngai_NYPL_nypl_starter_next_node_modules_next_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/extends */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_main_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/main.scss */ \"./styles/main.scss\");\n/* harmony import */ var _styles_main_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_main_scss__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _nypl_design_system_react_components_dist_styles_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @nypl/design-system-react-components/dist/styles.css */ \"./node_modules/@nypl/design-system-react-components/dist/styles.css\");\n/* harmony import */ var _nypl_design_system_react_components_dist_styles_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nypl_design_system_react_components_dist_styles_css__WEBPACK_IMPORTED_MODULE_3__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\nvar _jsxFileName = \"/Users/crystalngai/NYPL/nypl-starter-next/pages/_app.tsx\";\n\nvar __jsx = (react__WEBPACK_IMPORTED_MODULE_1___default().createElement);\n// We need this file to import related .scss and .css files.\n\n\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Component, (0,_Users_crystalngai_NYPL_nypl_starter_next_node_modules_next_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }\n  }));\n}\n\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC50c3g/NzIxNiJdLCJuYW1lcyI6WyJNeUFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxLQUFULE9BQXlDO0FBQUEsTUFBeEJDLFNBQXdCLFFBQXhCQSxTQUF3QjtBQUFBLE1BQWJDLFNBQWEsUUFBYkEsU0FBYTtBQUN2QyxTQUFPLE1BQUMsU0FBRCwwSkFBZUEsU0FBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQVA7QUFDRDs7S0FGUUYsSztBQUlULCtEQUFlQSxLQUFmIiwiZmlsZSI6Ii4vcGFnZXMvX2FwcC50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBXZSBuZWVkIHRoaXMgZmlsZSB0byBpbXBvcnQgcmVsYXRlZCAuc2NzcyBhbmQgLmNzcyBmaWxlcy5cbmltcG9ydCBcIi4uL3N0eWxlcy9tYWluLnNjc3NcIjtcbmltcG9ydCBcIkBueXBsL2Rlc2lnbi1zeXN0ZW0tcmVhY3QtY29tcG9uZW50cy9kaXN0L3N0eWxlcy5jc3NcIjtcblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIHJldHVybiA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+O1xufVxuXG5leHBvcnQgZGVmYXVsdCBNeUFwcDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/***/ (function(module) {

"use strict";
eval("var assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;\n//# sourceMappingURL=object-assign.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvb2JqZWN0LWFzc2lnbi5qcz80MWViIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhLHNDQUFzQyxzQkFBc0Isc0JBQXNCO0FBQy9GIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvb2JqZWN0LWFzc2lnbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO3ZhciBhc3NpZ249T2JqZWN0LmFzc2lnbi5iaW5kKE9iamVjdCk7bW9kdWxlLmV4cG9ydHM9YXNzaWduO21vZHVsZS5leHBvcnRzLmRlZmF1bHQ9bW9kdWxlLmV4cG9ydHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYmplY3QtYXNzaWduLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/object-assign.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx!":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx! ***!
  \***********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app.tsx */ \"./pages/_app.tsx\");\n      }\n    ]);\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz82YmM1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMscURBQTZCO0FBQ3BEO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/cGFnZT0lMkZfYXBwJmFic29sdXRlUGFnZVBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcC50c3ghLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHAudHN4XCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx!\n");

/***/ }),

/***/ "./node_modules/@nypl/design-system-react-components/dist/styles.css":
/*!***************************************************************************!*\
  !*** ./node_modules/@nypl/design-system-react-components/dist/styles.css ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! !../../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../../next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!../../../next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./styles.css */ \"./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@nypl/design-system-react-components/dist/styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element){// These elements should always exist. If they do not,\n// this code should fail.\nvar anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>\n// Each style tag should be placed right before our\n// anchor. By inserting before and not after, we do not\n// need to track the last inserted element.\nparentNode.insertBefore(element,anchorElement);};\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(!a[p]){return false;}}return true;};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../../next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!../../../next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./styles.css */ \"./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@nypl/design-system-react-components/dist/styles.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../../next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!../../../next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./styles.css */ \"./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@nypl/design-system-react-components/dist/styles.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BueXBsL2Rlc2lnbi1zeXN0ZW0tcmVhY3QtY29tcG9uZW50cy9kaXN0L3N0eWxlcy5jc3M/MDcyZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNk1BQWlHO0FBQ25ILDBCQUEwQixtQkFBTyxDQUFDLDJiQUEwTDs7QUFFNU47O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLG1DQUFtQztBQUNuQztBQUNBLHNFQUFzRSx3Q0FBd0M7QUFDOUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkMsa0VBQWtFLGlCQUFpQixjQUFjLE1BQU0sWUFBWSxpQ0FBaUM7QUFDcEosVUFBVSxnQkFBZ0IsZUFBZSxZQUFZLGlDQUFpQztBQUN0RixVQUFVLFVBQVUsZUFBZTtBQUNuQzs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLDJiQUEwTDtBQUNoTTtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLDJiQUEwTDs7QUFFcE47O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFVBQVU7O0FBRTFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxVQUFVO0FBQ1o7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG55cGwvZGVzaWduLXN5c3RlbS1yZWFjdC1jb21wb25lbnRzL2Rpc3Qvc3R5bGVzLmNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls1XS51c2VbMV0hLi4vLi4vLi4vbmV4dC9kaXN0L2NvbXBpbGVkL3Bvc3Rjc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls1XS51c2VbMl0hLi9zdHlsZXMuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCl7Ly8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4vLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG52YXIgYW5jaG9yRWxlbWVudD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fJyk7dmFyIHBhcmVudE5vZGU9YW5jaG9yRWxlbWVudC5wYXJlbnROb2RlOy8vIE5vcm1hbGx5IDxoZWFkPlxuLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXG4vLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4vLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LGFuY2hvckVsZW1lbnQpO307XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsYixpc05hbWVkRXhwb3J0KXtpZighYSYmYnx8YSYmIWIpe3JldHVybiBmYWxzZTt9bGV0IHA7Zm9yKHAgaW4gYSl7aWYoaXNOYW1lZEV4cG9ydCYmcD09PSdkZWZhdWx0Jyl7Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG5jb250aW51ZTt9aWYoYVtwXSE9PWJbcF0pe3JldHVybiBmYWxzZTt9fWZvcihwIGluIGIpe2lmKGlzTmFtZWRFeHBvcnQmJnA9PT0nZGVmYXVsdCcpey8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuY29udGludWU7fWlmKCFhW3BdKXtyZXR1cm4gZmFsc2U7fX1yZXR1cm4gdHJ1ZTt9O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uLy4uLy4uL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls1XS51c2VbMV0hLi4vLi4vLi4vbmV4dC9kaXN0L2NvbXBpbGVkL3Bvc3Rjc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls1XS51c2VbMl0hLi9zdHlsZXMuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9uZXh0L2Rpc3QvY29tcGlsZWQvY3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzFdIS4uLy4uLy4uL25leHQvZGlzdC9jb21waWxlZC9wb3N0Y3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzJdIS4vc3R5bGVzLmNzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@nypl/design-system-react-components/dist/styles.css\n");

/***/ }),

/***/ "./styles/main.scss":
/*!**************************!*\
  !*** ./styles/main.scss ***!
  \**************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[2]!../node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[7].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[4]!./main.scss */ \"./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[7].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[4]!./styles/main.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element){// These elements should always exist. If they do not,\n// this code should fail.\nvar anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>\n// Each style tag should be placed right before our\n// anchor. By inserting before and not after, we do not\n// need to track the last inserted element.\nparentNode.insertBefore(element,anchorElement);};\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(!a[p]){return false;}}return true;};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[2]!../node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[7].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[4]!./main.scss */ \"./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[7].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[4]!./styles/main.scss\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[2]!../node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[7].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[4]!./main.scss */ \"./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[7].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[4]!./styles/main.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL21haW4uc2Nzcz9mOTI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxvTkFBd0c7QUFDMUgsMEJBQTBCLG1CQUFPLENBQUMsbXhCQUFzWTs7QUFFeGE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLG1DQUFtQztBQUNuQztBQUNBLHNFQUFzRSx3Q0FBd0M7QUFDOUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkMsa0VBQWtFLGlCQUFpQixjQUFjLE1BQU0sWUFBWSxpQ0FBaUM7QUFDcEosVUFBVSxnQkFBZ0IsZUFBZSxZQUFZLGlDQUFpQztBQUN0RixVQUFVLFVBQVUsZUFBZTtBQUNuQzs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLG14QkFBc1k7QUFDNVk7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyxteEJBQXNZOztBQUVoYTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsImZpbGUiOiIuL3N0eWxlcy9tYWluLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls3XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wb3N0Y3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbN10udXNlWzJdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVzb2x2ZS11cmwtbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVszXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Nhc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls3XS51c2VbNF0hLi9tYWluLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KXsvLyBUaGVzZSBlbGVtZW50cyBzaG91bGQgYWx3YXlzIGV4aXN0LiBJZiB0aGV5IGRvIG5vdCxcbi8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbnZhciBhbmNob3JFbGVtZW50PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNfX25leHRfY3NzX19ET19OT1RfVVNFX18nKTt2YXIgcGFyZW50Tm9kZT1hbmNob3JFbGVtZW50LnBhcmVudE5vZGU7Ly8gTm9ybWFsbHkgPGhlYWQ+XG4vLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbi8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3Rcbi8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsYW5jaG9yRWxlbWVudCk7fTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSxiLGlzTmFtZWRFeHBvcnQpe2lmKCFhJiZifHxhJiYhYil7cmV0dXJuIGZhbHNlO31sZXQgcDtmb3IocCBpbiBhKXtpZihpc05hbWVkRXhwb3J0JiZwPT09J2RlZmF1bHQnKXsvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbmNvbnRpbnVlO31pZihhW3BdIT09YltwXSl7cmV0dXJuIGZhbHNlO319Zm9yKHAgaW4gYil7aWYoaXNOYW1lZEV4cG9ydCYmcD09PSdkZWZhdWx0Jyl7Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG5jb250aW51ZTt9aWYoIWFbcF0pe3JldHVybiBmYWxzZTt9fXJldHVybiB0cnVlO307XG4gICAgdmFyIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls3XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wb3N0Y3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbN10udXNlWzJdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVzb2x2ZS11cmwtbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVszXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Nhc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls3XS51c2VbNF0hLi9tYWluLnNjc3NcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbN10udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcG9zdGNzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVsyXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Jlc29sdmUtdXJsLWxvYWRlci9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls3XS51c2VbM10hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9zYXNzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbN10udXNlWzRdIS4vbWFpbi5zY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./styles/main.scss\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("const isOldIE=function isOldIE(){let memo;return function memorize(){if(typeof memo==='undefined'){// Test for IE <= 9 as proposed by Browserhacks\n// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n// Tests for existence of standard globals is to allow style-loader\n// to operate correctly into non-standard environments\n// @see https://github.com/webpack-contrib/style-loader/issues/177\nmemo=Boolean(window&&document&&document.all&&!window.atob);}return memo;};}();const getTarget=function getTarget(){const memo={};return function memorize(target){if(typeof memo[target]==='undefined'){let styleTarget=document.querySelector(target);// Special case to return head of iframe instead of iframe itself\nif(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement){try{// This will throw an exception if access to iframe is blocked\n// due to cross-origin restrictions\nstyleTarget=styleTarget.contentDocument.head;}catch(e){// istanbul ignore next\nstyleTarget=null;}}memo[target]=styleTarget;}return memo[target];};}();const stylesInDom=[];function getIndexByIdentifier(identifier){let result=-1;for(let i=0;i<stylesInDom.length;i++){if(stylesInDom[i].identifier===identifier){result=i;break;}}return result;}function modulesToDom(list,options){const idCountMap={};const identifiers=[];for(let i=0;i<list.length;i++){const item=list[i];const id=options.base?item[0]+options.base:item[0];const count=idCountMap[id]||0;const identifier=id+' '+count.toString();idCountMap[id]=count+1;const index=getIndexByIdentifier(identifier);const obj={css:item[1],media:item[2],sourceMap:item[3]};if(index!==-1){stylesInDom[index].references++;stylesInDom[index].updater(obj);}else{stylesInDom.push({identifier:identifier,updater:addStyle(obj,options),references:1});}identifiers.push(identifier);}return identifiers;}function insertStyleElement(options){const style=document.createElement('style');const attributes=options.attributes||{};if(typeof attributes.nonce==='undefined'){const nonce=// eslint-disable-next-line no-undef\n true?__webpack_require__.nc:0;if(nonce){attributes.nonce=nonce;}}Object.keys(attributes).forEach(function(key){style.setAttribute(key,attributes[key]);});if(typeof options.insert==='function'){options.insert(style);}else{const target=getTarget(options.insert||'head');if(!target){throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");}target.appendChild(style);}return style;}function removeStyleElement(style){// istanbul ignore if\nif(style.parentNode===null){return false;}style.parentNode.removeChild(style);}/* istanbul ignore next  */const replaceText=function replaceText(){const textStore=[];return function replace(index,replacement){textStore[index]=replacement;return textStore.filter(Boolean).join('\\n');};}();function applyToSingletonTag(style,index,remove,obj){const css=remove?'':obj.media?'@media '+obj.media+' {'+obj.css+'}':obj.css;// For old IE\n/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=replaceText(index,css);}else{const cssNode=document.createTextNode(css);const childNodes=style.childNodes;if(childNodes[index]){style.removeChild(childNodes[index]);}if(childNodes.length){style.insertBefore(cssNode,childNodes[index]);}else{style.appendChild(cssNode);}}}function applyToTag(style,options,obj){let css=obj.css;const media=obj.media;const sourceMap=obj.sourceMap;if(media){style.setAttribute('media',media);}else{style.removeAttribute('media');}if(sourceMap&&typeof btoa!=='undefined'){css+='\\n/*# sourceMappingURL=data:application/json;base64,'+btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))+' */';}// For old IE\n/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=css;}else{while(style.firstChild){style.removeChild(style.firstChild);}style.appendChild(document.createTextNode(css));}}let singleton=null;let singletonCounter=0;function addStyle(obj,options){let style;let update;let remove;if(options.singleton){const styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options));update=applyToSingletonTag.bind(null,style,styleIndex,false);remove=applyToSingletonTag.bind(null,style,styleIndex,true);}else{style=insertStyleElement(options);update=applyToTag.bind(null,style,options);remove=function(){removeStyleElement(style);};}update(obj);return function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap){return;}update(obj=newObj);}else{remove();}};}module.exports=function(list,options){options=options||{};// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nif(!options.singleton&&typeof options.singleton!=='boolean'){options.singleton=isOldIE();}list=list||[];let lastIdentifiers=modulesToDom(list,options);return function update(newList){newList=newList||[];if(Object.prototype.toString.call(newList)!=='[object Array]'){return;}for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);stylesInDom[index].references--;}const newLastIdentifiers=modulesToDom(newList,options);for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);if(stylesInDom[index].references===0){stylesInDom[index].updater();stylesInDom.splice(index,1);}}lastIdentifiers=newLastIdentifiers;};};\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/api.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/api.js ***!
  \***********************************************************/
/***/ (function(module) {

eval("var __dirname = \"/\";\nmodule.exports=function(){\"use strict\";var n={762:function(n){n.exports=function(n){var t=[];t.toString=function toString(){return this.map(function(t){var r=cssWithMappingToString(t,n);if(t[2]){return\"@media \".concat(t[2],\" {\").concat(r,\"}\")}return r}).join(\"\")};t.i=function(n,r,o){if(typeof n===\"string\"){n=[[null,n,\"\"]]}var e={};if(o){for(var a=0;a<this.length;a++){var c=this[a][0];if(c!=null){e[c]=true}}}for(var i=0;i<n.length;i++){var u=[].concat(n[i]);if(o&&e[u[0]]){continue}if(r){if(!u[2]){u[2]=r}else{u[2]=\"\".concat(r,\" and \").concat(u[2])}}t.push(u)}};return t};function cssWithMappingToString(n,t){var r=n[1]||\"\";var o=n[3];if(!o){return r}if(t&&typeof btoa===\"function\"){var e=toComment(o);var a=o.sources.map(function(n){return\"/*# sourceURL=\".concat(o.sourceRoot||\"\").concat(n,\" */\")});return[r].concat(a).concat([e]).join(\"\\n\")}return[r].join(\"\\n\")}function toComment(n){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n))));var r=\"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(t);return\"/*# \".concat(r,\" */\")}}};var t={};function __nccwpck_require__(r){if(t[r]){return t[r].exports}var o=t[r]={exports:{}};var e=true;try{n[r](o,o.exports,__nccwpck_require__);e=false}finally{if(e)delete t[r]}return o.exports}__nccwpck_require__.ab=__dirname+\"/\";return __nccwpck_require__(762)}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2FwaS5qcz82YmY4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwwQkFBMEIsYUFBYSxPQUFPLGdCQUFnQixzQkFBc0IsU0FBUywrQkFBK0IsNEJBQTRCLGtDQUFrQyxTQUFTLCtCQUErQixjQUFjLEdBQUcsU0FBUyxZQUFZLG9CQUFvQix3QkFBd0IsZ0JBQWdCLFNBQVMsTUFBTSxZQUFZLGNBQWMsS0FBSyxpQkFBaUIsWUFBWSxZQUFZLFlBQVksV0FBVyxLQUFLLHNCQUFzQixlQUFlLFNBQVMsTUFBTSxVQUFVLE9BQU8sS0FBSyx3Q0FBd0MsWUFBWSxVQUFVLHFDQUFxQyxlQUFlLFdBQVcsT0FBTyxTQUFTLGdDQUFnQyxtQkFBbUIsZ0NBQWdDLGdFQUFnRSxFQUFFLDJDQUEyQyxxQkFBcUIsc0JBQXNCLDREQUE0RCw4Q0FBOEMsY0FBYyxtQkFBbUIsZ0NBQWdDLFNBQVMsZ0NBQWdDLFNBQVMsb0JBQW9CLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLHVCQUF1QixTQUFTLEtBQUssZ0NBQWdDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2FwaS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ezc2MjpmdW5jdGlvbihuKXtuLmV4cG9ydHM9ZnVuY3Rpb24obil7dmFyIHQ9W107dC50b1N0cmluZz1mdW5jdGlvbiB0b1N0cmluZygpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbih0KXt2YXIgcj1jc3NXaXRoTWFwcGluZ1RvU3RyaW5nKHQsbik7aWYodFsyXSl7cmV0dXJuXCJAbWVkaWEgXCIuY29uY2F0KHRbMl0sXCIge1wiKS5jb25jYXQocixcIn1cIil9cmV0dXJuIHJ9KS5qb2luKFwiXCIpfTt0Lmk9ZnVuY3Rpb24obixyLG8pe2lmKHR5cGVvZiBuPT09XCJzdHJpbmdcIil7bj1bW251bGwsbixcIlwiXV19dmFyIGU9e307aWYobyl7Zm9yKHZhciBhPTA7YTx0aGlzLmxlbmd0aDthKyspe3ZhciBjPXRoaXNbYV1bMF07aWYoYyE9bnVsbCl7ZVtjXT10cnVlfX19Zm9yKHZhciBpPTA7aTxuLmxlbmd0aDtpKyspe3ZhciB1PVtdLmNvbmNhdChuW2ldKTtpZihvJiZlW3VbMF1dKXtjb250aW51ZX1pZihyKXtpZighdVsyXSl7dVsyXT1yfWVsc2V7dVsyXT1cIlwiLmNvbmNhdChyLFwiIGFuZCBcIikuY29uY2F0KHVbMl0pfX10LnB1c2godSl9fTtyZXR1cm4gdH07ZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhuLHQpe3ZhciByPW5bMV18fFwiXCI7dmFyIG89blszXTtpZighbyl7cmV0dXJuIHJ9aWYodCYmdHlwZW9mIGJ0b2E9PT1cImZ1bmN0aW9uXCIpe3ZhciBlPXRvQ29tbWVudChvKTt2YXIgYT1vLnNvdXJjZXMubWFwKGZ1bmN0aW9uKG4pe3JldHVyblwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoby5zb3VyY2VSb290fHxcIlwiKS5jb25jYXQobixcIiAqL1wiKX0pO3JldHVybltyXS5jb25jYXQoYSkuY29uY2F0KFtlXSkuam9pbihcIlxcblwiKX1yZXR1cm5bcl0uam9pbihcIlxcblwiKX1mdW5jdGlvbiB0b0NvbW1lbnQobil7dmFyIHQ9YnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkobikpKSk7dmFyIHI9XCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQodCk7cmV0dXJuXCIvKiMgXCIuY29uY2F0KHIsXCIgKi9cIil9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXtpZih0W3JdKXtyZXR1cm4gdFtyXS5leHBvcnRzfXZhciBvPXRbcl09e2V4cG9ydHM6e319O3ZhciBlPXRydWU7dHJ5e25bcl0obyxvLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7ZT1mYWxzZX1maW5hbGx5e2lmKGUpZGVsZXRlIHRbcl19cmV0dXJuIG8uZXhwb3J0c31fX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjtyZXR1cm4gX19uY2N3cGNrX3JlcXVpcmVfXyg3NjIpfSgpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/css-loader/api.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@nypl/design-system-react-components/dist/styles.css":
/*!*****************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@nypl/design-system-react-components/dist/styles.css ***!
  \*****************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../next/dist/compiled/css-loader/api.js */ \"./node_modules/next/dist/compiled/css-loader/api.js\");\n/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\\\"button\\\"]:-moz-focusring,[type=\\\"reset\\\"]:-moz-focusring,[type=\\\"submit\\\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=\\\"checkbox\\\"],[type=\\\"radio\\\"]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{-webkit-appearance:textfield;outline-offset:-2px}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}/*! system-font.css v2.0.2 | CC0-1.0 License | github.com/jonathantneal/system-font-css */@font-face{font-family:system-ui;font-style:normal;font-weight:300;src:local(\\\".SFNSText-Light\\\"),local(\\\".HelveticaNeueDeskInterface-Light\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Light\\\"),local(\\\"Ubuntu Light\\\"),local(\\\"Roboto-Light\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:300;src:local(\\\".SFNSText-LightItalic\\\"),local(\\\".HelveticaNeueDeskInterface-Italic\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Light Italic\\\"),local(\\\"Ubuntu Light Italic\\\"),local(\\\"Roboto-LightItalic\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:normal;font-weight:400;src:local(\\\".SFNSText-Regular\\\"),local(\\\".HelveticaNeueDeskInterface-Regular\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI\\\"),local(\\\"Ubuntu\\\"),local(\\\"Roboto-Regular\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:400;src:local(\\\".SFNSText-Italic\\\"),local(\\\".HelveticaNeueDeskInterface-Italic\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Italic\\\"),local(\\\"Ubuntu Italic\\\"),local(\\\"Roboto-Italic\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:normal;font-weight:500;src:local(\\\".SFNSText-Medium\\\"),local(\\\".HelveticaNeueDeskInterface-MediumP4\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Semibold\\\"),local(\\\"Ubuntu Medium\\\"),local(\\\"Roboto-Medium\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:500;src:local(\\\".SFNSText-MediumItalic\\\"),local(\\\".HelveticaNeueDeskInterface-MediumItalicP4\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Semibold Italic\\\"),local(\\\"Ubuntu Medium Italic\\\"),local(\\\"Roboto-MediumItalic\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}@font-face{font-family:system-ui;font-style:normal;font-weight:700;src:local(\\\".SFNSText-Bold\\\"),local(\\\".HelveticaNeueDeskInterface-Bold\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Bold\\\"),local(\\\"Ubuntu Bold\\\"),local(\\\"Roboto-Bold\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:700;src:local(\\\".SFNSText-BoldItalic\\\"),local(\\\".HelveticaNeueDeskInterface-BoldItalic\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Bold Italic\\\"),local(\\\"Ubuntu Bold Italic\\\"),local(\\\"Roboto-BoldItalic\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}:root{--section-whats-on-primary: #8a1a9c;--section-whats-on-secondary: #7c1097;--section-books-and-more-primary: #d0343a;--section-books-and-more-secondary: #bb1d12;--section-research-primary: #377f8b;--section-research-secondary: #02626a;--section-locations-primary: #d0343a;--section-locations-secondary: #bb1d12;--section-research-library-lpa: #008375;--section-research-library-schomburg: #c54b38;--section-research-library-schwartzman: #0071ce}:root{--ui-black: black;--ui-white: white;--ui-gray-xdark: #424242;--ui-gray-dark: #616161;--ui-gray-medium: #bdbdbd;--ui-gray-light: #e0e0e0;--ui-gray-warm-light: #efedeb;--ui-gray-xlight: #f5f5f5;--ui-gray-warm-xlight: #f8f8f7;--ui-gray-xxlight: #fafafa;--ui-success: #077719;--ui-error: #97272c;--ui-focus: #4181f1;--ui-link-primary: #0576d3;--ui-link-secondary: #004b98}:root{--font-size--3: 0.625rem;--font-size--2: 0.75rem;--font-size--1: 0.875rem;--font-size-0: 1rem;--font-size-1: 1.125rem;--font-size-2: 1.375rem;--font-size-3: 1.75rem;--font-size-4: 2.25rem}:root{--typeface-body: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;--typeface-heading: -apple-system, BlinkMacSystemFont, system-ui, sans-serif}:root{--space: 1rem;--space-xxs: calc(var(--space) / 4);--space-xs: calc(var(--space) / 2);--space-s: calc(var(--space) * 1);--space-m: calc(var(--space) * 1.5);--space-l: calc(var(--space) * 2);--space-xl: calc(var(--space) * 3);--space-xxl: calc(var(--space) * 4);--space-xxxl: calc(var(--space) * 6)}:root{--breakpoint-small: 320px;--breakpoint-medium: 600px;--breakpoint-large: 960px;--breakpoint-xl: 1280px}.container{padding:var(--space-s)}.nypl-ds{-webkit-box-sizing:border-box;box-sizing:border-box;color:var(--ui-black);font-family:var(--typeface-body);font-size:16px;font-weight:300;line-height:1.5;overflow-x:hidden}.nypl-ds *,.nypl-ds *::after,.nypl-ds *::before{-webkit-box-sizing:inherit;box-sizing:inherit}.nypl-ds input:not([disabled]):focus,.nypl-ds select:not([disabled]):focus,.nypl-ds textarea:not([disabled]):focus,.nypl-ds button:not([disabled]):focus{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.nypl-ds iframe:focus,.nypl-ds [href]:focus,.nypl-ds [tabindex]:focus,.nypl-ds [contentEditable=\\\"true\\\"]:focus{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.focus{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.card-grid{margin-bottom:var(--space-l)}@media (min-width: 960px){.card-grid{margin-bottom:var(--space-xl)}}.card-grid--full{margin-bottom:var(--space-xxl)}@media (min-width: 960px){.card-grid--full{margin-bottom:var(--space-xxxl)}}.card-grid__cards{list-style:none;margin:0;padding:0;display:flex;flex-flow:column nowrap}.card-grid__cards>*:not(:last-child){margin-bottom:var(--space-s)}@media (min-width: 960px){.card-grid__cards>*:not(:last-child){margin-bottom:0}.card-grid__cards>*:not(:last-child):not(:nth-child(3n)){margin-right:var(--space-l)}.card-grid__cards>*:not(:last-child):not(:nth-last-child(2)):not(:nth-last-child(3)){margin-bottom:var(--space-l)}}@media (min-width: 960px){.card-grid__cards--full>*:nth-child(3n){margin-bottom:var(--space-xxl)}.card-grid__cards--full>*:not(:last-child):not(:nth-last-child(2)):not(:nth-last-child(3)){margin-bottom:var(--space-xxl)}.card-grid__cards--full>*:nth-child(3n+2):not(:last-child):not(:nth-child(3n)):not(:nth-last-child(2)){margin-bottom:var(--space-xxl)}}@media (min-width: 960px){.card-grid__cards{flex-flow:row wrap}.card-grid__cards>*{flex:0 0 30%}.card-grid__cards>.featured-card{flex:1 0 31%}}.card-grid__cards--bg-color{margin:0 auto;max-width:1280px;padding:var(--space-s) var(--space-s);width:100%}@media (min-width: 960px){.card-grid__cards--bg-color{margin:0 auto;max-width:1280px;padding:var(--space-xxl) var(--space-xxl);width:100%}}.card-grid__cards--bg-color>*:last-child{margin-bottom:0}.placeholder{--color-place-holder: var(--ui-gray-light);margin-bottom:var(--space-l);padding:var(--space-s);align-items:center;border:4px dashed var(--color-place-holder);color:var(--color-place-holder);display:flex;font-size:3rem;justify-content:center;line-height:1.4;padding:4rem 1rem;width:100%}@media (min-width: 960px){.placeholder{margin-bottom:var(--space-xl)}}.placeholder--full{margin-bottom:var(--space-xxl)}@media (min-width: 960px){.placeholder--full{margin-bottom:var(--space-xxxl)}}.nypl-ds p,.nypl-ds .paragraph{margin:0 0 var(--space)}.blockquote,.text-long blockquote{border-left:solid 3px var(--ui-gray-light);font-style:italic;margin-left:1em;padding-left:1em}.hr,.text-long hr{border-style:solid;border-width:1px 0 0;color:currentColor}.long-description{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute !important;width:1px;word-wrap:normal}.icon{display:inline-block;fill:currentColor;height:24px;width:24px}.icon--rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.icon--rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.icon--rotate-0{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.icon--rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.icon--left{margin-right:var(--space-xxs)}.icon--right{margin-left:var(--space-xxs)}.icon--xlarge{height:68px;width:68px}.icon--large{height:36px;width:36px}.icon--medium{height:24px;width:24px}.icon--small{height:18px;width:18px}.button{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-link-primary);border:none;color:var(--ui-white)}.button .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button .icon--rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.button .icon--rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.button .icon--rotate-0{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.button .icon--rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.button .icon--left{margin-right:var(--space-xxs)}.button .icon--right{margin-left:var(--space-xxs)}.button .icon--xlarge{height:68px;width:68px}.button .icon--large{height:36px;width:36px}.button .icon--medium{height:24px;width:24px}.button .icon--small{height:18px;width:18px}.button .icon--icon-left{margin-right:var(--space-xs)}.button .icon--icon-right{margin-left:var(--space-xs)}.button:visited{color:var(--ui-white)}.button:hover{background-color:var(--ui-link-secondary)}.button:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.button--link{background-color:transparent;color:var(--ui-link-primary);text-decoration:underline}.button--link--no-underline{text-decoration:none}.button--link:hover{background-color:transparent;color:var(--ui-link-secondary)}.button--link:disabled{background-color:transparent;color:var(--ui-gray-dark);pointer-events:none}.button--outline{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-white);border:1px solid var(--ui-gray-light);color:inherit}.button--outline .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button--outline .icon--rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.button--outline .icon--rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.button--outline .icon--rotate-0{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.button--outline .icon--rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.button--outline .icon--left{margin-right:var(--space-xxs)}.button--outline .icon--right{margin-left:var(--space-xxs)}.button--outline .icon--xlarge{height:68px;width:68px}.button--outline .icon--large{height:36px;width:36px}.button--outline .icon--medium{height:24px;width:24px}.button--outline .icon--small{height:18px;width:18px}.button--outline .icon--icon-left{margin-right:var(--space-xs)}.button--outline .icon--icon-right{margin-left:var(--space-xs)}.button--outline:visited{color:inherit}.button--outline:hover{background-color:var(--ui-gray-xxlight)}.button--outline:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.button--pill{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-white);border:1px solid var(--ui-gray-light);color:inherit;border-radius:20px}.button--pill .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button--pill .icon--rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.button--pill .icon--rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.button--pill .icon--rotate-0{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.button--pill .icon--rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.button--pill .icon--left{margin-right:var(--space-xxs)}.button--pill .icon--right{margin-left:var(--space-xxs)}.button--pill .icon--xlarge{height:68px;width:68px}.button--pill .icon--large{height:36px;width:36px}.button--pill .icon--medium{height:24px;width:24px}.button--pill .icon--small{height:18px;width:18px}.button--pill .icon--icon-left{margin-right:var(--space-xs)}.button--pill .icon--icon-right{margin-left:var(--space-xs)}.button--pill .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button--pill .icon--rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.button--pill .icon--rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.button--pill .icon--rotate-0{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.button--pill .icon--rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.button--pill .icon--left{margin-right:var(--space-xxs)}.button--pill .icon--right{margin-left:var(--space-xxs)}.button--pill .icon--xlarge{height:68px;width:68px}.button--pill .icon--large{height:36px;width:36px}.button--pill .icon--medium{height:24px;width:24px}.button--pill .icon--small{height:18px;width:18px}.button--pill .icon--icon-left{margin-right:var(--space-xs)}.button--pill .icon--icon-right{margin-left:var(--space-xs)}.button--pill:visited{color:inherit}.button--pill:hover{background-color:var(--ui-gray-xxlight)}.button--pill:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.nypl-ds a,.nypl-ds .link{color:var(--ui-link-primary)}.nypl-ds a--no-underline,.nypl-ds .link--no-underline{text-decoration:none}.nypl-ds a:hover,.nypl-ds .link:hover{color:var(--ui-link-secondary)}.nypl-ds a.button,.nypl-ds .link.button{color:var(--ui-white)}.nypl-ds a[role=\\\"button\\\"],.nypl-ds .link[role=\\\"button\\\"]{cursor:pointer}.nypl-ds a--dark-background,.nypl-ds .link--dark-background{color:var(--ui-white)}.nypl-ds a--dark-background:hover,.nypl-ds .link--dark-background:hover{color:var(--ui-gray-light)}.more-link{align-items:center;color:var(--ui-link-primary);display:inline-flex;justify-content:space-between;text-decoration:underline}.more-link:hover{color:var(--ui-link-secondary);text-decoration:underline}.more-link__icon{display:inline-block;fill:currentColor;height:24px;width:24px;height:var(--space-s);text-decoration:none;width:var(--space-s)}.more-link__icon--rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.more-link__icon--rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.more-link__icon--rotate-0{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.more-link__icon--rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.more-link__icon--left{margin-right:var(--space-xxs)}.more-link__icon--right{margin-left:var(--space-xxs)}.more-link__icon--xlarge{height:68px;width:68px}.more-link__icon--large{height:36px;width:36px}.more-link__icon--medium{height:24px;width:24px}.more-link__icon--small{height:18px;width:18px}.more-link__icon--left{margin-right:var(--space-xs)}.more-link__icon--right{margin-left:var(--space-xs)}.more-link__icon svg{height:100%;width:100%}.nypl-ds h1{color:inherit;font-size:var(--font-size-4);font-weight:300;letter-spacing:0;line-height:1.1;margin:0 0 0.5em;width:auto}.nypl-ds h1__link{color:inherit}.nypl-ds h1__link:hover{color:inherit}.nypl-ds h2{color:inherit;font-size:var(--font-size-3);font-weight:500;line-height:1.25;margin:0 0 0.5em;width:auto}.nypl-ds h2__link{color:inherit}.nypl-ds h2__link:hover{color:inherit}.nypl-ds h3{color:inherit;font-size:var(--font-size-2);font-weight:500;line-height:1.25;margin:0 0 0.5em;width:auto}.nypl-ds h3__link{color:inherit}.nypl-ds h3__link:hover{color:inherit}.nypl-ds h4{color:inherit;font-size:var(--font-size-1);font-weight:500;line-height:1.25;margin:0 0 0.5em;width:auto}.nypl-ds h4__link{color:inherit}.nypl-ds h4__link:hover{color:inherit}.nypl-ds h5,.nypl-ds h6{color:inherit;font-size:var(--font-size-1);font-weight:400;line-height:1.15;margin:0 0 0.5em;width:auto}.nypl-ds h5__link,.nypl-ds h6__link{color:inherit}.nypl-ds h5__link:hover,.nypl-ds h6__link:hover{color:inherit}.heading__link{color:inherit;text-decoration:none}.heading__link:hover{text-decoration:underline}.heading-section__more-link{align-items:center;color:var(--ui-link-primary);display:inline-flex;justify-content:space-between;text-decoration:underline}.heading-section__more-link:hover{color:var(--ui-link-secondary);text-decoration:underline}.heading-section__more-link__icon{display:inline-block;fill:currentColor;height:24px;width:24px;height:var(--space-s);text-decoration:none;width:var(--space-s)}.heading-section__more-link__icon--rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.heading-section__more-link__icon--rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.heading-section__more-link__icon--rotate-0{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.heading-section__more-link__icon--rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.heading-section__more-link__icon--left{margin-right:var(--space-xxs)}.heading-section__more-link__icon--right{margin-left:var(--space-xxs)}.heading-section__more-link__icon--xlarge{height:68px;width:68px}.heading-section__more-link__icon--large{height:36px;width:36px}.heading-section__more-link__icon--medium{height:24px;width:24px}.heading-section__more-link__icon--small{height:18px;width:18px}.heading-section__more-link__icon--left{margin-right:var(--space-xs)}.heading-section__more-link__icon--right{margin-left:var(--space-xs)}.heading-section__more-link__icon svg{height:100%;width:100%}.heading-section__heading{margin-right:var(--space-xs)}.heading-section__heading--has-link{display:inline}.page-title__heading--block-color{background-color:var(--section-research-primary);color:var(--ui-white)}.input,.react-autosuggest__input{padding:var(--space-xs);margin-bottom:var(--space-xs);border:1px solid var(--ui-gray-medium)}.input[type=\\\"text\\\"],.react-autosuggest__input[type=\\\"text\\\"],.input[type=\\\"number\\\"],.react-autosuggest__input[type=\\\"number\\\"],.input[type=\\\"password\\\"],.react-autosuggest__input[type=\\\"password\\\"]{width:100%}.input[type=\\\"radio\\\"],.react-autosuggest__input[type=\\\"radio\\\"]{width:unset}.input[type=\\\"radio\\\"]+.label,.react-autosuggest__input[type=\\\"radio\\\"]+.label{display:unset;margin-left:var(--space-s)}.input::-webkit-input-placeholder,.react-autosuggest__input::-webkit-input-placeholder{color:var(--ui-gray-dark)}.input:-moz-placeholder,.react-autosuggest__input:-moz-placeholder{color:var(--ui-gray-dark)}.input:-ms-input-placeholder,.react-autosuggest__input:-ms-input-placeholder{color:var(--ui-gray-dark)}.input:hover,.react-autosuggest__input:hover{border-color:var(--ui-gray-dark)}.input:disabled,.react-autosuggest__input:disabled{background-color:var(--ui-gray-xxlight);color:var(--ui-gray-xdark)}.input:active,.react-autosuggest__input:active,.input:focus,.react-autosuggest__input:focus,.input:active:hover,.react-autosuggest__input:active:hover,.input:focus:hover,.react-autosuggest__input:focus:hover{border:1px solid var(--ui-focus);-webkit-box-shadow:0;box-shadow:0;outline:1px solid var(--ui-focus);z-index:9999}.input--error{border:1px solid var(--ui-error)}@media (min-width: 400px){.input-group{display:flex;justify-content:space-between}.input-group>*:not(:last-child){margin-right:var(--space-m)}}.react-autosuggest__container{display:inline;position:relative;width:100%}.react-autosuggest__input--focused{outline:none}.react-autosuggest__input--open{border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.react-autosuggest__suggestions-container{display:none;width:100%}.react-autosuggest__suggestions-container--open{background-color:var(--ui-white);display:block;font-weight:300;margin-top:-6px;outline:1px solid var(--ui-gray-light);position:absolute;width:100%;z-index:2}.react-autosuggest__suggestions-list{list-style-type:none;margin:0;padding:0}.react-autosuggest__suggestion{cursor:pointer;padding:var(--space-xs)}.react-autosuggest__suggestion--highlighted{background-color:var(--ui-gray-light)}.auto-suggest-bottom{padding:var(--space-xs)}.accordion{border:1px solid var(--ui-gray-medium);color:inherit;width:100%}.accordion--fixed-height{display:flex;flex-direction:column;max-height:inherit}.accordion__content{display:none;padding:var(--space-xxs) var(--space-xxxl) var(--space-xs) var(--space-s);-webkit-transition:all 0.35s;transition:all 0.35s}.accordion__label{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-white);border:1px solid var(--ui-gray-light);color:inherit;align-items:center;border:none;cursor:pointer;font-weight:500;justify-content:space-between}.accordion__label .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.accordion__label .icon--rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.accordion__label .icon--rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.accordion__label .icon--rotate-0{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.accordion__label .icon--rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.accordion__label .icon--left{margin-right:var(--space-xxs)}.accordion__label .icon--right{margin-left:var(--space-xxs)}.accordion__label .icon--xlarge{height:68px;width:68px}.accordion__label .icon--large{height:36px;width:36px}.accordion__label .icon--medium{height:24px;width:24px}.accordion__label .icon--small{height:18px;width:18px}.accordion__label .icon--icon-left{margin-right:var(--space-xs)}.accordion__label .icon--icon-right{margin-left:var(--space-xs)}.accordion__label:visited{color:inherit}.accordion__label:hover{background-color:var(--ui-gray-xxlight)}.accordion__label:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.accordion__label .icon--minus{display:none}.accordion__label:focus{position:relative}.accordion__label:hover{background-color:var(--ui-gray-light)}.accordion__label--faq{font-size:var(--font-size-1);padding:var(--space-s)}.accordion__input{opacity:0;position:absolute;z-index:-1}.accordion__input:focus+.accordion__label{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.accordion__input:checked+.accordion__label .icon--minus{display:inline}.accordion__input:checked+.accordion__label .icon--plus{display:none}.accordion__input:checked ~ .accordion__content{display:inline-block}.accordion__input:checked ~ .accordion__content--fixed-height{margin-top:var(--space-xxs);overflow-y:auto}li:not(:first-of-type) .accordion{margin-top:-1px}.breadcrumbs{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%);background-color:var(--ui-black);padding-bottom:var(--space-xs);padding-top:var(--space-xs)}.breadcrumbs__item{margin-right:var(--space-xxs);align-items:center;display:inline;font-size:var(--font-size--1);line-height:1.5;position:relative;word-break:break-word}.breadcrumbs__item:not(:last-child)::after{content:\\\"/\\\";padding-left:var(--space-xxs)}@media (max-width: 599px){.breadcrumbs__item:not(:last-child){display:none}}@media (max-width: 599px){.breadcrumbs__item:last-child{padding-left:var(--space-m)}}.breadcrumbs__icon{display:inline-block;fill:currentColor;height:24px;width:24px;left:0;position:absolute;top:50%;-webkit-transform:rotate(90deg) translateX(-50%);transform:rotate(90deg) translateX(-50%)}.breadcrumbs__icon--rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.breadcrumbs__icon--rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.breadcrumbs__icon--rotate-0{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.breadcrumbs__icon--rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.breadcrumbs__icon--left{margin-right:var(--space-xxs)}.breadcrumbs__icon--right{margin-left:var(--space-xxs)}.breadcrumbs__icon--xlarge{height:68px;width:68px}.breadcrumbs__icon--large{height:36px;width:36px}.breadcrumbs__icon--medium{height:24px;width:24px}.breadcrumbs__icon--small{height:18px;width:18px}@media (min-width: 600px){.breadcrumbs__icon{display:none}}.breadcrumbs__link,.breadcrumbs__link:link,.breadcrumbs__link:visited,.breadcrumbs__link:focus{color:var(--ui-white);text-decoration:none}.breadcrumbs__item a:hover{color:var(--ui-gray-light);text-decoration:underline}.breadcrumbs__list{list-style:none;margin:0;padding:0;margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;color:var(--ui-white)}.nypl--books-and-more .breadcrumbs{background-color:var(--section-books-and-more-secondary)}.nypl--locations .breadcrumbs{background-color:var(--section-locations-secondary)}.nypl--research .breadcrumbs{background-color:var(--section-research-secondary)}.nypl--whats-on .breadcrumbs{background-color:var(--section-whats-on-secondary)}.storybook-breadcrumbsExample .breadcrumbs{flex:1 1 50%;margin-left:unset;margin-right:var(--space-l);max-height:42px}.card{margin-bottom:var(--space-s);align-items:flex-start;border:1px solid var(--ui-gray-light);border-radius:5px;display:flex;flex-flow:column wrap;padding:var(--space) var(--space-l)}.card__heading,.card__footer{flex:100% 1}.card__columns{display:flex;flex-flow:column wrap;justify-content:space-between;width:100%}@media (min-width: 600px){.card__columns{flex-flow:row wrap}}.card__columns+.card__footer{margin-top:var(--space-xs)}.card__image{margin-bottom:var(--space-s);align-items:center;background-color:var(--ui-gray-xlight);display:flex;flex:0 0 150px;height:150px;justify-content:center}.card__image .image{max-height:100%;max-width:100%}@media (min-width: 600px){.card__image{margin-bottom:0;margin-right:var(--space-s);align-self:center;width:150px}}.card__content{margin-bottom:var(--space-s);flex:1 1}@media (min-width: 600px){.card__content{margin-right:var(--space-s);margin-bottom:0}}.card__ctas{flex:0 1 20%}@media (min-width: 600px){.card__ctas{margin-right:var(--space-s)}}.card__content+.card__ctas{margin-right:var(--space-s)}.sb-show-main .var-docs{padding:0 0 var(--space) 0}.sb-show-main .example-card .card__content>*{margin-bottom:var(--space-xxs)}.sb-show-main .example-card .book__callout{color:inherit;font-size:var(--font-size-1);font-weight:400;line-height:1.15;margin:0 0 0.5em;width:auto;font-style:italic;font-weight:300}.sb-show-main .example-card .book__callout__link{color:inherit}.sb-show-main .example-card .book__callout__link:hover{color:inherit}.sb-show-main .example-card .card__ctas{align-items:flex-end;display:flex;flex-flow:row wrap;justify-content:center;text-align:center}.sb-show-main .example-card .card__ctas .button{width:100%}.sb-show-main .example-card .card__ctas>*{margin-bottom:var(--space-xxs)}.sb-show-main .example-card .book__filetype{margin-bottom:var(--space-s)}.sb-show-main .example-card .book__description{font-style:italic}.checkbox{align-items:baseline;display:flex}.checkbox__input{margin-right:var(--space-xs)}.select{margin-bottom:var(--space-xs);-webkit-appearance:none;appearance:none;background-color:var(--ui-white);background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' viewBox='0 0 24 24'%3E%3Cpath d='M10.526 12.871L.263 1.676 1.737.324 12 11.52 22.263.324l1.474 1.352L13.474 12.87a2 2 0 01-2.948 0z'/%3E%3C/svg%3E\\\");background-position:right 0.7em top 70%;background-repeat:no-repeat;background-size:var(--space) auto;border:1px solid var(--ui-gray-medium);border-radius:2px;display:block;font-size:1rem;padding:var(--space-xs) var(--space-xl) var(--space-xs) var(--space-s);width:100%}.select::-ms-expand{display:none}.select:hover{border-color:var(--ui-gray-medium)}.select:active,.select:focus{border:1px solid var(--ui-focus);-webkit-box-shadow:0;box-shadow:0;outline:1px solid var(--ui-focus);z-index:9999}.select:disabled{background-color:var(--ui-gray-xxlight);color:var(--ui-gray-xdark)}.select--error{border:1px solid var(--ui-error)}*[dir=\\\"rtl\\\"] .nypl-ds .select,:root:lang(ar) .nypl-ds .select,:root:lang(iw) .nypl-ds .select{background-position:left 0.7em top 70%;padding:var(--space-xs) var(--space-l) var(--space-xs) var(--space-s)}.select-css:disabled,.select-css[aria-disabled=\\\"true\\\"]{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M10.526 12.871L.263 1.676 1.737.324 12 11.52 22.263.324l1.474 1.352L13.474 12.87a2 2 0 01-2.948 0z'/%3E%3C/svg%3E\\\");color:var(--ui-gray-xdark)}.select-css:disabled:hover,.select-css[aria-disabled=\\\"true\\\"]{border-color:#aaa}.label{margin-bottom:var(--space-xs);align-items:baseline;display:flex;font-weight:500;justify-content:space-between}.label__required-helper{font-size:var(--font-size--1);font-weight:300}.fieldset{border:none;margin:0;padding:0}.legend{border:0;font-weight:500}.helper-text{margin-bottom:var(--space-xs);font-size:var(--font-size--1)}.helper-text--error{color:var(--ui-error)}.hero{background-color:var(--ui-gray-warm-xlight)}.hero--50-50 .hero__content{margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;align-items:center;display:flex;flex-flow:column nowrap;padding:0 var(--space) var(--space) var(--space)}@media (min-width: 960px){.hero--50-50 .hero__content{flex-flow:row nowrap;padding:unset}}.hero--50-50 .hero__image{margin-bottom:var(--space-s)}@media (min-width: 960px){.hero--50-50 .hero__image{margin-bottom:unset;margin-right:var(--space-s);max-width:50%}}.hero--primary{align-items:center;display:flex;flex-flow:column nowrap;justify-content:center;min-height:350px}@media (min-width: 600px){.hero--primary{flex-flow:row nowrap}}.hero--primary .hero__content{background-color:var(--ui-black);color:var(--ui-white);flex:0 0 100%;padding:var(--space-xxl) var(--space-l)}.hero--primary .hero__content a{color:inherit;display:inline-block}@media (min-width: 600px){.hero--primary .hero__content{flex:0 0 60%;max-width:960px}}.hero--primary .hero__content+.placeholder{flex:0 1 200px;margin-left:var(--space-xl)}.hero--primary .hero__heading,.hero--primary .hero__body-text{margin-bottom:0}.hero--secondary{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%);overflow-x:hidden}.hero--secondary .hero__content{margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;display:flex;flex-flow:column nowrap}@media (min-width: 600px){.hero--secondary .hero__content{flex-flow:row wrap}}.hero--secondary .hero__content .hero__heading{margin-bottom:0;background-color:var(--ui-black);color:var(--ui-white);flex:1 1 100%;margin-top:0;padding-bottom:var(--space-xxs);position:relative;z-index:0}.hero--secondary .hero__content .hero__heading::before{background-color:var(--ui-black);content:\\\"\\\";height:100%;left:-2000px;position:absolute;width:4000px;z-index:-1}@media (min-width: 600px){.hero--secondary .hero__content .hero__heading{order:1}}.nypl--books-and-more .hero--secondary .hero__content .hero__heading{background-color:var(--section-books-and-more-primary)}.nypl--books-and-more .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-books-and-more-primary)}.nypl--locations .hero--secondary .hero__content .hero__heading{background-color:var(--section-locations-primary)}.nypl--locations .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-locations-primary)}.nypl--research .hero--secondary .hero__content .hero__heading{background-color:var(--section-research-primary)}.nypl--research .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-research-primary)}.nypl--whats-on .hero--secondary .hero__content .hero__heading{background-color:var(--section-whats-on-primary)}.nypl--whats-on .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-whats-on-primary)}.hero--secondary .hero__content .hero__body-text{margin-top:var(--space-xs)}@media (min-width: 600px){.hero--secondary .hero__content .hero__body-text{margin-right:var(--space-xs);flex:1 1 50%;order:2}}.hero--secondary .hero__content .hero__image{flex:1 1 100%;height:150px;min-width:0;object-fit:cover;width:100%}@media (min-width: 600px){.hero--secondary .hero__content .hero__image{flex:0 0 250px;order:3}}.image{display:block;height:auto;max-width:100%}.image--circle{border-radius:50%}.nypl-ds figure{margin:unset}.figure__image{margin-bottom:var(--space-xxs)}.figure__image--circle{border-radius:50%}.figure__figcaption{font-style:italic}.figcaption__credit,.figcaption__caption{margin-bottom:var(--space-xxs);font-size:var(--font-size--1)}.no-scroll{overflow:hidden;position:fixed;top:-100vh}.modal{padding:var(--space-s);background-color:var(--ui-gray-warm-xlight);height:100vh;left:0;overflow-y:auto;position:fixed;top:0;width:100vw;z-index:999}.pagination{margin-bottom:var(--space-l);align-items:stretch;display:flex;width:100%}.pagination>*:not(:last-child){margin-right:var(--space-xs)}.pagination__list{list-style:none;margin:0;padding:0;display:flex}.pagination__item{margin-right:var(--space-xs);list-style-type:none}.pagination__link{line-height:1.15;text-decoration:none}.pagination__link.selected{color:var(--ui-black);pointer-events:none}.pagination__link.disabled{color:var(--ui-gray-dark);pointer-events:none}.search-bar{display:flex;flex-flow:column nowrap}@media (min-width: 600px){.search-bar{flex-flow:row nowrap}}.search-bar .select{flex:1 1 25%}.search-bar .button{margin-bottom:var(--space-xs)}.skeleton-loader:empty{-webkit-animation:shine 1s infinite;animation:shine 1s infinite;background-image:-webkit-linear-gradient(350deg, rgba(255,255,255,0), rgba(255,255,255,0.5) 50%, rgba(255,255,255,0) 80%),-webkit-linear-gradient(var(--ui-gray-warm-light) 33px, transparent 0),-webkit-linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),-webkit-linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),-webkit-linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),-webkit-linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),-webkit-linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),-webkit-linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0);background-image:linear-gradient(100deg, rgba(255,255,255,0), rgba(255,255,255,0.5) 50%, rgba(255,255,255,0) 80%),linear-gradient(var(--ui-gray-warm-light) 33px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0);background-position:0 0,0px 0,0px 40px,0px 67px,0px 94px,0px 121px,0px 148px,0px 175px;background-repeat:repeat-y;background-size:50px 230px,300px 230px,250px 230px,250px 230px,250px 230px,200px 230px,200px 230px,200px 230px;height:485px;margin:auto;width:100%}@-webkit-keyframes shine{to{background-position:100% 0,0px 0,0px 40px,0px 67px,0px 94px,0px 121px,0px 148px,0px 175px}}@keyframes shine{to{background-position:100% 0,0px 0,0px 40px,0px 67px,0px 94px,0px 121px,0px 148px,0px 175px}}.status-badge{border-radius:4px;color:var(--ui-black);display:block;font-size:var(--font-size--1);font-style:italic;padding:var(--space-xxs);text-align:center}.status-badge--low{background-color:var(--ui-gray-light)}.status-badge--medium{background-color:#f9e08e}.status-badge--high{background-color:#fbe7e1}.main{margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;display:block}.main--with-sidebar{display:flex;flex-flow:column nowrap}@media (min-width: 600px){.main--with-sidebar{flex-flow:row wrap}}.content-header{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%);width:100vw}.content-top{flex:1 0 100%}.content-primary{flex:1 1;width:100%}@media (min-width: 600px){.content-primary--with-sidebar-right,.content-primary--with-sidebar-left{min-width:0}}.content-primary--with-sidebar-left{display:flex;flex-flow:column nowrap;order:1}@media (min-width: 600px){.content-primary--with-sidebar-left{margin-right:0}}.content-secondary{flex:0 0 25%}@media (min-width: 600px){.content-secondary{order:1}.content-secondary--with-sidebar-left{margin-right:var(--space-l);flex-basis:calc(25% - calc(4 * var(--space-s)))}.content-secondary--with-sidebar-right{flex-basis:calc(25% - calc(4 * var(--space-s)));margin-left:var(--space-l)}}.list{margin:unset}.list--no-list-styling{list-style:none;margin:0;padding:0}ul.list{list-style:none}ul.list li:before{color:var(--ui-gray-medium);content:\\\"\\\\2022\\\";display:inline-block;font-weight:bold;margin-left:-1em;width:1em}ul.list--no-list-styling li:before{content:unset}\\n\\n\\n/*# sourceMappingURL=styles.css.map*/\", \"\",{\"version\":3,\"sources\":[\"webpack://DesignSystemReactComponents/src/styles.scss\",\"webpack://node_modules/@nypl/design-system-react-components/dist/styles.css\"],\"names\":[],\"mappings\":\"AAAA,2EAAA,CAAA,KAAiF,gBAAA,CAAiB,6BAAA,CAA8B,KAAK,QAAA,CAAS,KAAK,aAAA,CAAc,GAAG,aAAA,CAAc,eAAA,CAAgB,GAAG,8BAAA,CAAA,sBAAA,CAAuB,QAAA,CAAS,gBAAA,CAAiB,IAAI,gCAAA,CAAiC,aAAA,CAAc,EAAE,4BAAA,CAA6B,YAAY,kBAAA,CAAmB,yBAAA,CAA0B,gCAAA,CAAiC,SAAS,kBAAA,CAAmB,cAAc,gCAAA,CAAiC,aAAA,CAAc,MAAM,aAAA,CAAc,QAAQ,aAAA,CAAc,aAAA,CAAc,iBAAA,CAAkB,uBAAA,CAAwB,IAAI,cAAA,CAAe,IAAI,UAAA,CAAW,IAAI,iBAAA,CAAkB,sCAAsC,mBAAA,CAAoB,cAAA,CAAe,gBAAA,CAAiB,QAAA,CAAS,aAAa,gBAAA,CAAiB,cAAc,mBAAA,CAAoB,sDAAsD,yBAAA,CAA0B,8HAA8H,iBAAA,CAAkB,SAAA,CAAU,kHAAkH,6BAAA,CAA8B,SAAS,6BAAA,CAA8B,OAAO,6BAAA,CAAA,qBAAA,CAAsB,aAAA,CAAc,aAAA,CAAc,cAAA,CAAe,SAAA,CAAU,kBAAA,CAAmB,SAAS,uBAAA,CAAwB,SAAS,aAAA,CAAc,iCAAiC,6BAAA,CAAA,qBAAA,CAAsB,SAAA,CAAU,sFAAsF,WAAA,CAAY,gBAAgB,4BAAA,CAA6B,mBAAA,CAAoB,2CAA2C,uBAAA,CAAwB,6BAA6B,yBAAA,CAA0B,YAAA,CAAa,QAAQ,aAAA,CAAc,QAAQ,iBAAA,CAAkB,SAAS,YAAA,CAAa,SAAS,YAAA,CAAa,yFAAA,CAAA,WAAqG,qBAAA,CAAsB,iBAAA,CAAkB,eAAA,CAAgB,uMAAA,CAAwM,WAAW,qBAAA,CAAsB,iBAAA,CAAkB,eAAA,CAAgB,kOAAA,CAAmO,WAAW,qBAAA,CAAsB,iBAAA,CAAkB,eAAA,CAAgB,iMAAA,CAAkM,WAAW,qBAAA,CAAsB,iBAAA,CAAkB,eAAA,CAAgB,4MAAA,CAA6M,WAAW,qBAAA,CAAsB,iBAAA,CAAkB,eAAA,CAAgB,0NAAA,CAA2N,WAAW,qBAAA,CAAsB,iBAAA,CAAkB,eAAA,CAAgB,0PAAA,CAA2P,WAAW,qBAAA,CAAsB,iBAAA,CAAkB,eAAA,CAAgB,4MAAA,CAA6M,WAAW,qBAAA,CAAsB,iBAAA,CAAkB,eAAA,CAAgB,4OAAA,CAA6O,MAAM,mCAAA,CAAoC,qCAAA,CAAsC,yCAAA,CAA0C,2CAAA,CAA4C,mCAAA,CAAoC,qCAAA,CAAsC,oCAAA,CAAqC,sCAAA,CAAuC,uCAAA,CAAwC,6CAAA,CAA8C,+CAAA,CAAgD,MAAM,iBAAA,CAAkB,iBAAA,CAAkB,wBAAA,CAAyB,uBAAA,CAAwB,yBAAA,CAA0B,wBAAA,CAAyB,6BAAA,CAA8B,yBAAA,CAA0B,8BAAA,CAA+B,0BAAA,CAA2B,qBAAA,CAAsB,mBAAA,CAAoB,mBAAA,CAAoB,0BAAA,CAA2B,4BAAA,CAA6B,MAAM,wBAAA,CAAyB,uBAAA,CAAwB,wBAAA,CAAyB,mBAAA,CAAoB,uBAAA,CAAwB,uBAAA,CAAwB,sBAAA,CAAuB,sBAAA,CAAuB,MAAM,yEAAA,CAA0E,4EAAA,CAA6E,MAAM,aAAA,CAAc,mCAAA,CAAoC,kCAAA,CAAmC,iCAAA,CAAkC,mCAAA,CAAoC,iCAAA,CAAkC,kCAAA,CAAmC,mCAAA,CAAoC,oCAAA,CAAqC,MAAM,yBAAA,CAA0B,0BAAA,CAA2B,yBAAA,CAA0B,uBAAA,CAAwB,WAAW,sBAAA,CAAuB,SAAS,6BAAA,CAAA,qBAAA,CAAsB,qBAAA,CAAsB,gCAAA,CAAiC,cAAA,CAAe,eAAA,CAAgB,eAAA,CAAgB,iBAAA,CAAkB,gDAAgD,0BAAA,CAAA,kBAAA,CAAmB,yJAAyJ,iCAAA,CAAkC,kBAAA,CAAmB,YAAA,CAAa,8GAA8G,iCAAA,CAAkC,kBAAA,CAAmB,YAAA,CAAa,OAAO,iCAAA,CAAkC,kBAAA,CAAmB,YAAA,CAAa,WAAW,4BAAA,CAA6B,0BAA0B,WAAW,6BAAA,CAAA,CAA+B,iBAAiB,8BAAA,CAA+B,0BAA0B,iBAAiB,+BAAA,CAAA,CAAiC,kBAAkB,eAAA,CAAgB,QAAA,CAAS,SAAA,CAAU,YAAA,CAAa,uBAAA,CAAwB,qCAAqC,4BAAA,CAA6B,0BAA0B,qCAAqC,eAAA,CAAgB,yDAAyD,2BAAA,CAA4B,qFAAqF,4BAAA,CAAA,CAA8B,0BAA0B,wCAAwC,8BAAA,CAA+B,2FAA2F,8BAAA,CAA+B,uGAAuG,8BAAA,CAAA,CAAgC,0BAA0B,kBAAkB,kBAAA,CAAmB,oBAAoB,YAAA,CAAa,iCAAiC,YAAA,CAAA,CAAc,4BAA4B,aAAA,CAAc,gBAAA,CAAiB,qCAAA,CAAsC,UAAA,CAAW,0BAA0B,4BAA4B,aAAA,CAAc,gBAAA,CAAiB,yCAAA,CAA0C,UAAA,CAAA,CAAY,yCAAyC,eAAA,CAAgB,aAAa,0CAAA,CAA2C,4BAAA,CAA6B,sBAAA,CAAuB,kBAAA,CAAmB,2CAAA,CAA4C,+BAAA,CAAgC,YAAA,CAAa,cAAA,CAAe,sBAAA,CAAuB,eAAA,CAAgB,iBAAA,CAAkB,UAAA,CAAW,0BAA0B,aAAa,6BAAA,CAAA,CAA+B,mBAAmB,8BAAA,CAA+B,0BAA0B,mBAAmB,+BAAA,CAAA,CAAiC,+BAA+B,uBAAA,CAAwB,kCAAkC,0CAAA,CAA2C,iBAAA,CAAkB,eAAA,CAAgB,gBAAA,CAAiB,kBAAkB,kBAAA,CAAmB,oBAAA,CAAqB,kBAAA,CAAmB,kBAAkB,6BAAA,CAA8B,UAAA,CAAW,eAAA,CAAgB,4BAAA,CAA6B,SAAA,CAAU,gBAAA,CAAiB,MAAM,oBAAA,CAAqB,iBAAA,CAAkB,WAAA,CAAY,UAAA,CAAW,kBAAkB,gCAAA,CAAA,wBAAA,CAAyB,kBAAkB,gCAAA,CAAA,wBAAA,CAAyB,gBAAgB,8BAAA,CAAA,sBAAA,CAAuB,iBAAiB,+BAAA,CAAA,uBAAA,CAAwB,YAAY,6BAAA,CAA8B,aAAa,4BAAA,CAA6B,cAAc,WAAA,CAAY,UAAA,CAAW,aAAa,WAAA,CAAY,UAAA,CAAW,cAAc,WAAA,CAAY,UAAA,CAAW,aAAa,WAAA,CAAY,UAAA,CAAW,QAAQ,uBAAA,CAAwB,iBAAA,CAAkB,cAAA,CAAe,YAAA,CAAa,sBAAA,CAAuB,oBAAA,CAAqB,uCAAA,CAAwC,WAAA,CAAY,qBAAA,CAAsB,cAAc,oBAAA,CAAqB,iBAAA,CAAkB,WAAA,CAAY,UAAA,CAAW,iBAAA,CAAkB,0BAA0B,gCAAA,CAAA,wBAAA,CAAyB,0BAA0B,gCAAA,CAAA,wBAAA,CAAyB,wBAAwB,8BAAA,CAAA,sBAAA,CAAuB,yBAAyB,+BAAA,CAAA,uBAAA,CAAwB,oBAAoB,6BAAA,CAA8B,qBAAqB,4BAAA,CAA6B,sBAAsB,WAAA,CAAY,UAAA,CAAW,qBAAqB,WAAA,CAAY,UAAA,CAAW,sBAAsB,WAAA,CAAY,UAAA,CAAW,qBAAqB,WAAA,CAAY,UAAA,CAAW,yBAAyB,4BAAA,CAA6B,0BAA0B,2BAAA,CAA4B,gBAAgB,qBAAA,CAAsB,cAAc,yCAAA,CAA0C,iBAAiB,qCAAA,CAAsC,yBAAA,CAA0B,mBAAA,CAAoB,cAAc,4BAAA,CAA6B,4BAAA,CAA6B,yBAAA,CAA0B,4BAA4B,oBAAA,CAAqB,oBAAoB,4BAAA,CAA6B,8BAAA,CAA+B,uBAAuB,4BAAA,CAA6B,yBAAA,CAA0B,mBAAA,CAAoB,iBAAiB,uBAAA,CAAwB,iBAAA,CAAkB,cAAA,CAAe,YAAA,CAAa,sBAAA,CAAuB,oBAAA,CAAqB,gCAAA,CAAiC,qCAAA,CAAsC,aAAA,CAAc,uBAAuB,oBAAA,CAAqB,iBAAA,CAAkB,WAAA,CAAY,UAAA,CAAW,iBAAA,CAAkB,mCAAmC,gCAAA,CAAA,wBAAA,CAAyB,mCAAmC,gCAAA,CAAA,wBAAA,CAAyB,iCAAiC,8BAAA,CAAA,sBAAA,CAAuB,kCAAkC,+BAAA,CAAA,uBAAA,CAAwB,6BAA6B,6BAAA,CAA8B,8BAA8B,4BAAA,CAA6B,+BAA+B,WAAA,CAAY,UAAA,CAAW,8BAA8B,WAAA,CAAY,UAAA,CAAW,+BAA+B,WAAA,CAAY,UAAA,CAAW,8BAA8B,WAAA,CAAY,UAAA,CAAW,kCAAkC,4BAAA,CAA6B,mCAAmC,2BAAA,CAA4B,yBAAyB,aAAA,CAAc,uBAAuB,uCAAA,CAAwC,0BAA0B,qCAAA,CAAsC,yBAAA,CAA0B,mBAAA,CAAoB,cAAc,uBAAA,CAAwB,iBAAA,CAAkB,cAAA,CAAe,YAAA,CAAa,sBAAA,CAAuB,oBAAA,CAAqB,uBAAA,CAAwB,iBAAA,CAAkB,cAAA,CAAe,YAAA,CAAa,sBAAA,CAAuB,oBAAA,CAAqB,gCAAA,CAAiC,qCAAA,CAAsC,aAAA,CAAc,kBAAA,CAAmB,oBAAoB,oBAAA,CAAqB,iBAAA,CAAkB,WAAA,CAAY,UAAA,CAAW,iBAAA,CAAkB,gCAAgC,gCAAA,CAAA,wBAAA,CAAyB,gCAAgC,gCAAA,CAAA,wBAAA,CAAyB,8BAA8B,8BAAA,CAAA,sBAAA,CAAuB,+BAA+B,+BAAA,CAAA,uBAAA,CAAwB,0BAA0B,6BAAA,CAA8B,2BAA2B,4BAAA,CAA6B,4BAA4B,WAAA,CAAY,UAAA,CAAW,2BAA2B,WAAA,CAAY,UAAA,CAAW,4BAA4B,WAAA,CAAY,UAAA,CAAW,2BAA2B,WAAA,CAAY,UAAA,CAAW,+BAA+B,4BAAA,CAA6B,gCAAgC,2BAAA,CAA4B,oBAAoB,oBAAA,CAAqB,iBAAA,CAAkB,WAAA,CAAY,UAAA,CAAW,iBAAA,CAAkB,gCAAgC,gCAAA,CAAA,wBAAA,CAAyB,gCAAgC,gCAAA,CAAA,wBAAA,CAAyB,8BAA8B,8BAAA,CAAA,sBAAA,CAAuB,+BAA+B,+BAAA,CAAA,uBAAA,CAAwB,0BAA0B,6BAAA,CAA8B,2BAA2B,4BAAA,CAA6B,4BAA4B,WAAA,CAAY,UAAA,CAAW,2BAA2B,WAAA,CAAY,UAAA,CAAW,4BAA4B,WAAA,CAAY,UAAA,CAAW,2BAA2B,WAAA,CAAY,UAAA,CAAW,+BAA+B,4BAAA,CAA6B,gCAAgC,2BAAA,CAA4B,sBAAsB,aAAA,CAAc,oBAAoB,uCAAA,CAAwC,uBAAuB,qCAAA,CAAsC,yBAAA,CAA0B,mBAAA,CAAoB,0BAA0B,4BAAA,CAA6B,sDAAsD,oBAAA,CAAqB,sCAAsC,8BAAA,CAA+B,wCAAwC,qBAAA,CAAsB,wDAAwD,cAAA,CAAe,4DAA4D,qBAAA,CAAsB,wEAAwE,0BAAA,CAA2B,WAAW,kBAAA,CAAmB,4BAAA,CAA6B,mBAAA,CAAoB,6BAAA,CAA8B,yBAAA,CAA0B,iBAAiB,8BAAA,CAA+B,yBAAA,CAA0B,iBAAiB,oBAAA,CAAqB,iBAAA,CAAkB,WAAA,CAAY,UAAA,CAAW,qBAAA,CAAsB,oBAAA,CAAqB,oBAAA,CAAqB,6BAA6B,gCAAA,CAAA,wBAAA,CAAyB,6BAA6B,gCAAA,CAAA,wBAAA,CAAyB,2BAA2B,8BAAA,CAAA,sBAAA,CAAuB,4BAA4B,+BAAA,CAAA,uBAAA,CAAwB,uBAAuB,6BAAA,CAA8B,wBAAwB,4BAAA,CAA6B,yBAAyB,WAAA,CAAY,UAAA,CAAW,wBAAwB,WAAA,CAAY,UAAA,CAAW,yBAAyB,WAAA,CAAY,UAAA,CAAW,wBAAwB,WAAA,CAAY,UAAA,CAAW,uBAAuB,4BAAA,CAA6B,wBAAwB,2BAAA,CAA4B,qBAAqB,WAAA,CAAY,UAAA,CAAW,YAAY,aAAA,CAAc,4BAAA,CAA6B,eAAA,CAAgB,gBAAA,CAAiB,eAAA,CAAgB,gBAAA,CAAiB,UAAA,CAAW,kBAAkB,aAAA,CAAc,wBAAwB,aAAA,CAAc,YAAY,aAAA,CAAc,4BAAA,CAA6B,eAAA,CAAgB,gBAAA,CAAiB,gBAAA,CAAiB,UAAA,CAAW,kBAAkB,aAAA,CAAc,wBAAwB,aAAA,CAAc,YAAY,aAAA,CAAc,4BAAA,CAA6B,eAAA,CAAgB,gBAAA,CAAiB,gBAAA,CAAiB,UAAA,CAAW,kBAAkB,aAAA,CAAc,wBAAwB,aAAA,CAAc,YAAY,aAAA,CAAc,4BAAA,CAA6B,eAAA,CAAgB,gBAAA,CAAiB,gBAAA,CAAiB,UAAA,CAAW,kBAAkB,aAAA,CAAc,wBAAwB,aAAA,CAAc,wBAAwB,aAAA,CAAc,4BAAA,CAA6B,eAAA,CAAgB,gBAAA,CAAiB,gBAAA,CAAiB,UAAA,CAAW,oCAAoC,aAAA,CAAc,gDAAgD,aAAA,CAAc,eAAe,aAAA,CAAc,oBAAA,CAAqB,qBAAqB,yBAAA,CAA0B,4BAA4B,kBAAA,CAAmB,4BAAA,CAA6B,mBAAA,CAAoB,6BAAA,CAA8B,yBAAA,CAA0B,kCAAkC,8BAAA,CAA+B,yBAAA,CAA0B,kCAAkC,oBAAA,CAAqB,iBAAA,CAAkB,WAAA,CAAY,UAAA,CAAW,qBAAA,CAAsB,oBAAA,CAAqB,oBAAA,CAAqB,8CAA8C,gCAAA,CAAA,wBAAA,CAAyB,8CAA8C,gCAAA,CAAA,wBAAA,CAAyB,4CAA4C,8BAAA,CAAA,sBAAA,CAAuB,6CAA6C,+BAAA,CAAA,uBAAA,CAAwB,wCAAwC,6BAAA,CAA8B,yCAAyC,4BAAA,CAA6B,0CAA0C,WAAA,CAAY,UAAA,CAAW,yCAAyC,WAAA,CAAY,UAAA,CAAW,0CAA0C,WAAA,CAAY,UAAA,CAAW,yCAAyC,WAAA,CAAY,UAAA,CAAW,wCAAwC,4BAAA,CAA6B,yCAAyC,2BAAA,CAA4B,sCAAsC,WAAA,CAAY,UAAA,CAAW,0BAA0B,4BAAA,CAA6B,oCAAoC,cAAA,CAAe,kCAAkC,gDAAA,CAAiD,qBAAA,CAAsB,iCAAiC,uBAAA,CAAwB,6BAAA,CAA8B,sCAAA,CAAuC,6LAA6L,UAAA,CAAW,6DAA6D,WAAA,CAAY,2EAA2E,aAAA,CAAc,0BAAA,CAA2B,uFAAuF,yBAAA,CAA0B,mEAAmE,yBAAA,CAA0B,6EAA6E,yBAAA,CAA0B,6CAA6C,gCAAA,CAAiC,mDAAmD,uCAAA,CAAwC,0BAAA,CAA2B,gNAAgN,gCAAA,CAAiC,oBAAA,CAAA,YAAA,CAAa,iCAAA,CAAkC,YAAA,CAAa,cAAc,gCAAA,CAAiC,0BAA0B,aAAa,YAAA,CAAa,6BAAA,CAA8B,gCAAgC,2BAAA,CAAA,CAA6B,8BAA8B,cAAA,CAAe,iBAAA,CAAkB,UAAA,CAAW,mCAAmC,YAAA,CAAa,gCAAgC,2BAAA,CAA4B,4BAAA,CAA6B,UAAA,CAAW,0CAA0C,YAAA,CAAa,UAAA,CAAW,gDAAgD,gCAAA,CAAiC,aAAA,CAAc,eAAA,CAAgB,eAAA,CAAgB,sCAAA,CAAuC,iBAAA,CAAkB,UAAA,CAAW,SAAA,CAAU,qCAAqC,oBAAA,CAAqB,QAAA,CAAS,SAAA,CAAU,+BAA+B,cAAA,CAAe,uBAAA,CAAwB,4CAA4C,qCAAA,CAAsC,qBAAqB,uBAAA,CAAwB,WAAW,sCAAA,CAAuC,aAAA,CAAc,UAAA,CAAW,yBAAyB,YAAA,CAAa,qBAAA,CAAsB,kBAAA,CAAmB,oBAAoB,YAAA,CAAa,yEAAA,CAA0E,4BAAA,CAAA,oBAAA,CAAqB,kBAAkB,uBAAA,CAAwB,iBAAA,CAAkB,cAAA,CAAe,YAAA,CAAa,sBAAA,CAAuB,oBAAA,CAAqB,gCAAA,CAAiC,qCAAA,CAAsC,aAAA,CAAc,kBAAA,CAAmB,WAAA,CAAY,cAAA,CAAe,eAAA,CAAgB,6BAAA,CAA8B,wBAAwB,oBAAA,CAAqB,iBAAA,CAAkB,WAAA,CAAY,UAAA,CAAW,iBAAA,CAAkB,oCAAoC,gCAAA,CAAA,wBAAA,CAAyB,oCAAoC,gCAAA,CAAA,wBAAA,CAAyB,kCAAkC,8BAAA,CAAA,sBAAA,CAAuB,mCAAmC,+BAAA,CAAA,uBAAA,CAAwB,8BAA8B,6BAAA,CAA8B,+BAA+B,4BAAA,CAA6B,gCAAgC,WAAA,CAAY,UAAA,CAAW,+BAA+B,WAAA,CAAY,UAAA,CAAW,gCAAgC,WAAA,CAAY,UAAA,CAAW,+BAA+B,WAAA,CAAY,UAAA,CAAW,mCAAmC,4BAAA,CAA6B,oCAAoC,2BAAA,CAA4B,0BAA0B,aAAA,CAAc,wBAAwB,uCAAA,CAAwC,2BAA2B,qCAAA,CAAsC,yBAAA,CAA0B,mBAAA,CAAoB,+BAA+B,YAAA,CAAa,wBAAwB,iBAAA,CAAkB,wBAAwB,qCAAA,CAAsC,uBAAuB,4BAAA,CAA6B,sBAAA,CAAuB,kBAAkB,SAAA,CAAU,iBAAA,CAAkB,UAAA,CAAW,0CAA0C,iCAAA,CAAkC,kBAAA,CAAmB,YAAA,CAAa,yDAAyD,cAAA,CAAe,wDAAwD,YAAA,CAAa,gDAAgD,oBAAA,CAAqB,8DAA8D,2BAAA,CAA4B,eAAA,CAAgB,kCAAkC,eAAA,CAAgB,aAAa,6BAAA,CAA8B,8BAAA,CAA+B,gCAAA,CAAiC,8BAAA,CAA+B,2BAAA,CAA4B,mBAAmB,6BAAA,CAA8B,kBAAA,CAAmB,cAAA,CAAe,6BAAA,CAA8B,eAAA,CAAgB,iBAAA,CAAkB,qBAAA,CAAsB,2CAA2C,WAAA,CAAY,6BAAA,CAA8B,0BAA0B,oCAAoC,YAAA,CAAA,CAAc,0BAA0B,8BAA8B,2BAAA,CAAA,CAA6B,mBAAmB,oBAAA,CAAqB,iBAAA,CAAkB,WAAA,CAAY,UAAA,CAAW,MAAA,CAAO,iBAAA,CAAkB,OAAA,CAAQ,gDAAA,CAAA,wCAAA,CAAyC,+BAA+B,gCAAA,CAAA,wBAAA,CAAyB,+BAA+B,gCAAA,CAAA,wBAAA,CAAyB,6BAA6B,8BAAA,CAAA,sBAAA,CAAuB,8BAA8B,+BAAA,CAAA,uBAAA,CAAwB,yBAAyB,6BAAA,CAA8B,0BAA0B,4BAAA,CAA6B,2BAA2B,WAAA,CAAY,UAAA,CAAW,0BAA0B,WAAA,CAAY,UAAA,CAAW,2BAA2B,WAAA,CAAY,UAAA,CAAW,0BAA0B,WAAA,CAAY,UAAA,CAAW,0BAA0B,mBAAmB,YAAA,CAAA,CAAc,+FAA+F,qBAAA,CAAsB,oBAAA,CAAqB,2BAA2B,0BAAA,CAA2B,yBAAA,CAA0B,mBAAmB,eAAA,CAAgB,QAAA,CAAS,SAAA,CAAU,aAAA,CAAc,gBAAA,CAAiB,sBAAA,CAAuB,UAAA,CAAW,qBAAA,CAAsB,mCAAmC,wDAAA,CAAyD,8BAA8B,mDAAA,CAAoD,6BAA6B,kDAAA,CAAmD,6BAA6B,kDAAA,CAAmD,2CAA2C,YAAA,CAAa,iBAAA,CAAkB,2BAAA,CAA4B,eAAA,CAAgB,MAAM,4BAAA,CAA6B,sBAAA,CAAuB,qCAAA,CAAsC,iBAAA,CAAkB,YAAA,CAAa,qBAAA,CAAsB,mCAAA,CAAoC,6BAA6B,WAAA,CAAU,eAAe,YAAA,CAAa,qBAAA,CAAsB,6BAAA,CAA8B,UAAA,CAAW,0BAA0B,eAAe,kBAAA,CAAA,CAAoB,6BAA6B,0BAAA,CAA2B,aAAa,4BAAA,CAA6B,kBAAA,CAAmB,sCAAA,CAAuC,YAAA,CAAa,cAAA,CAAe,YAAA,CAAa,sBAAA,CAAuB,oBAAoB,eAAA,CAAgB,cAAA,CAAe,0BAA0B,aAAa,eAAA,CAAgB,2BAAA,CAA4B,iBAAA,CAAkB,WAAA,CAAA,CAAa,eAAe,4BAAA,CAA6B,QAAA,CAAS,0BAA0B,eAAe,2BAAA,CAA4B,eAAA,CAAA,CAAiB,YAAY,YAAA,CAAa,0BAA0B,YAAY,2BAAA,CAAA,CAA6B,2BAA2B,2BAAA,CAA4B,wBAAwB,0BAAA,CAA2B,6CAA6C,8BAAA,CAA+B,2CAA2C,aAAA,CAAc,4BAAA,CAA6B,eAAA,CAAgB,gBAAA,CAAiB,gBAAA,CAAiB,UAAA,CAAW,iBAAA,CAAkB,eAAA,CAAgB,iDAAiD,aAAA,CAAc,uDAAuD,aAAA,CAAc,wCAAwC,oBAAA,CAAqB,YAAA,CAAa,kBAAA,CAAmB,sBAAA,CAAuB,iBAAA,CAAkB,gDAAgD,UAAA,CAAW,0CAA0C,8BAAA,CAA+B,4CAA4C,4BAAA,CAA6B,+CAA+C,iBAAA,CAAkB,UAAU,oBAAA,CAAqB,YAAA,CAAa,iBAAiB,4BAAA,CAA6B,QAAQ,6BAAA,CAAmD,uBAAA,CAAwB,eAAA,CAAgB,gCAAA,CAAiC,2PAAA,CAA4P,uCAAA,CAAwC,2BAAA,CAA4B,iCAAA,CAAkC,sCAAA,CAAuC,iBAAA,CAAkB,aAAA,CAAc,cAAA,CAAe,sEAAA,CAAuE,UAAA,CAAW,oBAAoB,YAAA,CAAa,cAAc,kCAAA,CAAmC,6BAA6B,gCAAA,CAAiC,oBAAA,CAAA,YAAA,CAAa,iCAAA,CAAkC,YAAA,CAAa,iBAAiB,uCAAA,CAAwC,0BAAA,CAA2B,eAAe,gCAAA,CAAiC,8FAA8F,sCAAA,CAAuC,qEAAA,CAAsE,uDAAuD,uOAAA,CAAwO,0BAAA,CAA2B,6DAA6D,iBAAA,CAAkB,OAAO,6BAAA,CAA8B,oBAAA,CAAqB,YAAA,CAAa,eAAA,CAAgB,6BAAA,CAA8B,wBAAwB,6BAAA,CAA8B,eAAA,CAAgB,UAAU,WAAA,CAAY,QAAA,CAAS,SAAA,CAAU,QAAQ,QAAA,CAAS,eAAA,CAAgB,aAAa,6BAAA,CAA8B,6BAAA,CAA8B,oBAAoB,qBAAA,CAAsB,MAAM,2CAAA,CAA4C,4BAA4B,aAAA,CAAc,gBAAA,CAAiB,sBAAA,CAAuB,UAAA,CAAW,kBAAA,CAAmB,YAAA,CAAa,uBAAA,CAAwB,gDAAA,CAAiD,0BAA0B,4BAA4B,oBAAA,CAAqB,aAAA,CAAA,CAAe,0BAA0B,4BAAA,CAA6B,0BAA0B,0BAA0B,mBAAA,CAAoB,2BAAA,CAA4B,aAAA,CAAA,CAAe,eAAe,kBAAA,CAAmB,YAAA,CAAa,uBAAA,CAAwB,sBAAA,CAAuB,gBAAA,CAAiB,0BAA0B,eAAe,oBAAA,CAAA,CAAsB,8BAA8B,gCAAA,CAAiC,qBAAA,CAAsB,aAAA,CAAc,uCAAA,CAAwC,gCAAgC,aAAA,CAAc,oBAAA,CAAqB,0BAA0B,8BAA8B,YAAA,CAAa,eAAA,CAAA,CAAiB,2CAA2C,cAAA,CAAe,2BAAA,CAA4B,8DAA8D,eAAA,CAAgB,iBAAiB,6BAAA,CAA8B,8BAAA,CAA+B,iBAAA,CAAkB,gCAAgC,aAAA,CAAc,gBAAA,CAAiB,sBAAA,CAAuB,UAAA,CAAW,YAAA,CAAa,uBAAA,CAAwB,0BAA0B,gCAAgC,kBAAA,CAAA,CAAoB,+CAA+C,eAAA,CAAgB,gCAAA,CAAiC,qBAAA,CAAsB,aAAA,CAAc,YAAA,CAAa,+BAAA,CAAgC,iBAAA,CAAkB,SAAA,CAAU,uDAAuD,gCAAA,CAAiC,UAAA,CAAW,WAAA,CAAY,YAAA,CAAa,iBAAA,CAAkB,YAAA,CAAa,UAAA,CAAW,0BAA0B,+CAA+C,OAAA,CAAA,CAAS,qEAAqE,sDAAA,CAAuD,6EAA6E,sDAAA,CAAuD,gEAAgE,iDAAA,CAAkD,wEAAwE,iDAAA,CAAkD,+DAA+D,gDAAA,CAAiD,uEAAuE,gDAAA,CAAiD,+DAA+D,gDAAA,CAAiD,uEAAuE,gDAAA,CAAiD,iDAAiD,0BAAA,CAA2B,0BAA0B,iDAAiD,4BAAA,CAA6B,YAAA,CAAa,OAAA,CAAA,CAAS,6CAA6C,aAAA,CAAc,YAAA,CAAa,WAAA,CAAY,gBAAA,CAAiB,UAAA,CAAW,0BAA0B,6CAA6C,cAAA,CAAe,OAAA,CAAA,CAAS,OAAO,aAAA,CAAc,WAAA,CAAY,cAAA,CAAe,eAAe,iBAAA,CAAkB,gBAAgB,YAAA,CAAa,eAAe,8BAAA,CAA+B,uBAAuB,iBAAA,CAAkB,oBAAoB,iBAAA,CAAkB,yCAAyC,8BAAA,CAA+B,6BAAA,CAA8B,WAAW,eAAA,CAAgB,cAAA,CAAe,UAAA,CAAW,OAAO,sBAAA,CAAuB,2CAAA,CAA4C,YAAA,CAAa,MAAA,CAAO,eAAA,CAAgB,cAAA,CAAe,KAAA,CAAM,WAAA,CAAY,WAAA,CAAY,YAAY,4BAAA,CAA6B,mBAAA,CAAoB,YAAA,CAAa,UAAA,CAAW,+BAA+B,4BAAA,CAA6B,kBAAkB,eAAA,CAAgB,QAAA,CAAS,SAAA,CAAU,YAAA,CAAa,kBAAkB,4BAAA,CAA6B,oBAAA,CAAqB,kBAAkB,gBAAA,CAAiB,oBAAA,CAAqB,2BAA2B,qBAAA,CAAsB,mBAAA,CAAoB,2BAA2B,yBAAA,CAA0B,mBAAA,CAAoB,YAAY,YAAA,CAAa,uBAAA,CAAwB,0BAA0B,YAAY,oBAAA,CAAA,CAAsB,oBAAoB,YAAA,CAAa,oBAAoB,6BAAA,CAA8B,uBAAuB,mCAAA,CAAA,2BAAA,CAA4B,0mBAAA,CAAA,0iBAAA,CAA2iB,sFAAA,CAAuF,0BAAA,CAA2B,8GAAA,CAA+G,YAAA,CAAa,WAAA,CAAY,UAAA,CAAW,yBAAiB,GAAG,yFAAA,CAAA,CAApB,iBAAiB,GAAG,yFAAA,CAAA,CAA2F,cAAc,iBAAA,CAAkB,qBAAA,CAAsB,aAAA,CAAc,6BAAA,CAA8B,iBAAA,CAAkB,wBAAA,CAAyB,iBAAA,CAAkB,mBAAmB,qCAAA,CAAsC,sBAAsB,wBAAA,CAAyB,oBAAoB,wBAAA,CAAyB,MAAM,aAAA,CAAc,gBAAA,CAAiB,sBAAA,CAAuB,UAAA,CAAW,aAAA,CAAc,oBAAoB,YAAA,CAAa,uBAAA,CAAwB,0BAA0B,oBAAoB,kBAAA,CAAA,CAAoB,gBAAgB,6BAAA,CAA8B,8BAAA,CAA+B,WAAA,CAAY,aAAa,aAAA,CAAc,iBAAiB,QAAA,CAAS,UAAA,CAAW,0BAA0B,yEAAyE,WAAA,CAAA,CAAa,oCAAoC,YAAA,CAAa,uBAAA,CAAwB,OAAA,CAAQ,0BAA0B,oCAAoC,cAAA,CAAA,CAAgB,mBAAmB,YAAA,CAAa,0BAA0B,mBAAmB,OAAA,CAAQ,sCAAsC,2BAAA,CAA4B,+CAAA,CAAgD,uCAAuC,+CAAA,CAAgD,0BAAA,CAAA,CAA4B,MAAM,YAAA,CAAa,uBAAuB,eAAA,CAAgB,QAAA,CAAS,SAAA,CAAU,QAAQ,eAAA,CAAgB,kBAAkB,2BAAA,CAA4B,eAAA,CAAgB,oBAAA,CAAqB,gBAAA,CAAiB,gBAAA,CAAiB,SAAA,CAAU,mCAAmC,aAAA;;;ACG7+lC,oCAAoC\",\"sourcesContent\":[\"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\\\"button\\\"]:-moz-focusring,[type=\\\"reset\\\"]:-moz-focusring,[type=\\\"submit\\\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=\\\"checkbox\\\"],[type=\\\"radio\\\"]{box-sizing:border-box;padding:0}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{-webkit-appearance:textfield;outline-offset:-2px}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}/*! system-font.css v2.0.2 | CC0-1.0 License | github.com/jonathantneal/system-font-css */@font-face{font-family:system-ui;font-style:normal;font-weight:300;src:local(\\\".SFNSText-Light\\\"),local(\\\".HelveticaNeueDeskInterface-Light\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Light\\\"),local(\\\"Ubuntu Light\\\"),local(\\\"Roboto-Light\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:300;src:local(\\\".SFNSText-LightItalic\\\"),local(\\\".HelveticaNeueDeskInterface-Italic\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Light Italic\\\"),local(\\\"Ubuntu Light Italic\\\"),local(\\\"Roboto-LightItalic\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:normal;font-weight:400;src:local(\\\".SFNSText-Regular\\\"),local(\\\".HelveticaNeueDeskInterface-Regular\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI\\\"),local(\\\"Ubuntu\\\"),local(\\\"Roboto-Regular\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:400;src:local(\\\".SFNSText-Italic\\\"),local(\\\".HelveticaNeueDeskInterface-Italic\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Italic\\\"),local(\\\"Ubuntu Italic\\\"),local(\\\"Roboto-Italic\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:normal;font-weight:500;src:local(\\\".SFNSText-Medium\\\"),local(\\\".HelveticaNeueDeskInterface-MediumP4\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Semibold\\\"),local(\\\"Ubuntu Medium\\\"),local(\\\"Roboto-Medium\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:500;src:local(\\\".SFNSText-MediumItalic\\\"),local(\\\".HelveticaNeueDeskInterface-MediumItalicP4\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Semibold Italic\\\"),local(\\\"Ubuntu Medium Italic\\\"),local(\\\"Roboto-MediumItalic\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}@font-face{font-family:system-ui;font-style:normal;font-weight:700;src:local(\\\".SFNSText-Bold\\\"),local(\\\".HelveticaNeueDeskInterface-Bold\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Bold\\\"),local(\\\"Ubuntu Bold\\\"),local(\\\"Roboto-Bold\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:700;src:local(\\\".SFNSText-BoldItalic\\\"),local(\\\".HelveticaNeueDeskInterface-BoldItalic\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Bold Italic\\\"),local(\\\"Ubuntu Bold Italic\\\"),local(\\\"Roboto-BoldItalic\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}:root{--section-whats-on-primary: #8a1a9c;--section-whats-on-secondary: #7c1097;--section-books-and-more-primary: #d0343a;--section-books-and-more-secondary: #bb1d12;--section-research-primary: #377f8b;--section-research-secondary: #02626a;--section-locations-primary: #d0343a;--section-locations-secondary: #bb1d12;--section-research-library-lpa: #008375;--section-research-library-schomburg: #c54b38;--section-research-library-schwartzman: #0071ce}:root{--ui-black: black;--ui-white: white;--ui-gray-xdark: #424242;--ui-gray-dark: #616161;--ui-gray-medium: #bdbdbd;--ui-gray-light: #e0e0e0;--ui-gray-warm-light: #efedeb;--ui-gray-xlight: #f5f5f5;--ui-gray-warm-xlight: #f8f8f7;--ui-gray-xxlight: #fafafa;--ui-success: #077719;--ui-error: #97272c;--ui-focus: #4181f1;--ui-link-primary: #0576d3;--ui-link-secondary: #004b98}:root{--font-size--3: 0.625rem;--font-size--2: 0.75rem;--font-size--1: 0.875rem;--font-size-0: 1rem;--font-size-1: 1.125rem;--font-size-2: 1.375rem;--font-size-3: 1.75rem;--font-size-4: 2.25rem}:root{--typeface-body: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;--typeface-heading: -apple-system, BlinkMacSystemFont, system-ui, sans-serif}:root{--space: 1rem;--space-xxs: calc(var(--space) / 4);--space-xs: calc(var(--space) / 2);--space-s: calc(var(--space) * 1);--space-m: calc(var(--space) * 1.5);--space-l: calc(var(--space) * 2);--space-xl: calc(var(--space) * 3);--space-xxl: calc(var(--space) * 4);--space-xxxl: calc(var(--space) * 6)}:root{--breakpoint-small: 320px;--breakpoint-medium: 600px;--breakpoint-large: 960px;--breakpoint-xl: 1280px}.container{padding:var(--space-s)}.nypl-ds{box-sizing:border-box;color:var(--ui-black);font-family:var(--typeface-body);font-size:16px;font-weight:300;line-height:1.5;overflow-x:hidden}.nypl-ds *,.nypl-ds *::after,.nypl-ds *::before{box-sizing:inherit}.nypl-ds input:not([disabled]):focus,.nypl-ds select:not([disabled]):focus,.nypl-ds textarea:not([disabled]):focus,.nypl-ds button:not([disabled]):focus{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.nypl-ds iframe:focus,.nypl-ds [href]:focus,.nypl-ds [tabindex]:focus,.nypl-ds [contentEditable=\\\"true\\\"]:focus{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.focus{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.card-grid{margin-bottom:var(--space-l)}@media (min-width: 960px){.card-grid{margin-bottom:var(--space-xl)}}.card-grid--full{margin-bottom:var(--space-xxl)}@media (min-width: 960px){.card-grid--full{margin-bottom:var(--space-xxxl)}}.card-grid__cards{list-style:none;margin:0;padding:0;display:flex;flex-flow:column nowrap}.card-grid__cards>*:not(:last-child){margin-bottom:var(--space-s)}@media (min-width: 960px){.card-grid__cards>*:not(:last-child){margin-bottom:0}.card-grid__cards>*:not(:last-child):not(:nth-child(3n)){margin-right:var(--space-l)}.card-grid__cards>*:not(:last-child):not(:nth-last-child(2)):not(:nth-last-child(3)){margin-bottom:var(--space-l)}}@media (min-width: 960px){.card-grid__cards--full>*:nth-child(3n){margin-bottom:var(--space-xxl)}.card-grid__cards--full>*:not(:last-child):not(:nth-last-child(2)):not(:nth-last-child(3)){margin-bottom:var(--space-xxl)}.card-grid__cards--full>*:nth-child(3n+2):not(:last-child):not(:nth-child(3n)):not(:nth-last-child(2)){margin-bottom:var(--space-xxl)}}@media (min-width: 960px){.card-grid__cards{flex-flow:row wrap}.card-grid__cards>*{flex:0 0 30%}.card-grid__cards>.featured-card{flex:1 0 31%}}.card-grid__cards--bg-color{margin:0 auto;max-width:1280px;padding:var(--space-s) var(--space-s);width:100%}@media (min-width: 960px){.card-grid__cards--bg-color{margin:0 auto;max-width:1280px;padding:var(--space-xxl) var(--space-xxl);width:100%}}.card-grid__cards--bg-color>*:last-child{margin-bottom:0}.placeholder{--color-place-holder: var(--ui-gray-light);margin-bottom:var(--space-l);padding:var(--space-s);align-items:center;border:4px dashed var(--color-place-holder);color:var(--color-place-holder);display:flex;font-size:3rem;justify-content:center;line-height:1.4;padding:4rem 1rem;width:100%}@media (min-width: 960px){.placeholder{margin-bottom:var(--space-xl)}}.placeholder--full{margin-bottom:var(--space-xxl)}@media (min-width: 960px){.placeholder--full{margin-bottom:var(--space-xxxl)}}.nypl-ds p,.nypl-ds .paragraph{margin:0 0 var(--space)}.blockquote,.text-long blockquote{border-left:solid 3px var(--ui-gray-light);font-style:italic;margin-left:1em;padding-left:1em}.hr,.text-long hr{border-style:solid;border-width:1px 0 0;color:currentColor}.long-description{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute !important;width:1px;word-wrap:normal}.icon{display:inline-block;fill:currentColor;height:24px;width:24px}.icon--rotate-180{transform:rotate(180deg)}.icon--rotate-270{transform:rotate(270deg)}.icon--rotate-0{transform:rotate(0deg)}.icon--rotate-90{transform:rotate(90deg)}.icon--left{margin-right:var(--space-xxs)}.icon--right{margin-left:var(--space-xxs)}.icon--xlarge{height:68px;width:68px}.icon--large{height:36px;width:36px}.icon--medium{height:24px;width:24px}.icon--small{height:18px;width:18px}.button{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-link-primary);border:none;color:var(--ui-white)}.button .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button .icon--rotate-180{transform:rotate(180deg)}.button .icon--rotate-270{transform:rotate(270deg)}.button .icon--rotate-0{transform:rotate(0deg)}.button .icon--rotate-90{transform:rotate(90deg)}.button .icon--left{margin-right:var(--space-xxs)}.button .icon--right{margin-left:var(--space-xxs)}.button .icon--xlarge{height:68px;width:68px}.button .icon--large{height:36px;width:36px}.button .icon--medium{height:24px;width:24px}.button .icon--small{height:18px;width:18px}.button .icon--icon-left{margin-right:var(--space-xs)}.button .icon--icon-right{margin-left:var(--space-xs)}.button:visited{color:var(--ui-white)}.button:hover{background-color:var(--ui-link-secondary)}.button:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.button--link{background-color:transparent;color:var(--ui-link-primary);text-decoration:underline}.button--link--no-underline{text-decoration:none}.button--link:hover{background-color:transparent;color:var(--ui-link-secondary)}.button--link:disabled{background-color:transparent;color:var(--ui-gray-dark);pointer-events:none}.button--outline{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-white);border:1px solid var(--ui-gray-light);color:inherit}.button--outline .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button--outline .icon--rotate-180{transform:rotate(180deg)}.button--outline .icon--rotate-270{transform:rotate(270deg)}.button--outline .icon--rotate-0{transform:rotate(0deg)}.button--outline .icon--rotate-90{transform:rotate(90deg)}.button--outline .icon--left{margin-right:var(--space-xxs)}.button--outline .icon--right{margin-left:var(--space-xxs)}.button--outline .icon--xlarge{height:68px;width:68px}.button--outline .icon--large{height:36px;width:36px}.button--outline .icon--medium{height:24px;width:24px}.button--outline .icon--small{height:18px;width:18px}.button--outline .icon--icon-left{margin-right:var(--space-xs)}.button--outline .icon--icon-right{margin-left:var(--space-xs)}.button--outline:visited{color:inherit}.button--outline:hover{background-color:var(--ui-gray-xxlight)}.button--outline:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.button--pill{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-white);border:1px solid var(--ui-gray-light);color:inherit;border-radius:20px}.button--pill .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button--pill .icon--rotate-180{transform:rotate(180deg)}.button--pill .icon--rotate-270{transform:rotate(270deg)}.button--pill .icon--rotate-0{transform:rotate(0deg)}.button--pill .icon--rotate-90{transform:rotate(90deg)}.button--pill .icon--left{margin-right:var(--space-xxs)}.button--pill .icon--right{margin-left:var(--space-xxs)}.button--pill .icon--xlarge{height:68px;width:68px}.button--pill .icon--large{height:36px;width:36px}.button--pill .icon--medium{height:24px;width:24px}.button--pill .icon--small{height:18px;width:18px}.button--pill .icon--icon-left{margin-right:var(--space-xs)}.button--pill .icon--icon-right{margin-left:var(--space-xs)}.button--pill .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button--pill .icon--rotate-180{transform:rotate(180deg)}.button--pill .icon--rotate-270{transform:rotate(270deg)}.button--pill .icon--rotate-0{transform:rotate(0deg)}.button--pill .icon--rotate-90{transform:rotate(90deg)}.button--pill .icon--left{margin-right:var(--space-xxs)}.button--pill .icon--right{margin-left:var(--space-xxs)}.button--pill .icon--xlarge{height:68px;width:68px}.button--pill .icon--large{height:36px;width:36px}.button--pill .icon--medium{height:24px;width:24px}.button--pill .icon--small{height:18px;width:18px}.button--pill .icon--icon-left{margin-right:var(--space-xs)}.button--pill .icon--icon-right{margin-left:var(--space-xs)}.button--pill:visited{color:inherit}.button--pill:hover{background-color:var(--ui-gray-xxlight)}.button--pill:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.nypl-ds a,.nypl-ds .link{color:var(--ui-link-primary)}.nypl-ds a--no-underline,.nypl-ds .link--no-underline{text-decoration:none}.nypl-ds a:hover,.nypl-ds .link:hover{color:var(--ui-link-secondary)}.nypl-ds a.button,.nypl-ds .link.button{color:var(--ui-white)}.nypl-ds a[role=\\\"button\\\"],.nypl-ds .link[role=\\\"button\\\"]{cursor:pointer}.nypl-ds a--dark-background,.nypl-ds .link--dark-background{color:var(--ui-white)}.nypl-ds a--dark-background:hover,.nypl-ds .link--dark-background:hover{color:var(--ui-gray-light)}.more-link{align-items:center;color:var(--ui-link-primary);display:inline-flex;justify-content:space-between;text-decoration:underline}.more-link:hover{color:var(--ui-link-secondary);text-decoration:underline}.more-link__icon{display:inline-block;fill:currentColor;height:24px;width:24px;height:var(--space-s);text-decoration:none;width:var(--space-s)}.more-link__icon--rotate-180{transform:rotate(180deg)}.more-link__icon--rotate-270{transform:rotate(270deg)}.more-link__icon--rotate-0{transform:rotate(0deg)}.more-link__icon--rotate-90{transform:rotate(90deg)}.more-link__icon--left{margin-right:var(--space-xxs)}.more-link__icon--right{margin-left:var(--space-xxs)}.more-link__icon--xlarge{height:68px;width:68px}.more-link__icon--large{height:36px;width:36px}.more-link__icon--medium{height:24px;width:24px}.more-link__icon--small{height:18px;width:18px}.more-link__icon--left{margin-right:var(--space-xs)}.more-link__icon--right{margin-left:var(--space-xs)}.more-link__icon svg{height:100%;width:100%}.nypl-ds h1{color:inherit;font-size:var(--font-size-4);font-weight:300;letter-spacing:0;line-height:1.1;margin:0 0 0.5em;width:auto}.nypl-ds h1__link{color:inherit}.nypl-ds h1__link:hover{color:inherit}.nypl-ds h2{color:inherit;font-size:var(--font-size-3);font-weight:500;line-height:1.25;margin:0 0 0.5em;width:auto}.nypl-ds h2__link{color:inherit}.nypl-ds h2__link:hover{color:inherit}.nypl-ds h3{color:inherit;font-size:var(--font-size-2);font-weight:500;line-height:1.25;margin:0 0 0.5em;width:auto}.nypl-ds h3__link{color:inherit}.nypl-ds h3__link:hover{color:inherit}.nypl-ds h4{color:inherit;font-size:var(--font-size-1);font-weight:500;line-height:1.25;margin:0 0 0.5em;width:auto}.nypl-ds h4__link{color:inherit}.nypl-ds h4__link:hover{color:inherit}.nypl-ds h5,.nypl-ds h6{color:inherit;font-size:var(--font-size-1);font-weight:400;line-height:1.15;margin:0 0 0.5em;width:auto}.nypl-ds h5__link,.nypl-ds h6__link{color:inherit}.nypl-ds h5__link:hover,.nypl-ds h6__link:hover{color:inherit}.heading__link{color:inherit;text-decoration:none}.heading__link:hover{text-decoration:underline}.heading-section__more-link{align-items:center;color:var(--ui-link-primary);display:inline-flex;justify-content:space-between;text-decoration:underline}.heading-section__more-link:hover{color:var(--ui-link-secondary);text-decoration:underline}.heading-section__more-link__icon{display:inline-block;fill:currentColor;height:24px;width:24px;height:var(--space-s);text-decoration:none;width:var(--space-s)}.heading-section__more-link__icon--rotate-180{transform:rotate(180deg)}.heading-section__more-link__icon--rotate-270{transform:rotate(270deg)}.heading-section__more-link__icon--rotate-0{transform:rotate(0deg)}.heading-section__more-link__icon--rotate-90{transform:rotate(90deg)}.heading-section__more-link__icon--left{margin-right:var(--space-xxs)}.heading-section__more-link__icon--right{margin-left:var(--space-xxs)}.heading-section__more-link__icon--xlarge{height:68px;width:68px}.heading-section__more-link__icon--large{height:36px;width:36px}.heading-section__more-link__icon--medium{height:24px;width:24px}.heading-section__more-link__icon--small{height:18px;width:18px}.heading-section__more-link__icon--left{margin-right:var(--space-xs)}.heading-section__more-link__icon--right{margin-left:var(--space-xs)}.heading-section__more-link__icon svg{height:100%;width:100%}.heading-section__heading{margin-right:var(--space-xs)}.heading-section__heading--has-link{display:inline}.page-title__heading--block-color{background-color:var(--section-research-primary);color:var(--ui-white)}.input,.react-autosuggest__input{padding:var(--space-xs);margin-bottom:var(--space-xs);border:1px solid var(--ui-gray-medium)}.input[type=\\\"text\\\"],.react-autosuggest__input[type=\\\"text\\\"],.input[type=\\\"number\\\"],.react-autosuggest__input[type=\\\"number\\\"],.input[type=\\\"password\\\"],.react-autosuggest__input[type=\\\"password\\\"]{width:100%}.input[type=\\\"radio\\\"],.react-autosuggest__input[type=\\\"radio\\\"]{width:unset}.input[type=\\\"radio\\\"]+.label,.react-autosuggest__input[type=\\\"radio\\\"]+.label{display:unset;margin-left:var(--space-s)}.input::-webkit-input-placeholder,.react-autosuggest__input::-webkit-input-placeholder{color:var(--ui-gray-dark)}.input:-moz-placeholder,.react-autosuggest__input:-moz-placeholder{color:var(--ui-gray-dark)}.input:-ms-input-placeholder,.react-autosuggest__input:-ms-input-placeholder{color:var(--ui-gray-dark)}.input:hover,.react-autosuggest__input:hover{border-color:var(--ui-gray-dark)}.input:disabled,.react-autosuggest__input:disabled{background-color:var(--ui-gray-xxlight);color:var(--ui-gray-xdark)}.input:active,.react-autosuggest__input:active,.input:focus,.react-autosuggest__input:focus,.input:active:hover,.react-autosuggest__input:active:hover,.input:focus:hover,.react-autosuggest__input:focus:hover{border:1px solid var(--ui-focus);box-shadow:0;outline:1px solid var(--ui-focus);z-index:9999}.input--error{border:1px solid var(--ui-error)}@media (min-width: 400px){.input-group{display:flex;justify-content:space-between}.input-group>*:not(:last-child){margin-right:var(--space-m)}}.react-autosuggest__container{display:inline;position:relative;width:100%}.react-autosuggest__input--focused{outline:none}.react-autosuggest__input--open{border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.react-autosuggest__suggestions-container{display:none;width:100%}.react-autosuggest__suggestions-container--open{background-color:var(--ui-white);display:block;font-weight:300;margin-top:-6px;outline:1px solid var(--ui-gray-light);position:absolute;width:100%;z-index:2}.react-autosuggest__suggestions-list{list-style-type:none;margin:0;padding:0}.react-autosuggest__suggestion{cursor:pointer;padding:var(--space-xs)}.react-autosuggest__suggestion--highlighted{background-color:var(--ui-gray-light)}.auto-suggest-bottom{padding:var(--space-xs)}.accordion{border:1px solid var(--ui-gray-medium);color:inherit;width:100%}.accordion--fixed-height{display:flex;flex-direction:column;max-height:inherit}.accordion__content{display:none;padding:var(--space-xxs) var(--space-xxxl) var(--space-xs) var(--space-s);transition:all 0.35s}.accordion__label{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-white);border:1px solid var(--ui-gray-light);color:inherit;align-items:center;border:none;cursor:pointer;font-weight:500;justify-content:space-between}.accordion__label .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.accordion__label .icon--rotate-180{transform:rotate(180deg)}.accordion__label .icon--rotate-270{transform:rotate(270deg)}.accordion__label .icon--rotate-0{transform:rotate(0deg)}.accordion__label .icon--rotate-90{transform:rotate(90deg)}.accordion__label .icon--left{margin-right:var(--space-xxs)}.accordion__label .icon--right{margin-left:var(--space-xxs)}.accordion__label .icon--xlarge{height:68px;width:68px}.accordion__label .icon--large{height:36px;width:36px}.accordion__label .icon--medium{height:24px;width:24px}.accordion__label .icon--small{height:18px;width:18px}.accordion__label .icon--icon-left{margin-right:var(--space-xs)}.accordion__label .icon--icon-right{margin-left:var(--space-xs)}.accordion__label:visited{color:inherit}.accordion__label:hover{background-color:var(--ui-gray-xxlight)}.accordion__label:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.accordion__label .icon--minus{display:none}.accordion__label:focus{position:relative}.accordion__label:hover{background-color:var(--ui-gray-light)}.accordion__label--faq{font-size:var(--font-size-1);padding:var(--space-s)}.accordion__input{opacity:0;position:absolute;z-index:-1}.accordion__input:focus+.accordion__label{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.accordion__input:checked+.accordion__label .icon--minus{display:inline}.accordion__input:checked+.accordion__label .icon--plus{display:none}.accordion__input:checked ~ .accordion__content{display:inline-block}.accordion__input:checked ~ .accordion__content--fixed-height{margin-top:var(--space-xxs);overflow-y:auto}li:not(:first-of-type) .accordion{margin-top:-1px}.breadcrumbs{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%);background-color:var(--ui-black);padding-bottom:var(--space-xs);padding-top:var(--space-xs)}.breadcrumbs__item{margin-right:var(--space-xxs);align-items:center;display:inline;font-size:var(--font-size--1);line-height:1.5;position:relative;word-break:break-word}.breadcrumbs__item:not(:last-child)::after{content:\\\"/\\\";padding-left:var(--space-xxs)}@media (max-width: 599px){.breadcrumbs__item:not(:last-child){display:none}}@media (max-width: 599px){.breadcrumbs__item:last-child{padding-left:var(--space-m)}}.breadcrumbs__icon{display:inline-block;fill:currentColor;height:24px;width:24px;left:0;position:absolute;top:50%;transform:rotate(90deg) translateX(-50%)}.breadcrumbs__icon--rotate-180{transform:rotate(180deg)}.breadcrumbs__icon--rotate-270{transform:rotate(270deg)}.breadcrumbs__icon--rotate-0{transform:rotate(0deg)}.breadcrumbs__icon--rotate-90{transform:rotate(90deg)}.breadcrumbs__icon--left{margin-right:var(--space-xxs)}.breadcrumbs__icon--right{margin-left:var(--space-xxs)}.breadcrumbs__icon--xlarge{height:68px;width:68px}.breadcrumbs__icon--large{height:36px;width:36px}.breadcrumbs__icon--medium{height:24px;width:24px}.breadcrumbs__icon--small{height:18px;width:18px}@media (min-width: 600px){.breadcrumbs__icon{display:none}}.breadcrumbs__link,.breadcrumbs__link:link,.breadcrumbs__link:visited,.breadcrumbs__link:focus{color:var(--ui-white);text-decoration:none}.breadcrumbs__item a:hover{color:var(--ui-gray-light);text-decoration:underline}.breadcrumbs__list{list-style:none;margin:0;padding:0;margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;color:var(--ui-white)}.nypl--books-and-more .breadcrumbs{background-color:var(--section-books-and-more-secondary)}.nypl--locations .breadcrumbs{background-color:var(--section-locations-secondary)}.nypl--research .breadcrumbs{background-color:var(--section-research-secondary)}.nypl--whats-on .breadcrumbs{background-color:var(--section-whats-on-secondary)}.storybook-breadcrumbsExample .breadcrumbs{flex:1 1 50%;margin-left:unset;margin-right:var(--space-l);max-height:42px}.card{margin-bottom:var(--space-s);align-items:flex-start;border:1px solid var(--ui-gray-light);border-radius:5px;display:flex;flex-flow:column wrap;padding:var(--space) var(--space-l)}.card__heading,.card__footer{flex:100%}.card__columns{display:flex;flex-flow:column wrap;justify-content:space-between;width:100%}@media (min-width: 600px){.card__columns{flex-flow:row wrap}}.card__columns+.card__footer{margin-top:var(--space-xs)}.card__image{margin-bottom:var(--space-s);align-items:center;background-color:var(--ui-gray-xlight);display:flex;flex:0 0 150px;height:150px;justify-content:center}.card__image .image{max-height:100%;max-width:100%}@media (min-width: 600px){.card__image{margin-bottom:0;margin-right:var(--space-s);align-self:center;width:150px}}.card__content{margin-bottom:var(--space-s);flex:1 1}@media (min-width: 600px){.card__content{margin-right:var(--space-s);margin-bottom:0}}.card__ctas{flex:0 1 20%}@media (min-width: 600px){.card__ctas{margin-right:var(--space-s)}}.card__content+.card__ctas{margin-right:var(--space-s)}.sb-show-main .var-docs{padding:0 0 var(--space) 0}.sb-show-main .example-card .card__content>*{margin-bottom:var(--space-xxs)}.sb-show-main .example-card .book__callout{color:inherit;font-size:var(--font-size-1);font-weight:400;line-height:1.15;margin:0 0 0.5em;width:auto;font-style:italic;font-weight:300}.sb-show-main .example-card .book__callout__link{color:inherit}.sb-show-main .example-card .book__callout__link:hover{color:inherit}.sb-show-main .example-card .card__ctas{align-items:flex-end;display:flex;flex-flow:row wrap;justify-content:center;text-align:center}.sb-show-main .example-card .card__ctas .button{width:100%}.sb-show-main .example-card .card__ctas>*{margin-bottom:var(--space-xxs)}.sb-show-main .example-card .book__filetype{margin-bottom:var(--space-s)}.sb-show-main .example-card .book__description{font-style:italic}.checkbox{align-items:baseline;display:flex}.checkbox__input{margin-right:var(--space-xs)}.select{margin-bottom:var(--space-xs);-moz-appearance:none;-webkit-appearance:none;appearance:none;background-color:var(--ui-white);background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' viewBox='0 0 24 24'%3E%3Cpath d='M10.526 12.871L.263 1.676 1.737.324 12 11.52 22.263.324l1.474 1.352L13.474 12.87a2 2 0 01-2.948 0z'/%3E%3C/svg%3E\\\");background-position:right 0.7em top 70%;background-repeat:no-repeat;background-size:var(--space) auto;border:1px solid var(--ui-gray-medium);border-radius:2px;display:block;font-size:1rem;padding:var(--space-xs) var(--space-xl) var(--space-xs) var(--space-s);width:100%}.select::-ms-expand{display:none}.select:hover{border-color:var(--ui-gray-medium)}.select:active,.select:focus{border:1px solid var(--ui-focus);box-shadow:0;outline:1px solid var(--ui-focus);z-index:9999}.select:disabled{background-color:var(--ui-gray-xxlight);color:var(--ui-gray-xdark)}.select--error{border:1px solid var(--ui-error)}*[dir=\\\"rtl\\\"] .nypl-ds .select,:root:lang(ar) .nypl-ds .select,:root:lang(iw) .nypl-ds .select{background-position:left 0.7em top 70%;padding:var(--space-xs) var(--space-l) var(--space-xs) var(--space-s)}.select-css:disabled,.select-css[aria-disabled=\\\"true\\\"]{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M10.526 12.871L.263 1.676 1.737.324 12 11.52 22.263.324l1.474 1.352L13.474 12.87a2 2 0 01-2.948 0z'/%3E%3C/svg%3E\\\");color:var(--ui-gray-xdark)}.select-css:disabled:hover,.select-css[aria-disabled=\\\"true\\\"]{border-color:#aaa}.label{margin-bottom:var(--space-xs);align-items:baseline;display:flex;font-weight:500;justify-content:space-between}.label__required-helper{font-size:var(--font-size--1);font-weight:300}.fieldset{border:none;margin:0;padding:0}.legend{border:0;font-weight:500}.helper-text{margin-bottom:var(--space-xs);font-size:var(--font-size--1)}.helper-text--error{color:var(--ui-error)}.hero{background-color:var(--ui-gray-warm-xlight)}.hero--50-50 .hero__content{margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;align-items:center;display:flex;flex-flow:column nowrap;padding:0 var(--space) var(--space) var(--space)}@media (min-width: 960px){.hero--50-50 .hero__content{flex-flow:row nowrap;padding:unset}}.hero--50-50 .hero__image{margin-bottom:var(--space-s)}@media (min-width: 960px){.hero--50-50 .hero__image{margin-bottom:unset;margin-right:var(--space-s);max-width:50%}}.hero--primary{align-items:center;display:flex;flex-flow:column nowrap;justify-content:center;min-height:350px}@media (min-width: 600px){.hero--primary{flex-flow:row nowrap}}.hero--primary .hero__content{background-color:var(--ui-black);color:var(--ui-white);flex:0 0 100%;padding:var(--space-xxl) var(--space-l)}.hero--primary .hero__content a{color:inherit;display:inline-block}@media (min-width: 600px){.hero--primary .hero__content{flex:0 0 60%;max-width:960px}}.hero--primary .hero__content+.placeholder{flex:0 1 200px;margin-left:var(--space-xl)}.hero--primary .hero__heading,.hero--primary .hero__body-text{margin-bottom:0}.hero--secondary{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%);overflow-x:hidden}.hero--secondary .hero__content{margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;display:flex;flex-flow:column nowrap}@media (min-width: 600px){.hero--secondary .hero__content{flex-flow:row wrap}}.hero--secondary .hero__content .hero__heading{margin-bottom:0;background-color:var(--ui-black);color:var(--ui-white);flex:1 1 100%;margin-top:0;padding-bottom:var(--space-xxs);position:relative;z-index:0}.hero--secondary .hero__content .hero__heading::before{background-color:var(--ui-black);content:\\\"\\\";height:100%;left:-2000px;position:absolute;width:4000px;z-index:-1}@media (min-width: 600px){.hero--secondary .hero__content .hero__heading{order:1}}.nypl--books-and-more .hero--secondary .hero__content .hero__heading{background-color:var(--section-books-and-more-primary)}.nypl--books-and-more .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-books-and-more-primary)}.nypl--locations .hero--secondary .hero__content .hero__heading{background-color:var(--section-locations-primary)}.nypl--locations .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-locations-primary)}.nypl--research .hero--secondary .hero__content .hero__heading{background-color:var(--section-research-primary)}.nypl--research .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-research-primary)}.nypl--whats-on .hero--secondary .hero__content .hero__heading{background-color:var(--section-whats-on-primary)}.nypl--whats-on .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-whats-on-primary)}.hero--secondary .hero__content .hero__body-text{margin-top:var(--space-xs)}@media (min-width: 600px){.hero--secondary .hero__content .hero__body-text{margin-right:var(--space-xs);flex:1 1 50%;order:2}}.hero--secondary .hero__content .hero__image{flex:1 1 100%;height:150px;min-width:0;object-fit:cover;width:100%}@media (min-width: 600px){.hero--secondary .hero__content .hero__image{flex:0 0 250px;order:3}}.image{display:block;height:auto;max-width:100%}.image--circle{border-radius:50%}.nypl-ds figure{margin:unset}.figure__image{margin-bottom:var(--space-xxs)}.figure__image--circle{border-radius:50%}.figure__figcaption{font-style:italic}.figcaption__credit,.figcaption__caption{margin-bottom:var(--space-xxs);font-size:var(--font-size--1)}.no-scroll{overflow:hidden;position:fixed;top:-100vh}.modal{padding:var(--space-s);background-color:var(--ui-gray-warm-xlight);height:100vh;left:0;overflow-y:auto;position:fixed;top:0;width:100vw;z-index:999}.pagination{margin-bottom:var(--space-l);align-items:stretch;display:flex;width:100%}.pagination>*:not(:last-child){margin-right:var(--space-xs)}.pagination__list{list-style:none;margin:0;padding:0;display:flex}.pagination__item{margin-right:var(--space-xs);list-style-type:none}.pagination__link{line-height:1.15;text-decoration:none}.pagination__link.selected{color:var(--ui-black);pointer-events:none}.pagination__link.disabled{color:var(--ui-gray-dark);pointer-events:none}.search-bar{display:flex;flex-flow:column nowrap}@media (min-width: 600px){.search-bar{flex-flow:row nowrap}}.search-bar .select{flex:1 1 25%}.search-bar .button{margin-bottom:var(--space-xs)}.skeleton-loader:empty{animation:shine 1s infinite;background-image:linear-gradient(100deg, rgba(255,255,255,0), rgba(255,255,255,0.5) 50%, rgba(255,255,255,0) 80%),linear-gradient(var(--ui-gray-warm-light) 33px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0);background-position:0 0,0px 0,0px 40px,0px 67px,0px 94px,0px 121px,0px 148px,0px 175px;background-repeat:repeat-y;background-size:50px 230px,300px 230px,250px 230px,250px 230px,250px 230px,200px 230px,200px 230px,200px 230px;height:485px;margin:auto;width:100%}@keyframes shine{to{background-position:100% 0,0px 0,0px 40px,0px 67px,0px 94px,0px 121px,0px 148px,0px 175px}}.status-badge{border-radius:4px;color:var(--ui-black);display:block;font-size:var(--font-size--1);font-style:italic;padding:var(--space-xxs);text-align:center}.status-badge--low{background-color:var(--ui-gray-light)}.status-badge--medium{background-color:#f9e08e}.status-badge--high{background-color:#fbe7e1}.main{margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;display:block}.main--with-sidebar{display:flex;flex-flow:column nowrap}@media (min-width: 600px){.main--with-sidebar{flex-flow:row wrap}}.content-header{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%);width:100vw}.content-top{flex:1 0 100%}.content-primary{flex:1 1;width:100%}@media (min-width: 600px){.content-primary--with-sidebar-right,.content-primary--with-sidebar-left{min-width:0}}.content-primary--with-sidebar-left{display:flex;flex-flow:column nowrap;order:1}@media (min-width: 600px){.content-primary--with-sidebar-left{margin-right:0}}.content-secondary{flex:0 0 25%}@media (min-width: 600px){.content-secondary{order:1}.content-secondary--with-sidebar-left{margin-right:var(--space-l);flex-basis:calc(25% - calc(4 * var(--space-s)))}.content-secondary--with-sidebar-right{flex-basis:calc(25% - calc(4 * var(--space-s)));margin-left:var(--space-l)}}.list{margin:unset}.list--no-list-styling{list-style:none;margin:0;padding:0}ul.list{list-style:none}ul.list li:before{color:var(--ui-gray-medium);content:\\\"\\\\2022\\\";display:inline-block;font-weight:bold;margin-left:-1em;width:1em}ul.list--no-list-styling li:before{content:unset}\\n\",\"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\\\"button\\\"]:-moz-focusring,[type=\\\"reset\\\"]:-moz-focusring,[type=\\\"submit\\\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=\\\"checkbox\\\"],[type=\\\"radio\\\"]{box-sizing:border-box;padding:0}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{-webkit-appearance:textfield;outline-offset:-2px}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}/*! system-font.css v2.0.2 | CC0-1.0 License | github.com/jonathantneal/system-font-css */@font-face{font-family:system-ui;font-style:normal;font-weight:300;src:local(\\\".SFNSText-Light\\\"),local(\\\".HelveticaNeueDeskInterface-Light\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Light\\\"),local(\\\"Ubuntu Light\\\"),local(\\\"Roboto-Light\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:300;src:local(\\\".SFNSText-LightItalic\\\"),local(\\\".HelveticaNeueDeskInterface-Italic\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Light Italic\\\"),local(\\\"Ubuntu Light Italic\\\"),local(\\\"Roboto-LightItalic\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:normal;font-weight:400;src:local(\\\".SFNSText-Regular\\\"),local(\\\".HelveticaNeueDeskInterface-Regular\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI\\\"),local(\\\"Ubuntu\\\"),local(\\\"Roboto-Regular\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:400;src:local(\\\".SFNSText-Italic\\\"),local(\\\".HelveticaNeueDeskInterface-Italic\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Italic\\\"),local(\\\"Ubuntu Italic\\\"),local(\\\"Roboto-Italic\\\"),local(\\\"DroidSans\\\"),local(\\\"Tahoma\\\")}@font-face{font-family:system-ui;font-style:normal;font-weight:500;src:local(\\\".SFNSText-Medium\\\"),local(\\\".HelveticaNeueDeskInterface-MediumP4\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Semibold\\\"),local(\\\"Ubuntu Medium\\\"),local(\\\"Roboto-Medium\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:500;src:local(\\\".SFNSText-MediumItalic\\\"),local(\\\".HelveticaNeueDeskInterface-MediumItalicP4\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Semibold Italic\\\"),local(\\\"Ubuntu Medium Italic\\\"),local(\\\"Roboto-MediumItalic\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}@font-face{font-family:system-ui;font-style:normal;font-weight:700;src:local(\\\".SFNSText-Bold\\\"),local(\\\".HelveticaNeueDeskInterface-Bold\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Bold\\\"),local(\\\"Ubuntu Bold\\\"),local(\\\"Roboto-Bold\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}@font-face{font-family:system-ui;font-style:italic;font-weight:700;src:local(\\\".SFNSText-BoldItalic\\\"),local(\\\".HelveticaNeueDeskInterface-BoldItalic\\\"),local(\\\".LucidaGrandeUI\\\"),local(\\\"Segoe UI Bold Italic\\\"),local(\\\"Ubuntu Bold Italic\\\"),local(\\\"Roboto-BoldItalic\\\"),local(\\\"DroidSans-Bold\\\"),local(\\\"Tahoma Bold\\\")}:root{--section-whats-on-primary: #8a1a9c;--section-whats-on-secondary: #7c1097;--section-books-and-more-primary: #d0343a;--section-books-and-more-secondary: #bb1d12;--section-research-primary: #377f8b;--section-research-secondary: #02626a;--section-locations-primary: #d0343a;--section-locations-secondary: #bb1d12;--section-research-library-lpa: #008375;--section-research-library-schomburg: #c54b38;--section-research-library-schwartzman: #0071ce}:root{--ui-black: black;--ui-white: white;--ui-gray-xdark: #424242;--ui-gray-dark: #616161;--ui-gray-medium: #bdbdbd;--ui-gray-light: #e0e0e0;--ui-gray-warm-light: #efedeb;--ui-gray-xlight: #f5f5f5;--ui-gray-warm-xlight: #f8f8f7;--ui-gray-xxlight: #fafafa;--ui-success: #077719;--ui-error: #97272c;--ui-focus: #4181f1;--ui-link-primary: #0576d3;--ui-link-secondary: #004b98}:root{--font-size--3: 0.625rem;--font-size--2: 0.75rem;--font-size--1: 0.875rem;--font-size-0: 1rem;--font-size-1: 1.125rem;--font-size-2: 1.375rem;--font-size-3: 1.75rem;--font-size-4: 2.25rem}:root{--typeface-body: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;--typeface-heading: -apple-system, BlinkMacSystemFont, system-ui, sans-serif}:root{--space: 1rem;--space-xxs: calc(var(--space) / 4);--space-xs: calc(var(--space) / 2);--space-s: calc(var(--space) * 1);--space-m: calc(var(--space) * 1.5);--space-l: calc(var(--space) * 2);--space-xl: calc(var(--space) * 3);--space-xxl: calc(var(--space) * 4);--space-xxxl: calc(var(--space) * 6)}:root{--breakpoint-small: 320px;--breakpoint-medium: 600px;--breakpoint-large: 960px;--breakpoint-xl: 1280px}.container{padding:var(--space-s)}.nypl-ds{box-sizing:border-box;color:var(--ui-black);font-family:var(--typeface-body);font-size:16px;font-weight:300;line-height:1.5;overflow-x:hidden}.nypl-ds *,.nypl-ds *::after,.nypl-ds *::before{box-sizing:inherit}.nypl-ds input:not([disabled]):focus,.nypl-ds select:not([disabled]):focus,.nypl-ds textarea:not([disabled]):focus,.nypl-ds button:not([disabled]):focus{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.nypl-ds iframe:focus,.nypl-ds [href]:focus,.nypl-ds [tabindex]:focus,.nypl-ds [contentEditable=\\\"true\\\"]:focus{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.focus{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.card-grid{margin-bottom:var(--space-l)}@media (min-width: 960px){.card-grid{margin-bottom:var(--space-xl)}}.card-grid--full{margin-bottom:var(--space-xxl)}@media (min-width: 960px){.card-grid--full{margin-bottom:var(--space-xxxl)}}.card-grid__cards{list-style:none;margin:0;padding:0;display:flex;flex-flow:column nowrap}.card-grid__cards>*:not(:last-child){margin-bottom:var(--space-s)}@media (min-width: 960px){.card-grid__cards>*:not(:last-child){margin-bottom:0}.card-grid__cards>*:not(:last-child):not(:nth-child(3n)){margin-right:var(--space-l)}.card-grid__cards>*:not(:last-child):not(:nth-last-child(2)):not(:nth-last-child(3)){margin-bottom:var(--space-l)}}@media (min-width: 960px){.card-grid__cards--full>*:nth-child(3n){margin-bottom:var(--space-xxl)}.card-grid__cards--full>*:not(:last-child):not(:nth-last-child(2)):not(:nth-last-child(3)){margin-bottom:var(--space-xxl)}.card-grid__cards--full>*:nth-child(3n+2):not(:last-child):not(:nth-child(3n)):not(:nth-last-child(2)){margin-bottom:var(--space-xxl)}}@media (min-width: 960px){.card-grid__cards{flex-flow:row wrap}.card-grid__cards>*{flex:0 0 30%}.card-grid__cards>.featured-card{flex:1 0 31%}}.card-grid__cards--bg-color{margin:0 auto;max-width:1280px;padding:var(--space-s) var(--space-s);width:100%}@media (min-width: 960px){.card-grid__cards--bg-color{margin:0 auto;max-width:1280px;padding:var(--space-xxl) var(--space-xxl);width:100%}}.card-grid__cards--bg-color>*:last-child{margin-bottom:0}.placeholder{--color-place-holder: var(--ui-gray-light);margin-bottom:var(--space-l);padding:var(--space-s);align-items:center;border:4px dashed var(--color-place-holder);color:var(--color-place-holder);display:flex;font-size:3rem;justify-content:center;line-height:1.4;padding:4rem 1rem;width:100%}@media (min-width: 960px){.placeholder{margin-bottom:var(--space-xl)}}.placeholder--full{margin-bottom:var(--space-xxl)}@media (min-width: 960px){.placeholder--full{margin-bottom:var(--space-xxxl)}}.nypl-ds p,.nypl-ds .paragraph{margin:0 0 var(--space)}.blockquote,.text-long blockquote{border-left:solid 3px var(--ui-gray-light);font-style:italic;margin-left:1em;padding-left:1em}.hr,.text-long hr{border-style:solid;border-width:1px 0 0;color:currentColor}.long-description{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute !important;width:1px;word-wrap:normal}.icon{display:inline-block;fill:currentColor;height:24px;width:24px}.icon--rotate-180{transform:rotate(180deg)}.icon--rotate-270{transform:rotate(270deg)}.icon--rotate-0{transform:rotate(0deg)}.icon--rotate-90{transform:rotate(90deg)}.icon--left{margin-right:var(--space-xxs)}.icon--right{margin-left:var(--space-xxs)}.icon--xlarge{height:68px;width:68px}.icon--large{height:36px;width:36px}.icon--medium{height:24px;width:24px}.icon--small{height:18px;width:18px}.button{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-link-primary);border:none;color:var(--ui-white)}.button .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button .icon--rotate-180{transform:rotate(180deg)}.button .icon--rotate-270{transform:rotate(270deg)}.button .icon--rotate-0{transform:rotate(0deg)}.button .icon--rotate-90{transform:rotate(90deg)}.button .icon--left{margin-right:var(--space-xxs)}.button .icon--right{margin-left:var(--space-xxs)}.button .icon--xlarge{height:68px;width:68px}.button .icon--large{height:36px;width:36px}.button .icon--medium{height:24px;width:24px}.button .icon--small{height:18px;width:18px}.button .icon--icon-left{margin-right:var(--space-xs)}.button .icon--icon-right{margin-left:var(--space-xs)}.button:visited{color:var(--ui-white)}.button:hover{background-color:var(--ui-link-secondary)}.button:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.button--link{background-color:transparent;color:var(--ui-link-primary);text-decoration:underline}.button--link--no-underline{text-decoration:none}.button--link:hover{background-color:transparent;color:var(--ui-link-secondary)}.button--link:disabled{background-color:transparent;color:var(--ui-gray-dark);pointer-events:none}.button--outline{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-white);border:1px solid var(--ui-gray-light);color:inherit}.button--outline .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button--outline .icon--rotate-180{transform:rotate(180deg)}.button--outline .icon--rotate-270{transform:rotate(270deg)}.button--outline .icon--rotate-0{transform:rotate(0deg)}.button--outline .icon--rotate-90{transform:rotate(90deg)}.button--outline .icon--left{margin-right:var(--space-xxs)}.button--outline .icon--right{margin-left:var(--space-xxs)}.button--outline .icon--xlarge{height:68px;width:68px}.button--outline .icon--large{height:36px;width:36px}.button--outline .icon--medium{height:24px;width:24px}.button--outline .icon--small{height:18px;width:18px}.button--outline .icon--icon-left{margin-right:var(--space-xs)}.button--outline .icon--icon-right{margin-left:var(--space-xs)}.button--outline:visited{color:inherit}.button--outline:hover{background-color:var(--ui-gray-xxlight)}.button--outline:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.button--pill{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-white);border:1px solid var(--ui-gray-light);color:inherit;border-radius:20px}.button--pill .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button--pill .icon--rotate-180{transform:rotate(180deg)}.button--pill .icon--rotate-270{transform:rotate(270deg)}.button--pill .icon--rotate-0{transform:rotate(0deg)}.button--pill .icon--rotate-90{transform:rotate(90deg)}.button--pill .icon--left{margin-right:var(--space-xxs)}.button--pill .icon--right{margin-left:var(--space-xxs)}.button--pill .icon--xlarge{height:68px;width:68px}.button--pill .icon--large{height:36px;width:36px}.button--pill .icon--medium{height:24px;width:24px}.button--pill .icon--small{height:18px;width:18px}.button--pill .icon--icon-left{margin-right:var(--space-xs)}.button--pill .icon--icon-right{margin-left:var(--space-xs)}.button--pill .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.button--pill .icon--rotate-180{transform:rotate(180deg)}.button--pill .icon--rotate-270{transform:rotate(270deg)}.button--pill .icon--rotate-0{transform:rotate(0deg)}.button--pill .icon--rotate-90{transform:rotate(90deg)}.button--pill .icon--left{margin-right:var(--space-xxs)}.button--pill .icon--right{margin-left:var(--space-xxs)}.button--pill .icon--xlarge{height:68px;width:68px}.button--pill .icon--large{height:36px;width:36px}.button--pill .icon--medium{height:24px;width:24px}.button--pill .icon--small{height:18px;width:18px}.button--pill .icon--icon-left{margin-right:var(--space-xs)}.button--pill .icon--icon-right{margin-left:var(--space-xs)}.button--pill:visited{color:inherit}.button--pill:hover{background-color:var(--ui-gray-xxlight)}.button--pill:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.nypl-ds a,.nypl-ds .link{color:var(--ui-link-primary)}.nypl-ds a--no-underline,.nypl-ds .link--no-underline{text-decoration:none}.nypl-ds a:hover,.nypl-ds .link:hover{color:var(--ui-link-secondary)}.nypl-ds a.button,.nypl-ds .link.button{color:var(--ui-white)}.nypl-ds a[role=\\\"button\\\"],.nypl-ds .link[role=\\\"button\\\"]{cursor:pointer}.nypl-ds a--dark-background,.nypl-ds .link--dark-background{color:var(--ui-white)}.nypl-ds a--dark-background:hover,.nypl-ds .link--dark-background:hover{color:var(--ui-gray-light)}.more-link{align-items:center;color:var(--ui-link-primary);display:inline-flex;justify-content:space-between;text-decoration:underline}.more-link:hover{color:var(--ui-link-secondary);text-decoration:underline}.more-link__icon{display:inline-block;fill:currentColor;height:24px;width:24px;height:var(--space-s);text-decoration:none;width:var(--space-s)}.more-link__icon--rotate-180{transform:rotate(180deg)}.more-link__icon--rotate-270{transform:rotate(270deg)}.more-link__icon--rotate-0{transform:rotate(0deg)}.more-link__icon--rotate-90{transform:rotate(90deg)}.more-link__icon--left{margin-right:var(--space-xxs)}.more-link__icon--right{margin-left:var(--space-xxs)}.more-link__icon--xlarge{height:68px;width:68px}.more-link__icon--large{height:36px;width:36px}.more-link__icon--medium{height:24px;width:24px}.more-link__icon--small{height:18px;width:18px}.more-link__icon--left{margin-right:var(--space-xs)}.more-link__icon--right{margin-left:var(--space-xs)}.more-link__icon svg{height:100%;width:100%}.nypl-ds h1{color:inherit;font-size:var(--font-size-4);font-weight:300;letter-spacing:0;line-height:1.1;margin:0 0 0.5em;width:auto}.nypl-ds h1__link{color:inherit}.nypl-ds h1__link:hover{color:inherit}.nypl-ds h2{color:inherit;font-size:var(--font-size-3);font-weight:500;line-height:1.25;margin:0 0 0.5em;width:auto}.nypl-ds h2__link{color:inherit}.nypl-ds h2__link:hover{color:inherit}.nypl-ds h3{color:inherit;font-size:var(--font-size-2);font-weight:500;line-height:1.25;margin:0 0 0.5em;width:auto}.nypl-ds h3__link{color:inherit}.nypl-ds h3__link:hover{color:inherit}.nypl-ds h4{color:inherit;font-size:var(--font-size-1);font-weight:500;line-height:1.25;margin:0 0 0.5em;width:auto}.nypl-ds h4__link{color:inherit}.nypl-ds h4__link:hover{color:inherit}.nypl-ds h5,.nypl-ds h6{color:inherit;font-size:var(--font-size-1);font-weight:400;line-height:1.15;margin:0 0 0.5em;width:auto}.nypl-ds h5__link,.nypl-ds h6__link{color:inherit}.nypl-ds h5__link:hover,.nypl-ds h6__link:hover{color:inherit}.heading__link{color:inherit;text-decoration:none}.heading__link:hover{text-decoration:underline}.heading-section__more-link{align-items:center;color:var(--ui-link-primary);display:inline-flex;justify-content:space-between;text-decoration:underline}.heading-section__more-link:hover{color:var(--ui-link-secondary);text-decoration:underline}.heading-section__more-link__icon{display:inline-block;fill:currentColor;height:24px;width:24px;height:var(--space-s);text-decoration:none;width:var(--space-s)}.heading-section__more-link__icon--rotate-180{transform:rotate(180deg)}.heading-section__more-link__icon--rotate-270{transform:rotate(270deg)}.heading-section__more-link__icon--rotate-0{transform:rotate(0deg)}.heading-section__more-link__icon--rotate-90{transform:rotate(90deg)}.heading-section__more-link__icon--left{margin-right:var(--space-xxs)}.heading-section__more-link__icon--right{margin-left:var(--space-xxs)}.heading-section__more-link__icon--xlarge{height:68px;width:68px}.heading-section__more-link__icon--large{height:36px;width:36px}.heading-section__more-link__icon--medium{height:24px;width:24px}.heading-section__more-link__icon--small{height:18px;width:18px}.heading-section__more-link__icon--left{margin-right:var(--space-xs)}.heading-section__more-link__icon--right{margin-left:var(--space-xs)}.heading-section__more-link__icon svg{height:100%;width:100%}.heading-section__heading{margin-right:var(--space-xs)}.heading-section__heading--has-link{display:inline}.page-title__heading--block-color{background-color:var(--section-research-primary);color:var(--ui-white)}.input,.react-autosuggest__input{padding:var(--space-xs);margin-bottom:var(--space-xs);border:1px solid var(--ui-gray-medium)}.input[type=\\\"text\\\"],.react-autosuggest__input[type=\\\"text\\\"],.input[type=\\\"number\\\"],.react-autosuggest__input[type=\\\"number\\\"],.input[type=\\\"password\\\"],.react-autosuggest__input[type=\\\"password\\\"]{width:100%}.input[type=\\\"radio\\\"],.react-autosuggest__input[type=\\\"radio\\\"]{width:unset}.input[type=\\\"radio\\\"]+.label,.react-autosuggest__input[type=\\\"radio\\\"]+.label{display:unset;margin-left:var(--space-s)}.input::-webkit-input-placeholder,.react-autosuggest__input::-webkit-input-placeholder{color:var(--ui-gray-dark)}.input:-moz-placeholder,.react-autosuggest__input:-moz-placeholder{color:var(--ui-gray-dark)}.input:-ms-input-placeholder,.react-autosuggest__input:-ms-input-placeholder{color:var(--ui-gray-dark)}.input:hover,.react-autosuggest__input:hover{border-color:var(--ui-gray-dark)}.input:disabled,.react-autosuggest__input:disabled{background-color:var(--ui-gray-xxlight);color:var(--ui-gray-xdark)}.input:active,.react-autosuggest__input:active,.input:focus,.react-autosuggest__input:focus,.input:active:hover,.react-autosuggest__input:active:hover,.input:focus:hover,.react-autosuggest__input:focus:hover{border:1px solid var(--ui-focus);box-shadow:0;outline:1px solid var(--ui-focus);z-index:9999}.input--error{border:1px solid var(--ui-error)}@media (min-width: 400px){.input-group{display:flex;justify-content:space-between}.input-group>*:not(:last-child){margin-right:var(--space-m)}}.react-autosuggest__container{display:inline;position:relative;width:100%}.react-autosuggest__input--focused{outline:none}.react-autosuggest__input--open{border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.react-autosuggest__suggestions-container{display:none;width:100%}.react-autosuggest__suggestions-container--open{background-color:var(--ui-white);display:block;font-weight:300;margin-top:-6px;outline:1px solid var(--ui-gray-light);position:absolute;width:100%;z-index:2}.react-autosuggest__suggestions-list{list-style-type:none;margin:0;padding:0}.react-autosuggest__suggestion{cursor:pointer;padding:var(--space-xs)}.react-autosuggest__suggestion--highlighted{background-color:var(--ui-gray-light)}.auto-suggest-bottom{padding:var(--space-xs)}.accordion{border:1px solid var(--ui-gray-medium);color:inherit;width:100%}.accordion--fixed-height{display:flex;flex-direction:column;max-height:inherit}.accordion__content{display:none;padding:var(--space-xxs) var(--space-xxxl) var(--space-xs) var(--space-s);transition:all 0.35s}.accordion__label{padding:var(--space-xs);border-radius:2px;cursor:pointer;display:flex;justify-content:center;text-decoration:none;background-color:var(--ui-white);border:1px solid var(--ui-gray-light);color:inherit;align-items:center;border:none;cursor:pointer;font-weight:500;justify-content:space-between}.accordion__label .icon{display:inline-block;fill:currentColor;height:24px;width:24px;fill:currentColor}.accordion__label .icon--rotate-180{transform:rotate(180deg)}.accordion__label .icon--rotate-270{transform:rotate(270deg)}.accordion__label .icon--rotate-0{transform:rotate(0deg)}.accordion__label .icon--rotate-90{transform:rotate(90deg)}.accordion__label .icon--left{margin-right:var(--space-xxs)}.accordion__label .icon--right{margin-left:var(--space-xxs)}.accordion__label .icon--xlarge{height:68px;width:68px}.accordion__label .icon--large{height:36px;width:36px}.accordion__label .icon--medium{height:24px;width:24px}.accordion__label .icon--small{height:18px;width:18px}.accordion__label .icon--icon-left{margin-right:var(--space-xs)}.accordion__label .icon--icon-right{margin-left:var(--space-xs)}.accordion__label:visited{color:inherit}.accordion__label:hover{background-color:var(--ui-gray-xxlight)}.accordion__label:disabled{background-color:var(--ui-gray-light);color:var(--ui-gray-dark);pointer-events:none}.accordion__label .icon--minus{display:none}.accordion__label:focus{position:relative}.accordion__label:hover{background-color:var(--ui-gray-light)}.accordion__label--faq{font-size:var(--font-size-1);padding:var(--space-s)}.accordion__input{opacity:0;position:absolute;z-index:-1}.accordion__input:focus+.accordion__label{outline:2px solid var(--ui-focus);outline-offset:2px;z-index:9999}.accordion__input:checked+.accordion__label .icon--minus{display:inline}.accordion__input:checked+.accordion__label .icon--plus{display:none}.accordion__input:checked ~ .accordion__content{display:inline-block}.accordion__input:checked ~ .accordion__content--fixed-height{margin-top:var(--space-xxs);overflow-y:auto}li:not(:first-of-type) .accordion{margin-top:-1px}.breadcrumbs{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%);background-color:var(--ui-black);padding-bottom:var(--space-xs);padding-top:var(--space-xs)}.breadcrumbs__item{margin-right:var(--space-xxs);align-items:center;display:inline;font-size:var(--font-size--1);line-height:1.5;position:relative;word-break:break-word}.breadcrumbs__item:not(:last-child)::after{content:\\\"/\\\";padding-left:var(--space-xxs)}@media (max-width: 599px){.breadcrumbs__item:not(:last-child){display:none}}@media (max-width: 599px){.breadcrumbs__item:last-child{padding-left:var(--space-m)}}.breadcrumbs__icon{display:inline-block;fill:currentColor;height:24px;width:24px;left:0;position:absolute;top:50%;transform:rotate(90deg) translateX(-50%)}.breadcrumbs__icon--rotate-180{transform:rotate(180deg)}.breadcrumbs__icon--rotate-270{transform:rotate(270deg)}.breadcrumbs__icon--rotate-0{transform:rotate(0deg)}.breadcrumbs__icon--rotate-90{transform:rotate(90deg)}.breadcrumbs__icon--left{margin-right:var(--space-xxs)}.breadcrumbs__icon--right{margin-left:var(--space-xxs)}.breadcrumbs__icon--xlarge{height:68px;width:68px}.breadcrumbs__icon--large{height:36px;width:36px}.breadcrumbs__icon--medium{height:24px;width:24px}.breadcrumbs__icon--small{height:18px;width:18px}@media (min-width: 600px){.breadcrumbs__icon{display:none}}.breadcrumbs__link,.breadcrumbs__link:link,.breadcrumbs__link:visited,.breadcrumbs__link:focus{color:var(--ui-white);text-decoration:none}.breadcrumbs__item a:hover{color:var(--ui-gray-light);text-decoration:underline}.breadcrumbs__list{list-style:none;margin:0;padding:0;margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;color:var(--ui-white)}.nypl--books-and-more .breadcrumbs{background-color:var(--section-books-and-more-secondary)}.nypl--locations .breadcrumbs{background-color:var(--section-locations-secondary)}.nypl--research .breadcrumbs{background-color:var(--section-research-secondary)}.nypl--whats-on .breadcrumbs{background-color:var(--section-whats-on-secondary)}.storybook-breadcrumbsExample .breadcrumbs{flex:1 1 50%;margin-left:unset;margin-right:var(--space-l);max-height:42px}.card{margin-bottom:var(--space-s);align-items:flex-start;border:1px solid var(--ui-gray-light);border-radius:5px;display:flex;flex-flow:column wrap;padding:var(--space) var(--space-l)}.card__heading,.card__footer{flex:100%}.card__columns{display:flex;flex-flow:column wrap;justify-content:space-between;width:100%}@media (min-width: 600px){.card__columns{flex-flow:row wrap}}.card__columns+.card__footer{margin-top:var(--space-xs)}.card__image{margin-bottom:var(--space-s);align-items:center;background-color:var(--ui-gray-xlight);display:flex;flex:0 0 150px;height:150px;justify-content:center}.card__image .image{max-height:100%;max-width:100%}@media (min-width: 600px){.card__image{margin-bottom:0;margin-right:var(--space-s);align-self:center;width:150px}}.card__content{margin-bottom:var(--space-s);flex:1 1}@media (min-width: 600px){.card__content{margin-right:var(--space-s);margin-bottom:0}}.card__ctas{flex:0 1 20%}@media (min-width: 600px){.card__ctas{margin-right:var(--space-s)}}.card__content+.card__ctas{margin-right:var(--space-s)}.sb-show-main .var-docs{padding:0 0 var(--space) 0}.sb-show-main .example-card .card__content>*{margin-bottom:var(--space-xxs)}.sb-show-main .example-card .book__callout{color:inherit;font-size:var(--font-size-1);font-weight:400;line-height:1.15;margin:0 0 0.5em;width:auto;font-style:italic;font-weight:300}.sb-show-main .example-card .book__callout__link{color:inherit}.sb-show-main .example-card .book__callout__link:hover{color:inherit}.sb-show-main .example-card .card__ctas{align-items:flex-end;display:flex;flex-flow:row wrap;justify-content:center;text-align:center}.sb-show-main .example-card .card__ctas .button{width:100%}.sb-show-main .example-card .card__ctas>*{margin-bottom:var(--space-xxs)}.sb-show-main .example-card .book__filetype{margin-bottom:var(--space-s)}.sb-show-main .example-card .book__description{font-style:italic}.checkbox{align-items:baseline;display:flex}.checkbox__input{margin-right:var(--space-xs)}.select{margin-bottom:var(--space-xs);-moz-appearance:none;-webkit-appearance:none;appearance:none;background-color:var(--ui-white);background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' viewBox='0 0 24 24'%3E%3Cpath d='M10.526 12.871L.263 1.676 1.737.324 12 11.52 22.263.324l1.474 1.352L13.474 12.87a2 2 0 01-2.948 0z'/%3E%3C/svg%3E\\\");background-position:right 0.7em top 70%;background-repeat:no-repeat;background-size:var(--space) auto;border:1px solid var(--ui-gray-medium);border-radius:2px;display:block;font-size:1rem;padding:var(--space-xs) var(--space-xl) var(--space-xs) var(--space-s);width:100%}.select::-ms-expand{display:none}.select:hover{border-color:var(--ui-gray-medium)}.select:active,.select:focus{border:1px solid var(--ui-focus);box-shadow:0;outline:1px solid var(--ui-focus);z-index:9999}.select:disabled{background-color:var(--ui-gray-xxlight);color:var(--ui-gray-xdark)}.select--error{border:1px solid var(--ui-error)}*[dir=\\\"rtl\\\"] .nypl-ds .select,:root:lang(ar) .nypl-ds .select,:root:lang(iw) .nypl-ds .select{background-position:left 0.7em top 70%;padding:var(--space-xs) var(--space-l) var(--space-xs) var(--space-s)}.select-css:disabled,.select-css[aria-disabled=\\\"true\\\"]{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M10.526 12.871L.263 1.676 1.737.324 12 11.52 22.263.324l1.474 1.352L13.474 12.87a2 2 0 01-2.948 0z'/%3E%3C/svg%3E\\\");color:var(--ui-gray-xdark)}.select-css:disabled:hover,.select-css[aria-disabled=\\\"true\\\"]{border-color:#aaa}.label{margin-bottom:var(--space-xs);align-items:baseline;display:flex;font-weight:500;justify-content:space-between}.label__required-helper{font-size:var(--font-size--1);font-weight:300}.fieldset{border:none;margin:0;padding:0}.legend{border:0;font-weight:500}.helper-text{margin-bottom:var(--space-xs);font-size:var(--font-size--1)}.helper-text--error{color:var(--ui-error)}.hero{background-color:var(--ui-gray-warm-xlight)}.hero--50-50 .hero__content{margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;align-items:center;display:flex;flex-flow:column nowrap;padding:0 var(--space) var(--space) var(--space)}@media (min-width: 960px){.hero--50-50 .hero__content{flex-flow:row nowrap;padding:unset}}.hero--50-50 .hero__image{margin-bottom:var(--space-s)}@media (min-width: 960px){.hero--50-50 .hero__image{margin-bottom:unset;margin-right:var(--space-s);max-width:50%}}.hero--primary{align-items:center;display:flex;flex-flow:column nowrap;justify-content:center;min-height:350px}@media (min-width: 600px){.hero--primary{flex-flow:row nowrap}}.hero--primary .hero__content{background-color:var(--ui-black);color:var(--ui-white);flex:0 0 100%;padding:var(--space-xxl) var(--space-l)}.hero--primary .hero__content a{color:inherit;display:inline-block}@media (min-width: 600px){.hero--primary .hero__content{flex:0 0 60%;max-width:960px}}.hero--primary .hero__content+.placeholder{flex:0 1 200px;margin-left:var(--space-xl)}.hero--primary .hero__heading,.hero--primary .hero__body-text{margin-bottom:0}.hero--secondary{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%);overflow-x:hidden}.hero--secondary .hero__content{margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;display:flex;flex-flow:column nowrap}@media (min-width: 600px){.hero--secondary .hero__content{flex-flow:row wrap}}.hero--secondary .hero__content .hero__heading{margin-bottom:0;background-color:var(--ui-black);color:var(--ui-white);flex:1 1 100%;margin-top:0;padding-bottom:var(--space-xxs);position:relative;z-index:0}.hero--secondary .hero__content .hero__heading::before{background-color:var(--ui-black);content:\\\"\\\";height:100%;left:-2000px;position:absolute;width:4000px;z-index:-1}@media (min-width: 600px){.hero--secondary .hero__content .hero__heading{order:1}}.nypl--books-and-more .hero--secondary .hero__content .hero__heading{background-color:var(--section-books-and-more-primary)}.nypl--books-and-more .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-books-and-more-primary)}.nypl--locations .hero--secondary .hero__content .hero__heading{background-color:var(--section-locations-primary)}.nypl--locations .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-locations-primary)}.nypl--research .hero--secondary .hero__content .hero__heading{background-color:var(--section-research-primary)}.nypl--research .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-research-primary)}.nypl--whats-on .hero--secondary .hero__content .hero__heading{background-color:var(--section-whats-on-primary)}.nypl--whats-on .hero--secondary .hero__content .hero__heading::before{background-color:var(--section-whats-on-primary)}.hero--secondary .hero__content .hero__body-text{margin-top:var(--space-xs)}@media (min-width: 600px){.hero--secondary .hero__content .hero__body-text{margin-right:var(--space-xs);flex:1 1 50%;order:2}}.hero--secondary .hero__content .hero__image{flex:1 1 100%;height:150px;min-width:0;object-fit:cover;width:100%}@media (min-width: 600px){.hero--secondary .hero__content .hero__image{flex:0 0 250px;order:3}}.image{display:block;height:auto;max-width:100%}.image--circle{border-radius:50%}.nypl-ds figure{margin:unset}.figure__image{margin-bottom:var(--space-xxs)}.figure__image--circle{border-radius:50%}.figure__figcaption{font-style:italic}.figcaption__credit,.figcaption__caption{margin-bottom:var(--space-xxs);font-size:var(--font-size--1)}.no-scroll{overflow:hidden;position:fixed;top:-100vh}.modal{padding:var(--space-s);background-color:var(--ui-gray-warm-xlight);height:100vh;left:0;overflow-y:auto;position:fixed;top:0;width:100vw;z-index:999}.pagination{margin-bottom:var(--space-l);align-items:stretch;display:flex;width:100%}.pagination>*:not(:last-child){margin-right:var(--space-xs)}.pagination__list{list-style:none;margin:0;padding:0;display:flex}.pagination__item{margin-right:var(--space-xs);list-style-type:none}.pagination__link{line-height:1.15;text-decoration:none}.pagination__link.selected{color:var(--ui-black);pointer-events:none}.pagination__link.disabled{color:var(--ui-gray-dark);pointer-events:none}.search-bar{display:flex;flex-flow:column nowrap}@media (min-width: 600px){.search-bar{flex-flow:row nowrap}}.search-bar .select{flex:1 1 25%}.search-bar .button{margin-bottom:var(--space-xs)}.skeleton-loader:empty{animation:shine 1s infinite;background-image:linear-gradient(100deg, rgba(255,255,255,0), rgba(255,255,255,0.5) 50%, rgba(255,255,255,0) 80%),linear-gradient(var(--ui-gray-warm-light) 33px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0),linear-gradient(var(--ui-gray-warm-light) 20px, transparent 0);background-position:0 0,0px 0,0px 40px,0px 67px,0px 94px,0px 121px,0px 148px,0px 175px;background-repeat:repeat-y;background-size:50px 230px,300px 230px,250px 230px,250px 230px,250px 230px,200px 230px,200px 230px,200px 230px;height:485px;margin:auto;width:100%}@keyframes shine{to{background-position:100% 0,0px 0,0px 40px,0px 67px,0px 94px,0px 121px,0px 148px,0px 175px}}.status-badge{border-radius:4px;color:var(--ui-black);display:block;font-size:var(--font-size--1);font-style:italic;padding:var(--space-xxs);text-align:center}.status-badge--low{background-color:var(--ui-gray-light)}.status-badge--medium{background-color:#f9e08e}.status-badge--high{background-color:#fbe7e1}.main{margin:0 auto;max-width:1280px;padding:0 var(--space);width:100%;display:block}.main--with-sidebar{display:flex;flex-flow:column nowrap}@media (min-width: 600px){.main--with-sidebar{flex-flow:row wrap}}.content-header{margin-left:calc(-50vw + 50%);margin-right:calc(-50vw + 50%);width:100vw}.content-top{flex:1 0 100%}.content-primary{flex:1 1;width:100%}@media (min-width: 600px){.content-primary--with-sidebar-right,.content-primary--with-sidebar-left{min-width:0}}.content-primary--with-sidebar-left{display:flex;flex-flow:column nowrap;order:1}@media (min-width: 600px){.content-primary--with-sidebar-left{margin-right:0}}.content-secondary{flex:0 0 25%}@media (min-width: 600px){.content-secondary{order:1}.content-secondary--with-sidebar-left{margin-right:var(--space-l);flex-basis:calc(25% - calc(4 * var(--space-s)))}.content-secondary--with-sidebar-right{flex-basis:calc(25% - calc(4 * var(--space-s)));margin-left:var(--space-l)}}.list{margin:unset}.list--no-list-styling{list-style:none;margin:0;padding:0}ul.list{list-style:none}ul.list li:before{color:var(--ui-gray-medium);content:\\\"\\\\2022\\\";display:inline-block;font-weight:bold;margin-left:-1em;width:1em}ul.list--no-list-styling li:before{content:unset}\\n\\n\\n/*# sourceMappingURL=styles.css.map*/\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@nypl/design-system-react-components/dist/styles.css\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[7].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[4]!./styles/main.scss":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[7].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[4]!./styles/main.scss ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ \"./node_modules/next/dist/compiled/css-loader/api.js\");\n/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* FONT FACE MIXIN\\n * ---------------\\n * Usage: @include font-face('Kievit-Regular', 'http://...');\\n * Desc: Do not include the font file extension, this mixin\\n * will generate the proper extensions.\\n*/\\n/* VISUALLY HIDE ELEMENTS\\n * ---------------------\\n * Usage: Visually hides an element from the screen\\n * but is still readable by screen readers for accessibility.\\n*/\\n/* DISPLAY VISUALLY HIDDEN ELEMENTS\\n * ---------------------\\n * Usage: Displays an element that is visually hidden.\\n*/\\n/* --- Media Query Generator ---\\n * Reusable mixin used to generate\\n * variations of media query properties.\\n */\\n/* min-screen($min, $orientation) \\n * $min - required\\n * $orientation - optional\\n * Ex #1: @include min-screen(768px, landscape) { ... }\\n * Ex #2: @include min-screen(768px) { ... }\\n */\\n.footer {\\n  background: #54514A;\\n  clear: both;\\n  color: #fff;\\n  font-family: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\\n  min-height: 360px;\\n  padding: 15px 20px 100px;\\n  position: relative;\\n}\\n.footer a {\\n  color: #fff;\\n  font-weight: 400;\\n  margin: 0 0.2rem;\\n  text-decoration: none;\\n}\\n.footer a:hover {\\n  text-decoration: underline;\\n}\\n.footer a:focus {\\n  background-color: #54514A;\\n  outline: solid 2px #fff;\\n}\\n.footer .svgIcon {\\n  fill: #fff;\\n}\\n.footer .logoText {\\n  position: absolute;\\n  top: 20px;\\n}\\n.footer .logoText .nyplTextLogo {\\n  height: 94px;\\n  width: 115px;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer .logoText {\\n    top: 20px;\\n    left: 6%;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer .logoText {\\n    top: 35px;\\n  }\\n}\\n.footer-content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-end;\\n  margin-top: 75px;\\n}\\n.footer-content .footerLinks {\\n  font-size: 16px;\\n  line-height: 35px;\\n  margin: 0;\\n  padding: 0;\\n  order: 2;\\n  list-style: none;\\n  text-align: right;\\n  width: 100%;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .footerLinks {\\n    width: auto;\\n  }\\n}\\n.footer-content .footerLinks .linkItemList {\\n  list-style-type: none;\\n}\\n.footer-content .footerLinks .linkItemList li {\\n  position: absolute;\\n  left: -10000px;\\n  top: auto;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n}\\n.footer-content .footerLinks .linkItemList li:first-child {\\n  position: relative;\\n  left: 0;\\n  height: auto;\\n  width: 100%;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .footerLinks .linkItemList li {\\n    position: relative;\\n    left: 0;\\n    height: auto;\\n    width: 100%;\\n  }\\n}\\n.footer-content .footerLinks ul {\\n  padding: 0;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .footerLinks li {\\n    float: left;\\n    width: 135px;\\n  }\\n  .footer-content .footerLinks li:first-child {\\n    width: 110px;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content .footerLinks li {\\n    width: 155px;\\n  }\\n  .footer-content .footerLinks li:first-child {\\n    margin-right: 110px;\\n  }\\n  .footer-content .footerLinks li:nth-child(2) {\\n    margin-right: 60px;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content .footerLinks li:first-child, .footer-content .footerLinks li:nth-child(2) {\\n    width: 155px;\\n    margin-right: 0;\\n  }\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .footerLinks {\\n    order: 1;\\n    margin: 0;\\n    font-size: 13px;\\n    line-height: 25px;\\n    text-align: left;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content .footerLinks {\\n    font-size: 14px;\\n    font-weight: 400;\\n    line-height: 30px;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content .footerLinks {\\n    margin-right: 70px;\\n    order: 2;\\n  }\\n}\\n.footer-content .socialMedia {\\n  order: 1;\\n  margin: 20px 0 15px 0;\\n  list-style-type: none;\\n  text-align: right;\\n  width: 200px;\\n}\\n.footer-content .socialMedia li {\\n  display: inline-block;\\n  width: 45px;\\n}\\n.footer-content .socialMedia li a {\\n  display: block;\\n  color: #FFF;\\n  font-size: 40px;\\n  line-height: 45px;\\n  text-decoration: none;\\n}\\n.footer-content .socialMedia li a svg {\\n  width: 36px;\\n  height: 36px;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .socialMedia li a {\\n    font-size: 50px;\\n  }\\n}\\n.footer-content .socialMedia li [class^=icon-],\\n.footer-content .socialMedia li [class*=\\\" icon-\\\"] {\\n  padding: 0;\\n}\\n.footer-content .socialMedia li [data-icon]:before,\\n.footer-content .socialMedia li [class^=icon-]:before,\\n.footer-content .socialMedia li [class*=\\\" icon-\\\"]:before {\\n  margin: 0 5px 0 0 !important;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .socialMedia {\\n    margin-top: 30px;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content .socialMedia {\\n    margin-top: 30px;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content .socialMedia {\\n    margin-top: 0;\\n    width: 280px;\\n  }\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content {\\n    margin: 0;\\n    right: 6%;\\n    position: absolute;\\n    align-items: flex-end;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content {\\n    flex-direction: row-reverse;\\n    align-items: flex-start;\\n  }\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content--secondary {\\n    position: absolute;\\n    left: 6%;\\n    top: 140px;\\n    width: 400px;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content--secondary {\\n    top: 170px;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content--secondary {\\n    top: 140px;\\n  }\\n}\\n.footer-content--secondary .facade img {\\n  width: 100%;\\n  height: auto;\\n}\\n.footer-content--secondary .copyright {\\n  margin: 35px 0 0 0;\\n  font-size: 12px;\\n  font-family: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\\n  text-align: right;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content--secondary .copyright {\\n    font-size: 11px;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content--secondary .copyright {\\n    font-size: 13px;\\n  }\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer {\\n    padding: 15px 0;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer {\\n    padding: 30px 0;\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://../node_modules/@nypl/dgx-react-footer/dist/styles/_mixins.scss\",\"webpack://../node_modules/@nypl/dgx-react-footer/dist/styles/_viewports.scss\",\"webpack://../node_modules/@nypl/dgx-react-footer/dist/styles/styles.scss\",\"webpack://main.scss\"],\"names\":[],\"mappings\":\"AAAA;;;;;CAAA;AAgBA;;;;CAAA;AAcA;;;CAAA;AC9BA;;;EAAA;AA0BA;;;;;EAAA;ACnBA;EACE,mBAJa;EAKb,WAAA;EACA,WAAA;EACA,qEAAA;EACA,iBAAA;EACA,wBAAA;EACA,kBAAA;ACmBF;ADjBE;EACE,WAZS;EAaT,gBAAA;EACA,gBAAA;EACA,qBAAA;ACmBJ;ADjBI;EACE,0BAAA;ACmBN;ADhBI;EACE,yBAvBS;EAwBT,uBAAA;ACkBN;ADdE;EACE,UAAA;ACgBJ;ADbE;EACE,kBAAA;EACA,SAAA;ACeJ;ADbI;EACE,YAAA;EACA,YAAA;ACeN;AFpCE;ECeA;IAUI,SAAA;IACA,QAAA;ECeJ;AACF;AF1CE;ECeA;IAeI,SAAA;ECgBJ;AACF;ADbE;EACE,aAAA;EACA,sBAAA;EACA,qBAAA;EACA,gBAAA;ACeJ;ADbI;EACE,eAAA;EACA,iBAAA;EACA,SAAA;EACA,UAAA;EACA,QAAA;EACA,gBAAA;EACA,iBAAA;EACA,WAAA;ACeN;AF/DE;ECwCE;IAWI,WAAA;ECgBN;AACF;ADdM;EACE,qBAAA;ACgBR;ADfQ;EFvDN,kBAAA;EACA,cAAA;EACA,SAAA;EACA,UAAA;EACA,WAAA;EACA,gBAAA;AGyEF;ADpBU;EF7CR,kBAAA;EACA,OAAA;EACA,YAAA;EACA,WAAA;AGoEF;AFrFE;ECwDM;IF1CN,kBAAA;IACA,OAAA;IACA,YAAA;IACA,WAAA;EG2EA;AACF;ADxBM;EACE,UAAA;AC0BR;AFhGE;ECyEI;IAEI,WAAA;IACA,YAAA;ECyBR;EDvBQ;IACE,YAAA;ECyBV;AACF;AFzGE;ECyEI;IAWI,YAAA;ECyBR;EDvBQ;IACE,mBAAA;ECyBV;EDtBQ;IACE,kBAAA;ECwBV;AACF;AFpHE;ECgGQ;IAEE,YAAA;IACA,eAAA;ECsBV;AACF;AF1HE;ECwCE;IAkEI,QAAA;IACA,SAAA;IACA,eAAA;IACA,iBAAA;IACA,gBAAA;ECoBN;AACF;AFnIE;ECwCE;IA0EI,eAAA;IACA,gBAAA;IACA,iBAAA;ECqBN;AACF;AF1IE;ECwCE;IAgFI,kBAAA;IACA,QAAA;ECsBN;AACF;ADnBI;EACE,QAAA;EACA,qBAAA;EACA,qBAAA;EAEA,iBAAA;EACA,YAAA;ACoBN;ADlBM;EACE,qBAAA;EACA,WAAA;ACoBR;ADlBQ;EACE,cAAA;EACA,WAAA;EACA,eAAA;EACA,iBAAA;EACA,qBAAA;ACoBV;ADlBU;EACE,WAAA;EACA,YAAA;ACoBZ;AFtKE;ECyIM;IAaI,eAAA;ECoBV;AACF;ADjBQ;;EAEE,UAAA;ACmBV;ADhBQ;;;EAGE,4BAAA;ACkBV;AFpLE;EC6HE;IA2CI,gBAAA;ECgBN;AACF;AFzLE;EC6HE;IA+CI,gBAAA;ECiBN;AACF;AF9LE;EC6HE;IAmDI,aAAA;IACA,YAAA;ECkBN;AACF;AFpME;ECkCA;IAqJI,SAAA;IACA,SAAA;IACA,kBAAA;IACA,qBAAA;ECiBJ;AACF;AF5ME;ECkCA;IA4JI,2BAAA;IACA,uBAAA;ECkBJ;AACF;AFlNE;ECmMA;IAGI,kBAAA;IACA,QAAA;IACA,UAAA;IACA,YAAA;ECgBJ;AACF;AF1NE;ECmMA;IAUI,UAAA;ECiBJ;AACF;AF/NE;ECmMA;IAcI,UAAA;ECkBJ;AACF;ADfM;EACE,WAAA;EACA,YAAA;ACiBR;ADbI;EACE,kBAAA;EACA,eAAA;EACA,qEAAA;EACA,iBAAA;ACeN;AF9OE;EC2NE;IAOI,eAAA;ECgBN;AACF;AFnPE;EC2NE;IAWI,eAAA;ECiBN;AACF;AFxPE;ECdF;IA2PI,eAAA;ECeF;AACF;AF7PE;ECdF;IA+PI,eAAA;ECgBF;AACF\",\"sourcesContent\":[\"/* FONT FACE MIXIN\\n * ---------------\\n * Usage: @include font-face('Kievit-Regular', 'http://...');\\n * Desc: Do not include the font file extension, this mixin\\n * will generate the proper extensions.\\n*/\\n@mixin font-face($font-family, $file-path) {\\n  @font-face {\\n    font-family: $font-family;\\n    src: url('#{$file-path}.eot');\\n    src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),\\n         url('#{$file-path}.woff') format('woff'),\\n         url('#{$file-path}.ttf') format('truetype');\\n  }\\n}\\n\\n/* VISUALLY HIDE ELEMENTS\\n * ---------------------\\n * Usage: Visually hides an element from the screen\\n * but is still readable by screen readers for accessibility.\\n*/\\n@mixin visuallyHidden {\\n  position: absolute;\\n  left: -10000px;\\n  top: auto;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n}\\n\\n/* DISPLAY VISUALLY HIDDEN ELEMENTS\\n * ---------------------\\n * Usage: Displays an element that is visually hidden.\\n*/\\n@mixin displayVisuallyHidden {\\n  position: relative;\\n  left: 0;\\n  height: auto;\\n  width: 100%;\\n}\\n\",\"/* --- Media Query Generator ---\\n * Reusable mixin used to generate\\n * variations of media query properties.\\n */\\n@mixin generate-mq($args...) {\\n  $media-type: 'only screen';\\n  $media-type-key: 'media-type';\\n  $args: keywords($args);\\n  $expr: '';\\n\\n  @if map-has-key($args, $media-type-key) {\\n    $media-type: map-get($args, $media-type-key);\\n    $args: map-remove($args, $media-type-key);\\n  }\\n\\n  @each $key, $value in $args {\\n    @if $value {\\n      $expr: \\\"#{$expr} and (#{$key}: #{$value})\\\";\\n    }\\n  }\\n\\n  @media #{$media-type} #{$expr} {\\n    @content;\\n  }\\n}\\n\\n/* min-screen($min, $orientation) \\n * $min - required\\n * $orientation - optional\\n * Ex #1: @include min-screen(768px, landscape) { ... }\\n * Ex #2: @include min-screen(768px) { ... }\\n */\\n@mixin min-screen($min, $orientation: false) {\\n  @include generate-mq($min-width: $min, $orientation: $orientation) {\\n    @content;\\n  }\\n}\\n\",\"@import 'globals';\\n@import 'mixins';\\n@import 'viewports';\\n\\n$footer-color: #54514A;\\n$nypl-white: #fff;\\n\\n.footer {\\n  background: $footer-color;\\n  clear: both;\\n  color: #fff;\\n  font-family: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\\n  min-height: 360px;\\n  padding: 15px 20px 100px;\\n  position: relative;\\n\\n  a {\\n    color: $nypl-white;\\n    font-weight: 400;\\n    margin: 0 0.2rem;\\n    text-decoration: none;\\n\\n    &:hover {\\n      text-decoration: underline;\\n    }\\n\\n    &:focus {\\n      background-color: $footer-color;\\n      outline: solid 2px $nypl-white;\\n    }\\n  }\\n\\n  .svgIcon {\\n    fill: #fff;\\n  }\\n\\n  .logoText {\\n    position: absolute;\\n    top: 20px;\\n\\n    .nyplTextLogo {\\n      height: 94px;\\n      width: 115px;\\n    }\\n\\n    @include min-screen($portrait) {\\n      top: 20px;\\n      left: 6%;\\n    }\\n\\n    @include min-screen($landscape) {\\n      top: 35px;\\n    }\\n  }\\n\\n  &-content {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-end;\\n    margin-top: 75px;\\n\\n    .footerLinks {\\n      font-size: 16px;\\n      line-height: 35px;\\n      margin: 0;\\n      padding: 0;\\n      order: 2;\\n      list-style: none;\\n      text-align: right;\\n      width: 100%;\\n\\n      @include min-screen($portrait) {\\n        width: auto;\\n      }\\n\\n      .linkItemList {\\n        list-style-type: none;\\n        li {\\n          @include visuallyHidden;\\n\\n          &:first-child {\\n            @include displayVisuallyHidden;\\n          }\\n\\n          @include min-screen($portrait) {\\n            @include displayVisuallyHidden;\\n          }\\n        }\\n      }\\n\\n      ul {\\n        padding: 0;\\n      }\\n\\n      li {\\n        @include min-screen($portrait) {\\n          float: left;\\n          width: 135px;\\n\\n          &:first-child {\\n            width: 110px;\\n          }\\n        }\\n\\n        @include min-screen($landscape) {\\n          width: 155px;\\n\\n          &:first-child {\\n            margin-right: 110px;\\n          }\\n\\n          &:nth-child(2) {\\n            margin-right: 60px;\\n          }\\n        }\\n\\n        @include min-screen($large) {\\n          &:first-child,\\n          &:nth-child(2) {\\n            width: 155px;\\n            margin-right: 0;\\n          }\\n        }\\n      }\\n\\n      // MQs for .footerLinks\\n      @include min-screen($portrait) {\\n        order: 1;\\n        margin: 0;\\n        font-size: 13px;\\n        line-height: 25px;\\n        text-align: left;\\n      }\\n\\n      @include min-screen($landscape) {\\n        font-size: 14px;\\n        font-weight: 400;\\n        line-height: 30px;\\n      }\\n\\n      @include min-screen($large) {\\n        margin-right: 70px;\\n        order: 2;\\n      }\\n    }\\n\\n    .socialMedia {\\n      order: 1;\\n      margin: 20px 0 15px 0;\\n      list-style-type: none;\\n      // icons are square, we want four across\\n      text-align: right;\\n      width: 50px * 4;\\n\\n      li {\\n        display: inline-block;\\n        width: 45px;\\n\\n        a {\\n          display: block;\\n          color: #FFF;\\n          font-size: 40px;\\n          line-height: 45px;\\n          text-decoration: none;\\n\\n          svg {\\n            width: 36px;\\n            height: 36px;\\n          }\\n\\n          @include min-screen($portrait) {\\n            font-size: 50px;\\n          }\\n        }\\n\\n        [class^=\\\"icon-\\\"],\\n        [class*=\\\" icon-\\\"] {\\n          padding: 0;\\n        }\\n\\n        [data-icon]:before,\\n        [class^=\\\"icon-\\\"]:before,\\n        [class*=\\\" icon-\\\"]:before {\\n          margin: 0 5px 0 0 !important;\\n        }\\n      }\\n\\n      // MQs for .socialMedia\\n      @include min-screen($portrait) {\\n        margin-top: 30px;\\n      }\\n\\n      @include min-screen($landscape) {\\n        margin-top: 30px;\\n      }\\n\\n      @include min-screen($large) {\\n        margin-top: 0;\\n        width: 280px;\\n      }\\n    }\\n\\n    // MQs for &-content\\n    @include min-screen($portrait) {\\n      margin: 0;\\n      right: 6%;\\n      position: absolute;\\n      align-items: flex-end;\\n    }\\n\\n    @include min-screen($large) {\\n      flex-direction: row-reverse;\\n      align-items: flex-start;\\n    }\\n  }\\n\\n  &-content--secondary {\\n\\n    @include min-screen($portrait) {\\n      position: absolute;\\n      left: 6%;\\n      top: 140px;\\n      width: 400px;\\n    }\\n\\n    @include min-screen($landscape) {\\n      top: 170px;\\n    }\\n\\n    @include min-screen($large) {\\n      top: 140px;\\n    }\\n    \\n    .facade {\\n      img {\\n        width: 100%;\\n        height: auto;\\n      }\\n    }\\n    \\n    .copyright {\\n      margin: 35px 0 0 0;\\n      font-size: 12px;\\n      font-family: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\\n      text-align: right;\\n\\n      @include min-screen($portrait) {\\n        font-size: 11px;\\n      }\\n\\n      @include min-screen($landscape) {\\n        font-size: 13px;\\n      }\\n    }\\n  }\\n\\n  // MQs for .footer\\n  @include min-screen($portrait) {\\n    padding: 15px 0;\\n  }\\n\\n  @include min-screen($landscape) {\\n    padding: 30px 0;\\n  }\\n}\\n\",\"/* FONT FACE MIXIN\\n * ---------------\\n * Usage: @include font-face('Kievit-Regular', 'http://...');\\n * Desc: Do not include the font file extension, this mixin\\n * will generate the proper extensions.\\n*/\\n/* VISUALLY HIDE ELEMENTS\\n * ---------------------\\n * Usage: Visually hides an element from the screen\\n * but is still readable by screen readers for accessibility.\\n*/\\n/* DISPLAY VISUALLY HIDDEN ELEMENTS\\n * ---------------------\\n * Usage: Displays an element that is visually hidden.\\n*/\\n/* --- Media Query Generator ---\\n * Reusable mixin used to generate\\n * variations of media query properties.\\n */\\n/* min-screen($min, $orientation) \\n * $min - required\\n * $orientation - optional\\n * Ex #1: @include min-screen(768px, landscape) { ... }\\n * Ex #2: @include min-screen(768px) { ... }\\n */\\n.footer {\\n  background: #54514A;\\n  clear: both;\\n  color: #fff;\\n  font-family: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\\n  min-height: 360px;\\n  padding: 15px 20px 100px;\\n  position: relative;\\n}\\n.footer a {\\n  color: #fff;\\n  font-weight: 400;\\n  margin: 0 0.2rem;\\n  text-decoration: none;\\n}\\n.footer a:hover {\\n  text-decoration: underline;\\n}\\n.footer a:focus {\\n  background-color: #54514A;\\n  outline: solid 2px #fff;\\n}\\n.footer .svgIcon {\\n  fill: #fff;\\n}\\n.footer .logoText {\\n  position: absolute;\\n  top: 20px;\\n}\\n.footer .logoText .nyplTextLogo {\\n  height: 94px;\\n  width: 115px;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer .logoText {\\n    top: 20px;\\n    left: 6%;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer .logoText {\\n    top: 35px;\\n  }\\n}\\n.footer-content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-end;\\n  margin-top: 75px;\\n}\\n.footer-content .footerLinks {\\n  font-size: 16px;\\n  line-height: 35px;\\n  margin: 0;\\n  padding: 0;\\n  order: 2;\\n  list-style: none;\\n  text-align: right;\\n  width: 100%;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .footerLinks {\\n    width: auto;\\n  }\\n}\\n.footer-content .footerLinks .linkItemList {\\n  list-style-type: none;\\n}\\n.footer-content .footerLinks .linkItemList li {\\n  position: absolute;\\n  left: -10000px;\\n  top: auto;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n}\\n.footer-content .footerLinks .linkItemList li:first-child {\\n  position: relative;\\n  left: 0;\\n  height: auto;\\n  width: 100%;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .footerLinks .linkItemList li {\\n    position: relative;\\n    left: 0;\\n    height: auto;\\n    width: 100%;\\n  }\\n}\\n.footer-content .footerLinks ul {\\n  padding: 0;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .footerLinks li {\\n    float: left;\\n    width: 135px;\\n  }\\n  .footer-content .footerLinks li:first-child {\\n    width: 110px;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content .footerLinks li {\\n    width: 155px;\\n  }\\n  .footer-content .footerLinks li:first-child {\\n    margin-right: 110px;\\n  }\\n  .footer-content .footerLinks li:nth-child(2) {\\n    margin-right: 60px;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content .footerLinks li:first-child, .footer-content .footerLinks li:nth-child(2) {\\n    width: 155px;\\n    margin-right: 0;\\n  }\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .footerLinks {\\n    order: 1;\\n    margin: 0;\\n    font-size: 13px;\\n    line-height: 25px;\\n    text-align: left;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content .footerLinks {\\n    font-size: 14px;\\n    font-weight: 400;\\n    line-height: 30px;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content .footerLinks {\\n    margin-right: 70px;\\n    order: 2;\\n  }\\n}\\n.footer-content .socialMedia {\\n  order: 1;\\n  margin: 20px 0 15px 0;\\n  list-style-type: none;\\n  text-align: right;\\n  width: 200px;\\n}\\n.footer-content .socialMedia li {\\n  display: inline-block;\\n  width: 45px;\\n}\\n.footer-content .socialMedia li a {\\n  display: block;\\n  color: #FFF;\\n  font-size: 40px;\\n  line-height: 45px;\\n  text-decoration: none;\\n}\\n.footer-content .socialMedia li a svg {\\n  width: 36px;\\n  height: 36px;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .socialMedia li a {\\n    font-size: 50px;\\n  }\\n}\\n.footer-content .socialMedia li [class^=icon-],\\n.footer-content .socialMedia li [class*=\\\" icon-\\\"] {\\n  padding: 0;\\n}\\n.footer-content .socialMedia li [data-icon]:before,\\n.footer-content .socialMedia li [class^=icon-]:before,\\n.footer-content .socialMedia li [class*=\\\" icon-\\\"]:before {\\n  margin: 0 5px 0 0 !important;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content .socialMedia {\\n    margin-top: 30px;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content .socialMedia {\\n    margin-top: 30px;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content .socialMedia {\\n    margin-top: 0;\\n    width: 280px;\\n  }\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content {\\n    margin: 0;\\n    right: 6%;\\n    position: absolute;\\n    align-items: flex-end;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content {\\n    flex-direction: row-reverse;\\n    align-items: flex-start;\\n  }\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content--secondary {\\n    position: absolute;\\n    left: 6%;\\n    top: 140px;\\n    width: 400px;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content--secondary {\\n    top: 170px;\\n  }\\n}\\n@media only screen and (min-width: 1500px) {\\n  .footer-content--secondary {\\n    top: 140px;\\n  }\\n}\\n.footer-content--secondary .facade img {\\n  width: 100%;\\n  height: auto;\\n}\\n.footer-content--secondary .copyright {\\n  margin: 35px 0 0 0;\\n  font-size: 12px;\\n  font-family: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\\n  text-align: right;\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer-content--secondary .copyright {\\n    font-size: 11px;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer-content--secondary .copyright {\\n    font-size: 13px;\\n  }\\n}\\n@media only screen and (min-width: 768px) {\\n  .footer {\\n    padding: 15px 0;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  .footer {\\n    padding: 30px 0;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL21haW4uc2Nzcz85ODAzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBO0FBQytGO0FBQy9GLDhCQUE4Qix5RkFBMkI7QUFDekQ7QUFDQSwrSUFBK0ksOG9CQUE4b0IsTUFBTSx3Q0FBd0MsTUFBTSxnQkFBZ0Isd0JBQXdCLGdCQUFnQixnQkFBZ0IsMEVBQTBFLHNCQUFzQiw2QkFBNkIsdUJBQXVCLEdBQUcsYUFBYSxnQkFBZ0IscUJBQXFCLHFCQUFxQiwwQkFBMEIsR0FBRyxtQkFBbUIsK0JBQStCLEdBQUcsbUJBQW1CLDhCQUE4Qiw0QkFBNEIsR0FBRyxvQkFBb0IsZUFBZSxHQUFHLHFCQUFxQix1QkFBdUIsY0FBYyxHQUFHLG1DQUFtQyxpQkFBaUIsaUJBQWlCLEdBQUcsNkNBQTZDLHVCQUF1QixnQkFBZ0IsZUFBZSxLQUFLLEdBQUcsOENBQThDLHVCQUF1QixnQkFBZ0IsS0FBSyxHQUFHLG1CQUFtQixrQkFBa0IsMkJBQTJCLDBCQUEwQixxQkFBcUIsR0FBRyxnQ0FBZ0Msb0JBQW9CLHNCQUFzQixjQUFjLGVBQWUsYUFBYSxxQkFBcUIsc0JBQXNCLGdCQUFnQixHQUFHLDZDQUE2QyxrQ0FBa0Msa0JBQWtCLEtBQUssR0FBRyw4Q0FBOEMsMEJBQTBCLEdBQUcsaURBQWlELHVCQUF1QixtQkFBbUIsY0FBYyxlQUFlLGdCQUFnQixxQkFBcUIsR0FBRyw2REFBNkQsdUJBQXVCLFlBQVksaUJBQWlCLGdCQUFnQixHQUFHLDZDQUE2QyxtREFBbUQseUJBQXlCLGNBQWMsbUJBQW1CLGtCQUFrQixLQUFLLEdBQUcsbUNBQW1DLGVBQWUsR0FBRyw2Q0FBNkMscUNBQXFDLGtCQUFrQixtQkFBbUIsS0FBSyxpREFBaUQsbUJBQW1CLEtBQUssR0FBRyw4Q0FBOEMscUNBQXFDLG1CQUFtQixLQUFLLGlEQUFpRCwwQkFBMEIsS0FBSyxrREFBa0QseUJBQXlCLEtBQUssR0FBRyw4Q0FBOEMsK0ZBQStGLG1CQUFtQixzQkFBc0IsS0FBSyxHQUFHLDZDQUE2QyxrQ0FBa0MsZUFBZSxnQkFBZ0Isc0JBQXNCLHdCQUF3Qix1QkFBdUIsS0FBSyxHQUFHLDhDQUE4QyxrQ0FBa0Msc0JBQXNCLHVCQUF1Qix3QkFBd0IsS0FBSyxHQUFHLDhDQUE4QyxrQ0FBa0MseUJBQXlCLGVBQWUsS0FBSyxHQUFHLGdDQUFnQyxhQUFhLDBCQUEwQiwwQkFBMEIsc0JBQXNCLGlCQUFpQixHQUFHLG1DQUFtQywwQkFBMEIsZ0JBQWdCLEdBQUcscUNBQXFDLG1CQUFtQixnQkFBZ0Isb0JBQW9CLHNCQUFzQiwwQkFBMEIsR0FBRyx5Q0FBeUMsZ0JBQWdCLGlCQUFpQixHQUFHLDZDQUE2Qyx1Q0FBdUMsc0JBQXNCLEtBQUssR0FBRyx3R0FBd0csZUFBZSxHQUFHLDJLQUEySyxpQ0FBaUMsR0FBRyw2Q0FBNkMsa0NBQWtDLHVCQUF1QixLQUFLLEdBQUcsOENBQThDLGtDQUFrQyx1QkFBdUIsS0FBSyxHQUFHLDhDQUE4QyxrQ0FBa0Msb0JBQW9CLG1CQUFtQixLQUFLLEdBQUcsNkNBQTZDLHFCQUFxQixnQkFBZ0IsZ0JBQWdCLHlCQUF5Qiw0QkFBNEIsS0FBSyxHQUFHLDhDQUE4QyxxQkFBcUIsa0NBQWtDLDhCQUE4QixLQUFLLEdBQUcsNkNBQTZDLGdDQUFnQyx5QkFBeUIsZUFBZSxpQkFBaUIsbUJBQW1CLEtBQUssR0FBRyw4Q0FBOEMsZ0NBQWdDLGlCQUFpQixLQUFLLEdBQUcsOENBQThDLGdDQUFnQyxpQkFBaUIsS0FBSyxHQUFHLDBDQUEwQyxnQkFBZ0IsaUJBQWlCLEdBQUcseUNBQXlDLHVCQUF1QixvQkFBb0IsMEVBQTBFLHNCQUFzQixHQUFHLDZDQUE2QywyQ0FBMkMsc0JBQXNCLEtBQUssR0FBRyw4Q0FBOEMsMkNBQTJDLHNCQUFzQixLQUFLLEdBQUcsNkNBQTZDLGFBQWEsc0JBQXNCLEtBQUssR0FBRyw4Q0FBOEMsYUFBYSxzQkFBc0IsS0FBSyxHQUFHLE9BQU8sb1RBQW9ULEtBQUssU0FBUyxLQUFLLE9BQU8sS0FBSyxRQUFRLEtBQUssVUFBVSxLQUFLLE1BQU0sV0FBVyxVQUFVLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxNQUFNLE1BQU0sVUFBVSxXQUFXLFdBQVcsV0FBVyxNQUFNLE1BQU0sV0FBVyxNQUFNLE1BQU0sWUFBWSxZQUFZLE1BQU0sS0FBSyxVQUFVLE1BQU0sS0FBSyxXQUFXLFVBQVUsS0FBSyxLQUFLLFVBQVUsVUFBVSxLQUFLLE1BQU0sS0FBSyxVQUFVLFVBQVUsS0FBSyxLQUFLLE1BQU0sS0FBSyxVQUFVLE1BQU0sS0FBSyxLQUFLLFVBQVUsV0FBVyxXQUFXLFdBQVcsS0FBSyxLQUFLLFVBQVUsV0FBVyxVQUFVLFVBQVUsVUFBVSxXQUFXLFdBQVcsVUFBVSxLQUFLLE1BQU0sTUFBTSxVQUFVLE1BQU0sS0FBSyxLQUFLLFdBQVcsTUFBTSxLQUFLLFlBQVksVUFBVSxVQUFVLFVBQVUsVUFBVSxXQUFXLE1BQU0sTUFBTSxZQUFZLFVBQVUsVUFBVSxVQUFVLE1BQU0sTUFBTSxNQUFNLFlBQVksVUFBVSxVQUFVLFVBQVUsTUFBTSxLQUFLLE1BQU0sVUFBVSxNQUFNLE1BQU0sTUFBTSxVQUFVLFVBQVUsTUFBTSxNQUFNLFVBQVUsTUFBTSxLQUFLLE1BQU0sTUFBTSxVQUFVLE1BQU0sTUFBTSxXQUFXLE1BQU0sTUFBTSxXQUFXLE1BQU0sS0FBSyxNQUFNLE1BQU0sVUFBVSxVQUFVLE1BQU0sS0FBSyxNQUFNLE1BQU0sV0FBVyxVQUFVLFVBQVUsV0FBVyxXQUFXLE1BQU0sS0FBSyxNQUFNLE1BQU0sV0FBVyxXQUFXLFdBQVcsTUFBTSxLQUFLLE1BQU0sTUFBTSxZQUFZLFVBQVUsTUFBTSxLQUFLLE1BQU0sVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLE1BQU0sTUFBTSxXQUFXLFVBQVUsTUFBTSxNQUFNLFVBQVUsVUFBVSxVQUFVLFdBQVcsV0FBVyxNQUFNLE1BQU0sVUFBVSxVQUFVLE1BQU0sTUFBTSxNQUFNLFVBQVUsTUFBTSxLQUFLLE9BQU8sVUFBVSxNQUFNLFFBQVEsV0FBVyxNQUFNLE1BQU0sTUFBTSxZQUFZLE1BQU0sS0FBSyxNQUFNLE1BQU0sWUFBWSxNQUFNLEtBQUssTUFBTSxNQUFNLFdBQVcsVUFBVSxNQUFNLEtBQUssTUFBTSxNQUFNLFdBQVcsVUFBVSxXQUFXLFdBQVcsTUFBTSxLQUFLLE1BQU0sTUFBTSxZQUFZLFdBQVcsTUFBTSxLQUFLLE1BQU0sTUFBTSxXQUFXLFVBQVUsVUFBVSxVQUFVLE1BQU0sS0FBSyxNQUFNLE1BQU0sVUFBVSxNQUFNLEtBQUssTUFBTSxNQUFNLFVBQVUsTUFBTSxLQUFLLEtBQUssVUFBVSxVQUFVLE1BQU0sS0FBSyxXQUFXLFVBQVUsV0FBVyxXQUFXLEtBQUssTUFBTSxNQUFNLFVBQVUsTUFBTSxLQUFLLE1BQU0sTUFBTSxVQUFVLE1BQU0sS0FBSyxNQUFNLEtBQUssV0FBVyxLQUFLLEtBQUssTUFBTSxLQUFLLFdBQVcsTUFBTSw4SEFBOEgsd0pBQXdKLGdCQUFnQixnQ0FBZ0Msa0JBQWtCLFdBQVcsT0FBTyxrQkFBa0IsV0FBVyw0REFBNEQsV0FBVyx5Q0FBeUMsV0FBVywwQkFBMEIsS0FBSyxHQUFHLHdNQUF3TSx1QkFBdUIsbUJBQW1CLGNBQWMsZUFBZSxnQkFBZ0IscUJBQXFCLEdBQUcsNkpBQTZKLHVCQUF1QixZQUFZLGlCQUFpQixnQkFBZ0IsR0FBRyx3SkFBd0osK0JBQStCLGtDQUFrQywyQkFBMkIsY0FBYywrQ0FBK0MsbURBQW1ELGdEQUFnRCxLQUFLLG1DQUFtQyxrQkFBa0IsbUJBQW1CLE1BQU0sUUFBUSxLQUFLLElBQUksT0FBTyxJQUFJLE9BQU8sS0FBSyxlQUFlLFlBQVksR0FBRyxNQUFNLEVBQUUsZUFBZSxLQUFLLEdBQUcseUlBQXlJLE1BQU0sd0NBQXdDLE1BQU0scURBQXFELHdFQUF3RSxlQUFlLEtBQUssR0FBRyx1QkFBdUIsbUJBQW1CLHNCQUFzQiwyQkFBMkIsb0JBQW9CLGFBQWEsOEJBQThCLGdCQUFnQixnQkFBZ0IsMEVBQTBFLHNCQUFzQiw2QkFBNkIsdUJBQXVCLFNBQVMseUJBQXlCLHVCQUF1Qix1QkFBdUIsNEJBQTRCLGlCQUFpQixtQ0FBbUMsT0FBTyxpQkFBaUIsd0NBQXdDLHVDQUF1QyxPQUFPLEtBQUssZ0JBQWdCLGlCQUFpQixLQUFLLGlCQUFpQix5QkFBeUIsZ0JBQWdCLHVCQUF1QixxQkFBcUIscUJBQXFCLE9BQU8sd0NBQXdDLGtCQUFrQixpQkFBaUIsT0FBTyx5Q0FBeUMsa0JBQWtCLE9BQU8sS0FBSyxpQkFBaUIsb0JBQW9CLDZCQUE2Qiw0QkFBNEIsdUJBQXVCLHNCQUFzQix3QkFBd0IsMEJBQTBCLGtCQUFrQixtQkFBbUIsaUJBQWlCLHlCQUF5QiwwQkFBMEIsb0JBQW9CLDBDQUEwQyxzQkFBc0IsU0FBUyx5QkFBeUIsZ0NBQWdDLGNBQWMsb0NBQW9DLDZCQUE2Qiw2Q0FBNkMsYUFBYSw4Q0FBOEMsNkNBQTZDLGFBQWEsV0FBVyxTQUFTLGNBQWMscUJBQXFCLFNBQVMsY0FBYywwQ0FBMEMsd0JBQXdCLHlCQUF5Qiw2QkFBNkIsMkJBQTJCLGFBQWEsV0FBVyw2Q0FBNkMseUJBQXlCLDZCQUE2QixrQ0FBa0MsYUFBYSw4QkFBOEIsaUNBQWlDLGFBQWEsV0FBVyx5Q0FBeUMsc0RBQXNELDJCQUEyQiw4QkFBOEIsYUFBYSxXQUFXLFNBQVMseUVBQXlFLG1CQUFtQixvQkFBb0IsMEJBQTBCLDRCQUE0QiwyQkFBMkIsU0FBUywyQ0FBMkMsMEJBQTBCLDJCQUEyQiw0QkFBNEIsU0FBUyx1Q0FBdUMsNkJBQTZCLG1CQUFtQixTQUFTLE9BQU8sc0JBQXNCLGlCQUFpQiw4QkFBOEIsOEJBQThCLDBFQUEwRSx3QkFBd0IsY0FBYyxnQ0FBZ0Msc0JBQXNCLGVBQWUsMkJBQTJCLHdCQUF3Qiw0QkFBNEIsOEJBQThCLGtDQUFrQyxtQkFBbUIsMEJBQTBCLDJCQUEyQixhQUFhLDhDQUE4Qyw4QkFBOEIsYUFBYSxXQUFXLDhEQUE4RCx1QkFBdUIsV0FBVyx5R0FBeUcseUNBQXlDLFdBQVcsU0FBUyx5RUFBeUUsMkJBQTJCLFNBQVMsMkNBQTJDLDJCQUEyQixTQUFTLHVDQUF1Qyx3QkFBd0IsdUJBQXVCLFNBQVMsT0FBTyxrRUFBa0Usa0JBQWtCLGtCQUFrQiwyQkFBMkIsOEJBQThCLE9BQU8scUNBQXFDLG9DQUFvQyxnQ0FBZ0MsT0FBTyxLQUFLLDRCQUE0Qix3Q0FBd0MsMkJBQTJCLGlCQUFpQixtQkFBbUIscUJBQXFCLE9BQU8seUNBQXlDLG1CQUFtQixPQUFPLHFDQUFxQyxtQkFBbUIsT0FBTyxxQkFBcUIsYUFBYSxzQkFBc0IsdUJBQXVCLFNBQVMsT0FBTyx3QkFBd0IsMkJBQTJCLHdCQUF3Qiw4RUFBOEUsMEJBQTBCLDBDQUEwQywwQkFBMEIsU0FBUywyQ0FBMkMsMEJBQTBCLFNBQVMsT0FBTyxLQUFLLDREQUE0RCxzQkFBc0IsS0FBSyx1Q0FBdUMsc0JBQXNCLEtBQUssR0FBRywwR0FBMEcsOG9CQUE4b0IsTUFBTSx3Q0FBd0MsTUFBTSxnQkFBZ0Isd0JBQXdCLGdCQUFnQixnQkFBZ0IsMEVBQTBFLHNCQUFzQiw2QkFBNkIsdUJBQXVCLEdBQUcsYUFBYSxnQkFBZ0IscUJBQXFCLHFCQUFxQiwwQkFBMEIsR0FBRyxtQkFBbUIsK0JBQStCLEdBQUcsbUJBQW1CLDhCQUE4Qiw0QkFBNEIsR0FBRyxvQkFBb0IsZUFBZSxHQUFHLHFCQUFxQix1QkFBdUIsY0FBYyxHQUFHLG1DQUFtQyxpQkFBaUIsaUJBQWlCLEdBQUcsNkNBQTZDLHVCQUF1QixnQkFBZ0IsZUFBZSxLQUFLLEdBQUcsOENBQThDLHVCQUF1QixnQkFBZ0IsS0FBSyxHQUFHLG1CQUFtQixrQkFBa0IsMkJBQTJCLDBCQUEwQixxQkFBcUIsR0FBRyxnQ0FBZ0Msb0JBQW9CLHNCQUFzQixjQUFjLGVBQWUsYUFBYSxxQkFBcUIsc0JBQXNCLGdCQUFnQixHQUFHLDZDQUE2QyxrQ0FBa0Msa0JBQWtCLEtBQUssR0FBRyw4Q0FBOEMsMEJBQTBCLEdBQUcsaURBQWlELHVCQUF1QixtQkFBbUIsY0FBYyxlQUFlLGdCQUFnQixxQkFBcUIsR0FBRyw2REFBNkQsdUJBQXVCLFlBQVksaUJBQWlCLGdCQUFnQixHQUFHLDZDQUE2QyxtREFBbUQseUJBQXlCLGNBQWMsbUJBQW1CLGtCQUFrQixLQUFLLEdBQUcsbUNBQW1DLGVBQWUsR0FBRyw2Q0FBNkMscUNBQXFDLGtCQUFrQixtQkFBbUIsS0FBSyxpREFBaUQsbUJBQW1CLEtBQUssR0FBRyw4Q0FBOEMscUNBQXFDLG1CQUFtQixLQUFLLGlEQUFpRCwwQkFBMEIsS0FBSyxrREFBa0QseUJBQXlCLEtBQUssR0FBRyw4Q0FBOEMsK0ZBQStGLG1CQUFtQixzQkFBc0IsS0FBSyxHQUFHLDZDQUE2QyxrQ0FBa0MsZUFBZSxnQkFBZ0Isc0JBQXNCLHdCQUF3Qix1QkFBdUIsS0FBSyxHQUFHLDhDQUE4QyxrQ0FBa0Msc0JBQXNCLHVCQUF1Qix3QkFBd0IsS0FBSyxHQUFHLDhDQUE4QyxrQ0FBa0MseUJBQXlCLGVBQWUsS0FBSyxHQUFHLGdDQUFnQyxhQUFhLDBCQUEwQiwwQkFBMEIsc0JBQXNCLGlCQUFpQixHQUFHLG1DQUFtQywwQkFBMEIsZ0JBQWdCLEdBQUcscUNBQXFDLG1CQUFtQixnQkFBZ0Isb0JBQW9CLHNCQUFzQiwwQkFBMEIsR0FBRyx5Q0FBeUMsZ0JBQWdCLGlCQUFpQixHQUFHLDZDQUE2Qyx1Q0FBdUMsc0JBQXNCLEtBQUssR0FBRyx3R0FBd0csZUFBZSxHQUFHLDJLQUEySyxpQ0FBaUMsR0FBRyw2Q0FBNkMsa0NBQWtDLHVCQUF1QixLQUFLLEdBQUcsOENBQThDLGtDQUFrQyx1QkFBdUIsS0FBSyxHQUFHLDhDQUE4QyxrQ0FBa0Msb0JBQW9CLG1CQUFtQixLQUFLLEdBQUcsNkNBQTZDLHFCQUFxQixnQkFBZ0IsZ0JBQWdCLHlCQUF5Qiw0QkFBNEIsS0FBSyxHQUFHLDhDQUE4QyxxQkFBcUIsa0NBQWtDLDhCQUE4QixLQUFLLEdBQUcsNkNBQTZDLGdDQUFnQyx5QkFBeUIsZUFBZSxpQkFBaUIsbUJBQW1CLEtBQUssR0FBRyw4Q0FBOEMsZ0NBQWdDLGlCQUFpQixLQUFLLEdBQUcsOENBQThDLGdDQUFnQyxpQkFBaUIsS0FBSyxHQUFHLDBDQUEwQyxnQkFBZ0IsaUJBQWlCLEdBQUcseUNBQXlDLHVCQUF1QixvQkFBb0IsMEVBQTBFLHNCQUFzQixHQUFHLDZDQUE2QywyQ0FBMkMsc0JBQXNCLEtBQUssR0FBRyw4Q0FBOEMsMkNBQTJDLHNCQUFzQixLQUFLLEdBQUcsNkNBQTZDLGFBQWEsc0JBQXNCLEtBQUssR0FBRyw4Q0FBOEMsYUFBYSxzQkFBc0IsS0FBSyxHQUFHLG1CQUFtQjtBQUNob3JCO0FBQ0EsK0RBQWUsdUJBQXVCLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVsxXSEuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcG9zdGNzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVsyXSEuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVzb2x2ZS11cmwtbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVszXSEuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvc2Fzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVs0XSEuL3N0eWxlcy9tYWluLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIvKiBGT05UIEZBQ0UgTUlYSU5cXG4gKiAtLS0tLS0tLS0tLS0tLS1cXG4gKiBVc2FnZTogQGluY2x1ZGUgZm9udC1mYWNlKCdLaWV2aXQtUmVndWxhcicsICdodHRwOi8vLi4uJyk7XFxuICogRGVzYzogRG8gbm90IGluY2x1ZGUgdGhlIGZvbnQgZmlsZSBleHRlbnNpb24sIHRoaXMgbWl4aW5cXG4gKiB3aWxsIGdlbmVyYXRlIHRoZSBwcm9wZXIgZXh0ZW5zaW9ucy5cXG4qL1xcbi8qIFZJU1VBTExZIEhJREUgRUxFTUVOVFNcXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cXG4gKiBVc2FnZTogVmlzdWFsbHkgaGlkZXMgYW4gZWxlbWVudCBmcm9tIHRoZSBzY3JlZW5cXG4gKiBidXQgaXMgc3RpbGwgcmVhZGFibGUgYnkgc2NyZWVuIHJlYWRlcnMgZm9yIGFjY2Vzc2liaWxpdHkuXFxuKi9cXG4vKiBESVNQTEFZIFZJU1VBTExZIEhJRERFTiBFTEVNRU5UU1xcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcbiAqIFVzYWdlOiBEaXNwbGF5cyBhbiBlbGVtZW50IHRoYXQgaXMgdmlzdWFsbHkgaGlkZGVuLlxcbiovXFxuLyogLS0tIE1lZGlhIFF1ZXJ5IEdlbmVyYXRvciAtLS1cXG4gKiBSZXVzYWJsZSBtaXhpbiB1c2VkIHRvIGdlbmVyYXRlXFxuICogdmFyaWF0aW9ucyBvZiBtZWRpYSBxdWVyeSBwcm9wZXJ0aWVzLlxcbiAqL1xcbi8qIG1pbi1zY3JlZW4oJG1pbiwgJG9yaWVudGF0aW9uKSBcXG4gKiAkbWluIC0gcmVxdWlyZWRcXG4gKiAkb3JpZW50YXRpb24gLSBvcHRpb25hbFxcbiAqIEV4ICMxOiBAaW5jbHVkZSBtaW4tc2NyZWVuKDc2OHB4LCBsYW5kc2NhcGUpIHsgLi4uIH1cXG4gKiBFeCAjMjogQGluY2x1ZGUgbWluLXNjcmVlbig3NjhweCkgeyAuLi4gfVxcbiAqL1xcbi5mb290ZXIge1xcbiAgYmFja2dyb3VuZDogIzU0NTE0QTtcXG4gIGNsZWFyOiBib3RoO1xcbiAgY29sb3I6ICNmZmY7XFxuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7XFxuICBtaW4taGVpZ2h0OiAzNjBweDtcXG4gIHBhZGRpbmc6IDE1cHggMjBweCAxMDBweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLmZvb3RlciBhIHtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIG1hcmdpbjogMCAwLjJyZW07XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxufVxcbi5mb290ZXIgYTpob3ZlciB7XFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG59XFxuLmZvb3RlciBhOmZvY3VzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM1NDUxNEE7XFxuICBvdXRsaW5lOiBzb2xpZCAycHggI2ZmZjtcXG59XFxuLmZvb3RlciAuc3ZnSWNvbiB7XFxuICBmaWxsOiAjZmZmO1xcbn1cXG4uZm9vdGVyIC5sb2dvVGV4dCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDIwcHg7XFxufVxcbi5mb290ZXIgLmxvZ29UZXh0IC5ueXBsVGV4dExvZ28ge1xcbiAgaGVpZ2h0OiA5NHB4O1xcbiAgd2lkdGg6IDExNXB4O1xcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZm9vdGVyIC5sb2dvVGV4dCB7XFxuICAgIHRvcDogMjBweDtcXG4gICAgbGVmdDogNiU7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XFxuICAuZm9vdGVyIC5sb2dvVGV4dCB7XFxuICAgIHRvcDogMzVweDtcXG4gIH1cXG59XFxuLmZvb3Rlci1jb250ZW50IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xcbiAgbWFyZ2luLXRvcDogNzVweDtcXG59XFxuLmZvb3Rlci1jb250ZW50IC5mb290ZXJMaW5rcyB7XFxuICBmb250LXNpemU6IDE2cHg7XFxuICBsaW5lLWhlaWdodDogMzVweDtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBvcmRlcjogMjtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICB0ZXh0LWFsaWduOiByaWdodDtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIHtcXG4gICAgd2lkdGg6IGF1dG87XFxuICB9XFxufVxcbi5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3MgLmxpbmtJdGVtTGlzdCB7XFxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxufVxcbi5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3MgLmxpbmtJdGVtTGlzdCBsaSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsZWZ0OiAtMTAwMDBweDtcXG4gIHRvcDogYXV0bztcXG4gIHdpZHRoOiAxcHg7XFxuICBoZWlnaHQ6IDFweDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcbi5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3MgLmxpbmtJdGVtTGlzdCBsaTpmaXJzdC1jaGlsZCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBsZWZ0OiAwO1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcXG4gIC5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3MgLmxpbmtJdGVtTGlzdCBsaSB7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgbGVmdDogMDtcXG4gICAgaGVpZ2h0OiBhdXRvO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG59XFxuLmZvb3Rlci1jb250ZW50IC5mb290ZXJMaW5rcyB1bCB7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIGxpIHtcXG4gICAgZmxvYXQ6IGxlZnQ7XFxuICAgIHdpZHRoOiAxMzVweDtcXG4gIH1cXG4gIC5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3MgbGk6Zmlyc3QtY2hpbGQge1xcbiAgICB3aWR0aDogMTEwcHg7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIGxpIHtcXG4gICAgd2lkdGg6IDE1NXB4O1xcbiAgfVxcbiAgLmZvb3Rlci1jb250ZW50IC5mb290ZXJMaW5rcyBsaTpmaXJzdC1jaGlsZCB7XFxuICAgIG1hcmdpbi1yaWdodDogMTEwcHg7XFxuICB9XFxuICAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIGxpOm50aC1jaGlsZCgyKSB7XFxuICAgIG1hcmdpbi1yaWdodDogNjBweDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNTAwcHgpIHtcXG4gIC5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3MgbGk6Zmlyc3QtY2hpbGQsIC5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3MgbGk6bnRoLWNoaWxkKDIpIHtcXG4gICAgd2lkdGg6IDE1NXB4O1xcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcXG4gIC5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3Mge1xcbiAgICBvcmRlcjogMTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBmb250LXNpemU6IDEzcHg7XFxuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IC5mb290ZXJMaW5rcyB7XFxuICAgIGZvbnQtc2l6ZTogMTRweDtcXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTUwMHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIHtcXG4gICAgbWFyZ2luLXJpZ2h0OiA3MHB4O1xcbiAgICBvcmRlcjogMjtcXG4gIH1cXG59XFxuLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSB7XFxuICBvcmRlcjogMTtcXG4gIG1hcmdpbjogMjBweCAwIDE1cHggMDtcXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgd2lkdGg6IDIwMHB4O1xcbn1cXG4uZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIGxpIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHdpZHRoOiA0NXB4O1xcbn1cXG4uZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIGxpIGEge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBjb2xvcjogI0ZGRjtcXG4gIGZvbnQtc2l6ZTogNDBweDtcXG4gIGxpbmUtaGVpZ2h0OiA0NXB4O1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbn1cXG4uZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIGxpIGEgc3ZnIHtcXG4gIHdpZHRoOiAzNnB4O1xcbiAgaGVpZ2h0OiAzNnB4O1xcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIGxpIGEge1xcbiAgICBmb250LXNpemU6IDUwcHg7XFxuICB9XFxufVxcbi5mb290ZXItY29udGVudCAuc29jaWFsTWVkaWEgbGkgW2NsYXNzXj1pY29uLV0sXFxuLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSBsaSBbY2xhc3MqPVxcXCIgaWNvbi1cXFwiXSB7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG4uZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIGxpIFtkYXRhLWljb25dOmJlZm9yZSxcXG4uZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIGxpIFtjbGFzc149aWNvbi1dOmJlZm9yZSxcXG4uZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIGxpIFtjbGFzcyo9XFxcIiBpY29uLVxcXCJdOmJlZm9yZSB7XFxuICBtYXJnaW46IDAgNXB4IDAgMCAhaW1wb3J0YW50O1xcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIHtcXG4gICAgbWFyZ2luLXRvcDogMzBweDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcXG4gIC5mb290ZXItY29udGVudCAuc29jaWFsTWVkaWEge1xcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE1MDBweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSB7XFxuICAgIG1hcmdpbi10b3A6IDA7XFxuICAgIHdpZHRoOiAyODBweDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICByaWdodDogNiU7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE1MDBweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IHtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLmZvb3Rlci1jb250ZW50LS1zZWNvbmRhcnkge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDYlO1xcbiAgICB0b3A6IDE0MHB4O1xcbiAgICB3aWR0aDogNDAwcHg7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQtLXNlY29uZGFyeSB7XFxuICAgIHRvcDogMTcwcHg7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTUwMHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQtLXNlY29uZGFyeSB7XFxuICAgIHRvcDogMTQwcHg7XFxuICB9XFxufVxcbi5mb290ZXItY29udGVudC0tc2Vjb25kYXJ5IC5mYWNhZGUgaW1nIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiBhdXRvO1xcbn1cXG4uZm9vdGVyLWNvbnRlbnQtLXNlY29uZGFyeSAuY29weXJpZ2h0IHtcXG4gIG1hcmdpbjogMzVweCAwIDAgMDtcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIHN5c3RlbS11aSwgc2Fucy1zZXJpZjtcXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQtLXNlY29uZGFyeSAuY29weXJpZ2h0IHtcXG4gICAgZm9udC1zaXplOiAxMXB4O1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xcbiAgLmZvb3Rlci1jb250ZW50LS1zZWNvbmRhcnkgLmNvcHlyaWdodCB7XFxuICAgIGZvbnQtc2l6ZTogMTNweDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLmZvb3RlciB7XFxuICAgIHBhZGRpbmc6IDE1cHggMDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcXG4gIC5mb290ZXIge1xcbiAgICBwYWRkaW5nOiAzMHB4IDA7XFxuICB9XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uLi9ub2RlX21vZHVsZXMvQG55cGwvZGd4LXJlYWN0LWZvb3Rlci9kaXN0L3N0eWxlcy9fbWl4aW5zLnNjc3NcIixcIndlYnBhY2s6Ly8uLi9ub2RlX21vZHVsZXMvQG55cGwvZGd4LXJlYWN0LWZvb3Rlci9kaXN0L3N0eWxlcy9fdmlld3BvcnRzLnNjc3NcIixcIndlYnBhY2s6Ly8uLi9ub2RlX21vZHVsZXMvQG55cGwvZGd4LXJlYWN0LWZvb3Rlci9kaXN0L3N0eWxlcy9zdHlsZXMuc2Nzc1wiLFwid2VicGFjazovL21haW4uc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7Ozs7Q0FBQTtBQWdCQTs7OztDQUFBO0FBY0E7OztDQUFBO0FDOUJBOzs7RUFBQTtBQTBCQTs7Ozs7RUFBQTtBQ25CQTtFQUNFLG1CQUphO0VBS2IsV0FBQTtFQUNBLFdBQUE7RUFDQSxxRUFBQTtFQUNBLGlCQUFBO0VBQ0Esd0JBQUE7RUFDQSxrQkFBQTtBQ21CRjtBRGpCRTtFQUNFLFdBWlM7RUFhVCxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7QUNtQko7QURqQkk7RUFDRSwwQkFBQTtBQ21CTjtBRGhCSTtFQUNFLHlCQXZCUztFQXdCVCx1QkFBQTtBQ2tCTjtBRGRFO0VBQ0UsVUFBQTtBQ2dCSjtBRGJFO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0FDZUo7QURiSTtFQUNFLFlBQUE7RUFDQSxZQUFBO0FDZU47QUZwQ0U7RUNlQTtJQVVJLFNBQUE7SUFDQSxRQUFBO0VDZUo7QUFDRjtBRjFDRTtFQ2VBO0lBZUksU0FBQTtFQ2dCSjtBQUNGO0FEYkU7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxxQkFBQTtFQUNBLGdCQUFBO0FDZUo7QURiSTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsUUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0FDZU47QUYvREU7RUN3Q0U7SUFXSSxXQUFBO0VDZ0JOO0FBQ0Y7QURkTTtFQUNFLHFCQUFBO0FDZ0JSO0FEZlE7RUZ2RE4sa0JBQUE7RUFDQSxjQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7QUd5RUY7QURwQlU7RUY3Q1Isa0JBQUE7RUFDQSxPQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUdvRUY7QUZyRkU7RUN3RE07SUYxQ04sa0JBQUE7SUFDQSxPQUFBO0lBQ0EsWUFBQTtJQUNBLFdBQUE7RUcyRUE7QUFDRjtBRHhCTTtFQUNFLFVBQUE7QUMwQlI7QUZoR0U7RUN5RUk7SUFFSSxXQUFBO0lBQ0EsWUFBQTtFQ3lCUjtFRHZCUTtJQUNFLFlBQUE7RUN5QlY7QUFDRjtBRnpHRTtFQ3lFSTtJQVdJLFlBQUE7RUN5QlI7RUR2QlE7SUFDRSxtQkFBQTtFQ3lCVjtFRHRCUTtJQUNFLGtCQUFBO0VDd0JWO0FBQ0Y7QUZwSEU7RUNnR1E7SUFFRSxZQUFBO0lBQ0EsZUFBQTtFQ3NCVjtBQUNGO0FGMUhFO0VDd0NFO0lBa0VJLFFBQUE7SUFDQSxTQUFBO0lBQ0EsZUFBQTtJQUNBLGlCQUFBO0lBQ0EsZ0JBQUE7RUNvQk47QUFDRjtBRm5JRTtFQ3dDRTtJQTBFSSxlQUFBO0lBQ0EsZ0JBQUE7SUFDQSxpQkFBQTtFQ3FCTjtBQUNGO0FGMUlFO0VDd0NFO0lBZ0ZJLGtCQUFBO0lBQ0EsUUFBQTtFQ3NCTjtBQUNGO0FEbkJJO0VBQ0UsUUFBQTtFQUNBLHFCQUFBO0VBQ0EscUJBQUE7RUFFQSxpQkFBQTtFQUNBLFlBQUE7QUNvQk47QURsQk07RUFDRSxxQkFBQTtFQUNBLFdBQUE7QUNvQlI7QURsQlE7RUFDRSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLHFCQUFBO0FDb0JWO0FEbEJVO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNvQlo7QUZ0S0U7RUN5SU07SUFhSSxlQUFBO0VDb0JWO0FBQ0Y7QURqQlE7O0VBRUUsVUFBQTtBQ21CVjtBRGhCUTs7O0VBR0UsNEJBQUE7QUNrQlY7QUZwTEU7RUM2SEU7SUEyQ0ksZ0JBQUE7RUNnQk47QUFDRjtBRnpMRTtFQzZIRTtJQStDSSxnQkFBQTtFQ2lCTjtBQUNGO0FGOUxFO0VDNkhFO0lBbURJLGFBQUE7SUFDQSxZQUFBO0VDa0JOO0FBQ0Y7QUZwTUU7RUNrQ0E7SUFxSkksU0FBQTtJQUNBLFNBQUE7SUFDQSxrQkFBQTtJQUNBLHFCQUFBO0VDaUJKO0FBQ0Y7QUY1TUU7RUNrQ0E7SUE0SkksMkJBQUE7SUFDQSx1QkFBQTtFQ2tCSjtBQUNGO0FGbE5FO0VDbU1BO0lBR0ksa0JBQUE7SUFDQSxRQUFBO0lBQ0EsVUFBQTtJQUNBLFlBQUE7RUNnQko7QUFDRjtBRjFORTtFQ21NQTtJQVVJLFVBQUE7RUNpQko7QUFDRjtBRi9ORTtFQ21NQTtJQWNJLFVBQUE7RUNrQko7QUFDRjtBRGZNO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNpQlI7QURiSTtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLHFFQUFBO0VBQ0EsaUJBQUE7QUNlTjtBRjlPRTtFQzJORTtJQU9JLGVBQUE7RUNnQk47QUFDRjtBRm5QRTtFQzJORTtJQVdJLGVBQUE7RUNpQk47QUFDRjtBRnhQRTtFQ2RGO0lBMlBJLGVBQUE7RUNlRjtBQUNGO0FGN1BFO0VDZEY7SUErUEksZUFBQTtFQ2dCRjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qIEZPTlQgRkFDRSBNSVhJTlxcbiAqIC0tLS0tLS0tLS0tLS0tLVxcbiAqIFVzYWdlOiBAaW5jbHVkZSBmb250LWZhY2UoJ0tpZXZpdC1SZWd1bGFyJywgJ2h0dHA6Ly8uLi4nKTtcXG4gKiBEZXNjOiBEbyBub3QgaW5jbHVkZSB0aGUgZm9udCBmaWxlIGV4dGVuc2lvbiwgdGhpcyBtaXhpblxcbiAqIHdpbGwgZ2VuZXJhdGUgdGhlIHByb3BlciBleHRlbnNpb25zLlxcbiovXFxuQG1peGluIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICRmaWxlLXBhdGgpIHtcXG4gIEBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5O1xcbiAgICBzcmM6IHVybCgnI3skZmlsZS1wYXRofS5lb3QnKTtcXG4gICAgc3JjOiB1cmwoJyN7JGZpbGUtcGF0aH0uZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgICB1cmwoJyN7JGZpbGUtcGF0aH0ud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgIHVybCgnI3skZmlsZS1wYXRofS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICB9XFxufVxcblxcbi8qIFZJU1VBTExZIEhJREUgRUxFTUVOVFNcXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cXG4gKiBVc2FnZTogVmlzdWFsbHkgaGlkZXMgYW4gZWxlbWVudCBmcm9tIHRoZSBzY3JlZW5cXG4gKiBidXQgaXMgc3RpbGwgcmVhZGFibGUgYnkgc2NyZWVuIHJlYWRlcnMgZm9yIGFjY2Vzc2liaWxpdHkuXFxuKi9cXG5AbWl4aW4gdmlzdWFsbHlIaWRkZW4ge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogLTEwMDAwcHg7XFxuICB0b3A6IGF1dG87XFxuICB3aWR0aDogMXB4O1xcbiAgaGVpZ2h0OiAxcHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4vKiBESVNQTEFZIFZJU1VBTExZIEhJRERFTiBFTEVNRU5UU1xcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcbiAqIFVzYWdlOiBEaXNwbGF5cyBhbiBlbGVtZW50IHRoYXQgaXMgdmlzdWFsbHkgaGlkZGVuLlxcbiovXFxuQG1peGluIGRpc3BsYXlWaXN1YWxseUhpZGRlbiB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBsZWZ0OiAwO1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblwiLFwiLyogLS0tIE1lZGlhIFF1ZXJ5IEdlbmVyYXRvciAtLS1cXG4gKiBSZXVzYWJsZSBtaXhpbiB1c2VkIHRvIGdlbmVyYXRlXFxuICogdmFyaWF0aW9ucyBvZiBtZWRpYSBxdWVyeSBwcm9wZXJ0aWVzLlxcbiAqL1xcbkBtaXhpbiBnZW5lcmF0ZS1tcSgkYXJncy4uLikge1xcbiAgJG1lZGlhLXR5cGU6ICdvbmx5IHNjcmVlbic7XFxuICAkbWVkaWEtdHlwZS1rZXk6ICdtZWRpYS10eXBlJztcXG4gICRhcmdzOiBrZXl3b3JkcygkYXJncyk7XFxuICAkZXhwcjogJyc7XFxuXFxuICBAaWYgbWFwLWhhcy1rZXkoJGFyZ3MsICRtZWRpYS10eXBlLWtleSkge1xcbiAgICAkbWVkaWEtdHlwZTogbWFwLWdldCgkYXJncywgJG1lZGlhLXR5cGUta2V5KTtcXG4gICAgJGFyZ3M6IG1hcC1yZW1vdmUoJGFyZ3MsICRtZWRpYS10eXBlLWtleSk7XFxuICB9XFxuXFxuICBAZWFjaCAka2V5LCAkdmFsdWUgaW4gJGFyZ3Mge1xcbiAgICBAaWYgJHZhbHVlIHtcXG4gICAgICAkZXhwcjogXFxcIiN7JGV4cHJ9IGFuZCAoI3ska2V5fTogI3skdmFsdWV9KVxcXCI7XFxuICAgIH1cXG4gIH1cXG5cXG4gIEBtZWRpYSAjeyRtZWRpYS10eXBlfSAjeyRleHByfSB7XFxuICAgIEBjb250ZW50O1xcbiAgfVxcbn1cXG5cXG4vKiBtaW4tc2NyZWVuKCRtaW4sICRvcmllbnRhdGlvbikgXFxuICogJG1pbiAtIHJlcXVpcmVkXFxuICogJG9yaWVudGF0aW9uIC0gb3B0aW9uYWxcXG4gKiBFeCAjMTogQGluY2x1ZGUgbWluLXNjcmVlbig3NjhweCwgbGFuZHNjYXBlKSB7IC4uLiB9XFxuICogRXggIzI6IEBpbmNsdWRlIG1pbi1zY3JlZW4oNzY4cHgpIHsgLi4uIH1cXG4gKi9cXG5AbWl4aW4gbWluLXNjcmVlbigkbWluLCAkb3JpZW50YXRpb246IGZhbHNlKSB7XFxuICBAaW5jbHVkZSBnZW5lcmF0ZS1tcSgkbWluLXdpZHRoOiAkbWluLCAkb3JpZW50YXRpb246ICRvcmllbnRhdGlvbikge1xcbiAgICBAY29udGVudDtcXG4gIH1cXG59XFxuXCIsXCJAaW1wb3J0ICdnbG9iYWxzJztcXG5AaW1wb3J0ICdtaXhpbnMnO1xcbkBpbXBvcnQgJ3ZpZXdwb3J0cyc7XFxuXFxuJGZvb3Rlci1jb2xvcjogIzU0NTE0QTtcXG4kbnlwbC13aGl0ZTogI2ZmZjtcXG5cXG4uZm9vdGVyIHtcXG4gIGJhY2tncm91bmQ6ICRmb290ZXItY29sb3I7XFxuICBjbGVhcjogYm90aDtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgc3lzdGVtLXVpLCBzYW5zLXNlcmlmO1xcbiAgbWluLWhlaWdodDogMzYwcHg7XFxuICBwYWRkaW5nOiAxNXB4IDIwcHggMTAwcHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuXFxuICBhIHtcXG4gICAgY29sb3I6ICRueXBsLXdoaXRlO1xcbiAgICBmb250LXdlaWdodDogNDAwO1xcbiAgICBtYXJnaW46IDAgMC4ycmVtO1xcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuXFxuICAgICY6aG92ZXIge1xcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xcbiAgICB9XFxuXFxuICAgICY6Zm9jdXMge1xcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRmb290ZXItY29sb3I7XFxuICAgICAgb3V0bGluZTogc29saWQgMnB4ICRueXBsLXdoaXRlO1xcbiAgICB9XFxuICB9XFxuXFxuICAuc3ZnSWNvbiB7XFxuICAgIGZpbGw6ICNmZmY7XFxuICB9XFxuXFxuICAubG9nb1RleHQge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogMjBweDtcXG5cXG4gICAgLm55cGxUZXh0TG9nbyB7XFxuICAgICAgaGVpZ2h0OiA5NHB4O1xcbiAgICAgIHdpZHRoOiAxMTVweDtcXG4gICAgfVxcblxcbiAgICBAaW5jbHVkZSBtaW4tc2NyZWVuKCRwb3J0cmFpdCkge1xcbiAgICAgIHRvcDogMjBweDtcXG4gICAgICBsZWZ0OiA2JTtcXG4gICAgfVxcblxcbiAgICBAaW5jbHVkZSBtaW4tc2NyZWVuKCRsYW5kc2NhcGUpIHtcXG4gICAgICB0b3A6IDM1cHg7XFxuICAgIH1cXG4gIH1cXG5cXG4gICYtY29udGVudCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG4gICAgbWFyZ2luLXRvcDogNzVweDtcXG5cXG4gICAgLmZvb3RlckxpbmtzIHtcXG4gICAgICBmb250LXNpemU6IDE2cHg7XFxuICAgICAgbGluZS1oZWlnaHQ6IDM1cHg7XFxuICAgICAgbWFyZ2luOiAwO1xcbiAgICAgIHBhZGRpbmc6IDA7XFxuICAgICAgb3JkZXI6IDI7XFxuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcXG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcXG4gICAgICB3aWR0aDogMTAwJTtcXG5cXG4gICAgICBAaW5jbHVkZSBtaW4tc2NyZWVuKCRwb3J0cmFpdCkge1xcbiAgICAgICAgd2lkdGg6IGF1dG87XFxuICAgICAgfVxcblxcbiAgICAgIC5saW5rSXRlbUxpc3Qge1xcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbiAgICAgICAgbGkge1xcbiAgICAgICAgICBAaW5jbHVkZSB2aXN1YWxseUhpZGRlbjtcXG5cXG4gICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XFxuICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheVZpc3VhbGx5SGlkZGVuO1xcbiAgICAgICAgICB9XFxuXFxuICAgICAgICAgIEBpbmNsdWRlIG1pbi1zY3JlZW4oJHBvcnRyYWl0KSB7XFxuICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheVZpc3VhbGx5SGlkZGVuO1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcblxcbiAgICAgIHVsIHtcXG4gICAgICAgIHBhZGRpbmc6IDA7XFxuICAgICAgfVxcblxcbiAgICAgIGxpIHtcXG4gICAgICAgIEBpbmNsdWRlIG1pbi1zY3JlZW4oJHBvcnRyYWl0KSB7XFxuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xcbiAgICAgICAgICB3aWR0aDogMTM1cHg7XFxuXFxuICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xcbiAgICAgICAgICAgIHdpZHRoOiAxMTBweDtcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcblxcbiAgICAgICAgQGluY2x1ZGUgbWluLXNjcmVlbigkbGFuZHNjYXBlKSB7XFxuICAgICAgICAgIHdpZHRoOiAxNTVweDtcXG5cXG4gICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XFxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMTBweDtcXG4gICAgICAgICAgfVxcblxcbiAgICAgICAgICAmOm50aC1jaGlsZCgyKSB7XFxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA2MHB4O1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuXFxuICAgICAgICBAaW5jbHVkZSBtaW4tc2NyZWVuKCRsYXJnZSkge1xcbiAgICAgICAgICAmOmZpcnN0LWNoaWxkLFxcbiAgICAgICAgICAmOm50aC1jaGlsZCgyKSB7XFxuICAgICAgICAgICAgd2lkdGg6IDE1NXB4O1xcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgIH1cXG5cXG4gICAgICAvLyBNUXMgZm9yIC5mb290ZXJMaW5rc1xcbiAgICAgIEBpbmNsdWRlIG1pbi1zY3JlZW4oJHBvcnRyYWl0KSB7XFxuICAgICAgICBvcmRlcjogMTtcXG4gICAgICAgIG1hcmdpbjogMDtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gICAgICB9XFxuXFxuICAgICAgQGluY2x1ZGUgbWluLXNjcmVlbigkbGFuZHNjYXBlKSB7XFxuICAgICAgICBmb250LXNpemU6IDE0cHg7XFxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xcbiAgICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XFxuICAgICAgfVxcblxcbiAgICAgIEBpbmNsdWRlIG1pbi1zY3JlZW4oJGxhcmdlKSB7XFxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDcwcHg7XFxuICAgICAgICBvcmRlcjogMjtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgLnNvY2lhbE1lZGlhIHtcXG4gICAgICBvcmRlcjogMTtcXG4gICAgICBtYXJnaW46IDIwcHggMCAxNXB4IDA7XFxuICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbiAgICAgIC8vIGljb25zIGFyZSBzcXVhcmUsIHdlIHdhbnQgZm91ciBhY3Jvc3NcXG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcXG4gICAgICB3aWR0aDogNTBweCAqIDQ7XFxuXFxuICAgICAgbGkge1xcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICAgICAgd2lkdGg6IDQ1cHg7XFxuXFxuICAgICAgICBhIHtcXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgICAgICAgIGNvbG9yOiAjRkZGO1xcbiAgICAgICAgICBmb250LXNpemU6IDQwcHg7XFxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiA0NXB4O1xcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuXFxuICAgICAgICAgIHN2ZyB7XFxuICAgICAgICAgICAgd2lkdGg6IDM2cHg7XFxuICAgICAgICAgICAgaGVpZ2h0OiAzNnB4O1xcbiAgICAgICAgICB9XFxuXFxuICAgICAgICAgIEBpbmNsdWRlIG1pbi1zY3JlZW4oJHBvcnRyYWl0KSB7XFxuICAgICAgICAgICAgZm9udC1zaXplOiA1MHB4O1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuXFxuICAgICAgICBbY2xhc3NePVxcXCJpY29uLVxcXCJdLFxcbiAgICAgICAgW2NsYXNzKj1cXFwiIGljb24tXFxcIl0ge1xcbiAgICAgICAgICBwYWRkaW5nOiAwO1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgW2RhdGEtaWNvbl06YmVmb3JlLFxcbiAgICAgICAgW2NsYXNzXj1cXFwiaWNvbi1cXFwiXTpiZWZvcmUsXFxuICAgICAgICBbY2xhc3MqPVxcXCIgaWNvbi1cXFwiXTpiZWZvcmUge1xcbiAgICAgICAgICBtYXJnaW46IDAgNXB4IDAgMCAhaW1wb3J0YW50O1xcbiAgICAgICAgfVxcbiAgICAgIH1cXG5cXG4gICAgICAvLyBNUXMgZm9yIC5zb2NpYWxNZWRpYVxcbiAgICAgIEBpbmNsdWRlIG1pbi1zY3JlZW4oJHBvcnRyYWl0KSB7XFxuICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xcbiAgICAgIH1cXG5cXG4gICAgICBAaW5jbHVkZSBtaW4tc2NyZWVuKCRsYW5kc2NhcGUpIHtcXG4gICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XFxuICAgICAgfVxcblxcbiAgICAgIEBpbmNsdWRlIG1pbi1zY3JlZW4oJGxhcmdlKSB7XFxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xcbiAgICAgICAgd2lkdGg6IDI4MHB4O1xcbiAgICAgIH1cXG4gICAgfVxcblxcbiAgICAvLyBNUXMgZm9yICYtY29udGVudFxcbiAgICBAaW5jbHVkZSBtaW4tc2NyZWVuKCRwb3J0cmFpdCkge1xcbiAgICAgIG1hcmdpbjogMDtcXG4gICAgICByaWdodDogNiU7XFxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG4gICAgfVxcblxcbiAgICBAaW5jbHVkZSBtaW4tc2NyZWVuKCRsYXJnZSkge1xcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcXG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gICAgfVxcbiAgfVxcblxcbiAgJi1jb250ZW50LS1zZWNvbmRhcnkge1xcblxcbiAgICBAaW5jbHVkZSBtaW4tc2NyZWVuKCRwb3J0cmFpdCkge1xcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgICBsZWZ0OiA2JTtcXG4gICAgICB0b3A6IDE0MHB4O1xcbiAgICAgIHdpZHRoOiA0MDBweDtcXG4gICAgfVxcblxcbiAgICBAaW5jbHVkZSBtaW4tc2NyZWVuKCRsYW5kc2NhcGUpIHtcXG4gICAgICB0b3A6IDE3MHB4O1xcbiAgICB9XFxuXFxuICAgIEBpbmNsdWRlIG1pbi1zY3JlZW4oJGxhcmdlKSB7XFxuICAgICAgdG9wOiAxNDBweDtcXG4gICAgfVxcbiAgICBcXG4gICAgLmZhY2FkZSB7XFxuICAgICAgaW1nIHtcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xcbiAgICAgIH1cXG4gICAgfVxcbiAgICBcXG4gICAgLmNvcHlyaWdodCB7XFxuICAgICAgbWFyZ2luOiAzNXB4IDAgMCAwO1xcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7XFxuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XFxuXFxuICAgICAgQGluY2x1ZGUgbWluLXNjcmVlbigkcG9ydHJhaXQpIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTFweDtcXG4gICAgICB9XFxuXFxuICAgICAgQGluY2x1ZGUgbWluLXNjcmVlbigkbGFuZHNjYXBlKSB7XFxuICAgICAgICBmb250LXNpemU6IDEzcHg7XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuXFxuICAvLyBNUXMgZm9yIC5mb290ZXJcXG4gIEBpbmNsdWRlIG1pbi1zY3JlZW4oJHBvcnRyYWl0KSB7XFxuICAgIHBhZGRpbmc6IDE1cHggMDtcXG4gIH1cXG5cXG4gIEBpbmNsdWRlIG1pbi1zY3JlZW4oJGxhbmRzY2FwZSkge1xcbiAgICBwYWRkaW5nOiAzMHB4IDA7XFxuICB9XFxufVxcblwiLFwiLyogRk9OVCBGQUNFIE1JWElOXFxuICogLS0tLS0tLS0tLS0tLS0tXFxuICogVXNhZ2U6IEBpbmNsdWRlIGZvbnQtZmFjZSgnS2lldml0LVJlZ3VsYXInLCAnaHR0cDovLy4uLicpO1xcbiAqIERlc2M6IERvIG5vdCBpbmNsdWRlIHRoZSBmb250IGZpbGUgZXh0ZW5zaW9uLCB0aGlzIG1peGluXFxuICogd2lsbCBnZW5lcmF0ZSB0aGUgcHJvcGVyIGV4dGVuc2lvbnMuXFxuKi9cXG4vKiBWSVNVQUxMWSBISURFIEVMRU1FTlRTXFxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tXFxuICogVXNhZ2U6IFZpc3VhbGx5IGhpZGVzIGFuIGVsZW1lbnQgZnJvbSB0aGUgc2NyZWVuXFxuICogYnV0IGlzIHN0aWxsIHJlYWRhYmxlIGJ5IHNjcmVlbiByZWFkZXJzIGZvciBhY2Nlc3NpYmlsaXR5LlxcbiovXFxuLyogRElTUExBWSBWSVNVQUxMWSBISURERU4gRUxFTUVOVFNcXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cXG4gKiBVc2FnZTogRGlzcGxheXMgYW4gZWxlbWVudCB0aGF0IGlzIHZpc3VhbGx5IGhpZGRlbi5cXG4qL1xcbi8qIC0tLSBNZWRpYSBRdWVyeSBHZW5lcmF0b3IgLS0tXFxuICogUmV1c2FibGUgbWl4aW4gdXNlZCB0byBnZW5lcmF0ZVxcbiAqIHZhcmlhdGlvbnMgb2YgbWVkaWEgcXVlcnkgcHJvcGVydGllcy5cXG4gKi9cXG4vKiBtaW4tc2NyZWVuKCRtaW4sICRvcmllbnRhdGlvbikgXFxuICogJG1pbiAtIHJlcXVpcmVkXFxuICogJG9yaWVudGF0aW9uIC0gb3B0aW9uYWxcXG4gKiBFeCAjMTogQGluY2x1ZGUgbWluLXNjcmVlbig3NjhweCwgbGFuZHNjYXBlKSB7IC4uLiB9XFxuICogRXggIzI6IEBpbmNsdWRlIG1pbi1zY3JlZW4oNzY4cHgpIHsgLi4uIH1cXG4gKi9cXG4uZm9vdGVyIHtcXG4gIGJhY2tncm91bmQ6ICM1NDUxNEE7XFxuICBjbGVhcjogYm90aDtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgc3lzdGVtLXVpLCBzYW5zLXNlcmlmO1xcbiAgbWluLWhlaWdodDogMzYwcHg7XFxuICBwYWRkaW5nOiAxNXB4IDIwcHggMTAwcHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcbi5mb290ZXIgYSB7XFxuICBjb2xvcjogI2ZmZjtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBtYXJnaW46IDAgMC4ycmVtO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbn1cXG4uZm9vdGVyIGE6aG92ZXIge1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxufVxcbi5mb290ZXIgYTpmb2N1cyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTQ1MTRBO1xcbiAgb3V0bGluZTogc29saWQgMnB4ICNmZmY7XFxufVxcbi5mb290ZXIgLnN2Z0ljb24ge1xcbiAgZmlsbDogI2ZmZjtcXG59XFxuLmZvb3RlciAubG9nb1RleHQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAyMHB4O1xcbn1cXG4uZm9vdGVyIC5sb2dvVGV4dCAubnlwbFRleHRMb2dvIHtcXG4gIGhlaWdodDogOTRweDtcXG4gIHdpZHRoOiAxMTVweDtcXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLmZvb3RlciAubG9nb1RleHQge1xcbiAgICB0b3A6IDIwcHg7XFxuICAgIGxlZnQ6IDYlO1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xcbiAgLmZvb3RlciAubG9nb1RleHQge1xcbiAgICB0b3A6IDM1cHg7XFxuICB9XFxufVxcbi5mb290ZXItY29udGVudCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG4gIG1hcmdpbi10b3A6IDc1cHg7XFxufVxcbi5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3Mge1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgbGluZS1oZWlnaHQ6IDM1cHg7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgb3JkZXI6IDI7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IC5mb290ZXJMaW5rcyB7XFxuICAgIHdpZHRoOiBhdXRvO1xcbiAgfVxcbn1cXG4uZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIC5saW5rSXRlbUxpc3Qge1xcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbn1cXG4uZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIC5saW5rSXRlbUxpc3QgbGkge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogLTEwMDAwcHg7XFxuICB0b3A6IGF1dG87XFxuICB3aWR0aDogMXB4O1xcbiAgaGVpZ2h0OiAxcHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG4uZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIC5saW5rSXRlbUxpc3QgbGk6Zmlyc3QtY2hpbGQge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgbGVmdDogMDtcXG4gIGhlaWdodDogYXV0bztcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIC5saW5rSXRlbUxpc3QgbGkge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIGhlaWdodDogYXV0bztcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxufVxcbi5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3MgdWwge1xcbiAgcGFkZGluZzogMDtcXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IC5mb290ZXJMaW5rcyBsaSB7XFxuICAgIGZsb2F0OiBsZWZ0O1xcbiAgICB3aWR0aDogMTM1cHg7XFxuICB9XFxuICAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIGxpOmZpcnN0LWNoaWxkIHtcXG4gICAgd2lkdGg6IDExMHB4O1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IC5mb290ZXJMaW5rcyBsaSB7XFxuICAgIHdpZHRoOiAxNTVweDtcXG4gIH1cXG4gIC5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3MgbGk6Zmlyc3QtY2hpbGQge1xcbiAgICBtYXJnaW4tcmlnaHQ6IDExMHB4O1xcbiAgfVxcbiAgLmZvb3Rlci1jb250ZW50IC5mb290ZXJMaW5rcyBsaTpudGgtY2hpbGQoMikge1xcbiAgICBtYXJnaW4tcmlnaHQ6IDYwcHg7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTUwMHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIGxpOmZpcnN0LWNoaWxkLCAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIGxpOm50aC1jaGlsZCgyKSB7XFxuICAgIHdpZHRoOiAxNTVweDtcXG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLmZvb3RlckxpbmtzIHtcXG4gICAgb3JkZXI6IDE7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZm9udC1zaXplOiAxM3B4O1xcbiAgICBsaW5lLWhlaWdodDogMjVweDtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcXG4gIC5mb290ZXItY29udGVudCAuZm9vdGVyTGlua3Mge1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE1MDBweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IC5mb290ZXJMaW5rcyB7XFxuICAgIG1hcmdpbi1yaWdodDogNzBweDtcXG4gICAgb3JkZXI6IDI7XFxuICB9XFxufVxcbi5mb290ZXItY29udGVudCAuc29jaWFsTWVkaWEge1xcbiAgb3JkZXI6IDE7XFxuICBtYXJnaW46IDIwcHggMCAxNXB4IDA7XFxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxuICB0ZXh0LWFsaWduOiByaWdodDtcXG4gIHdpZHRoOiAyMDBweDtcXG59XFxuLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSBsaSB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB3aWR0aDogNDVweDtcXG59XFxuLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSBsaSBhIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgY29sb3I6ICNGRkY7XFxuICBmb250LXNpemU6IDQwcHg7XFxuICBsaW5lLWhlaWdodDogNDVweDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSBsaSBhIHN2ZyB7XFxuICB3aWR0aDogMzZweDtcXG4gIGhlaWdodDogMzZweDtcXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSBsaSBhIHtcXG4gICAgZm9udC1zaXplOiA1MHB4O1xcbiAgfVxcbn1cXG4uZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIGxpIFtjbGFzc149aWNvbi1dLFxcbi5mb290ZXItY29udGVudCAuc29jaWFsTWVkaWEgbGkgW2NsYXNzKj1cXFwiIGljb24tXFxcIl0ge1xcbiAgcGFkZGluZzogMDtcXG59XFxuLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSBsaSBbZGF0YS1pY29uXTpiZWZvcmUsXFxuLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSBsaSBbY2xhc3NePWljb24tXTpiZWZvcmUsXFxuLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSBsaSBbY2xhc3MqPVxcXCIgaWNvbi1cXFwiXTpiZWZvcmUge1xcbiAgbWFyZ2luOiAwIDVweCAwIDAgIWltcG9ydGFudDtcXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLmZvb3Rlci1jb250ZW50IC5zb2NpYWxNZWRpYSB7XFxuICAgIG1hcmdpbi10b3A6IDMwcHg7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XFxuICAuZm9vdGVyLWNvbnRlbnQgLnNvY2lhbE1lZGlhIHtcXG4gICAgbWFyZ2luLXRvcDogMzBweDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNTAwcHgpIHtcXG4gIC5mb290ZXItY29udGVudCAuc29jaWFsTWVkaWEge1xcbiAgICBtYXJnaW4tdG9wOiAwO1xcbiAgICB3aWR0aDogMjgwcHg7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcXG4gIC5mb290ZXItY29udGVudCB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcmlnaHQ6IDYlO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNTAwcHgpIHtcXG4gIC5mb290ZXItY29udGVudCB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcXG4gIC5mb290ZXItY29udGVudC0tc2Vjb25kYXJ5IHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiA2JTtcXG4gICAgdG9wOiAxNDBweDtcXG4gICAgd2lkdGg6IDQwMHB4O1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xcbiAgLmZvb3Rlci1jb250ZW50LS1zZWNvbmRhcnkge1xcbiAgICB0b3A6IDE3MHB4O1xcbiAgfVxcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE1MDBweCkge1xcbiAgLmZvb3Rlci1jb250ZW50LS1zZWNvbmRhcnkge1xcbiAgICB0b3A6IDE0MHB4O1xcbiAgfVxcbn1cXG4uZm9vdGVyLWNvbnRlbnQtLXNlY29uZGFyeSAuZmFjYWRlIGltZyB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogYXV0bztcXG59XFxuLmZvb3Rlci1jb250ZW50LS1zZWNvbmRhcnkgLmNvcHlyaWdodCB7XFxuICBtYXJnaW46IDM1cHggMCAwIDA7XFxuICBmb250LXNpemU6IDEycHg7XFxuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7XFxuICB0ZXh0LWFsaWduOiByaWdodDtcXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLmZvb3Rlci1jb250ZW50LS1zZWNvbmRhcnkgLmNvcHlyaWdodCB7XFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG4gIH1cXG59XFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcXG4gIC5mb290ZXItY29udGVudC0tc2Vjb25kYXJ5IC5jb3B5cmlnaHQge1xcbiAgICBmb250LXNpemU6IDEzcHg7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcXG4gIC5mb290ZXIge1xcbiAgICBwYWRkaW5nOiAxNXB4IDA7XFxuICB9XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XFxuICAuZm9vdGVyIHtcXG4gICAgcGFkZGluZzogMzBweCAwO1xcbiAgfVxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[7].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[7].use[4]!./styles/main.scss\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/server/denormalize-page-path.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/server/denormalize-page-path.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("exports.__esModule=true;exports.normalizePathSep=normalizePathSep;exports.denormalizePagePath=denormalizePagePath;function normalizePathSep(path){return path.replace(/\\\\/g,'/');}function denormalizePagePath(page){page=normalizePathSep(page);if(page.startsWith('/index/')){page=page.slice(6);}else if(page==='/index'){page='/';}return page;}\n//# sourceMappingURL=denormalize-page-path.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9zZXJ2ZXIvZGVub3JtYWxpemUtcGFnZS1wYXRoLmpzP2MyNDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWEsa0JBQWtCLE1BQU0sd0JBQXdCLGtCQUFrQiwyQkFBMkIscUJBQXFCLGdDQUFnQyxnQ0FBZ0MsbUNBQW1DLDRCQUE0QiwrQkFBK0Isb0JBQW9CLHlCQUF5QixVQUFVO0FBQ3BWIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9zZXJ2ZXIvZGVub3JtYWxpemUtcGFnZS1wYXRoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7ZXhwb3J0cy5fX2VzTW9kdWxlPXRydWU7ZXhwb3J0cy5ub3JtYWxpemVQYXRoU2VwPW5vcm1hbGl6ZVBhdGhTZXA7ZXhwb3J0cy5kZW5vcm1hbGl6ZVBhZ2VQYXRoPWRlbm9ybWFsaXplUGFnZVBhdGg7ZnVuY3Rpb24gbm9ybWFsaXplUGF0aFNlcChwYXRoKXtyZXR1cm4gcGF0aC5yZXBsYWNlKC9cXFxcL2csJy8nKTt9ZnVuY3Rpb24gZGVub3JtYWxpemVQYWdlUGF0aChwYWdlKXtwYWdlPW5vcm1hbGl6ZVBhdGhTZXAocGFnZSk7aWYocGFnZS5zdGFydHNXaXRoKCcvaW5kZXgvJykpe3BhZ2U9cGFnZS5zbGljZSg2KTt9ZWxzZSBpZihwYWdlPT09Jy9pbmRleCcpe3BhZ2U9Jy8nO31yZXR1cm4gcGFnZTt9XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZW5vcm1hbGl6ZS1wYWdlLXBhdGguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/server/denormalize-page-path.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \***********************************************************************************/
/***/ (function(module) {

eval("function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlMaWtlVG9BcnJheS5qcz9lZGU2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUEsd0NBQXdDLFNBQVM7QUFDakQ7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlMaWtlVG9BcnJheS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlMaWtlVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \*********************************************************************************/
/***/ (function(module) {

eval("function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlXaXRoSG9sZXMuanM/M2VhMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheVdpdGhIb2xlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlXaXRoSG9sZXM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \***********************************************************************************/
/***/ (function(module) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvci5qcz9hOTU0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hc3luY1RvR2VuZXJhdG9yOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \*********************************************************************************/
/***/ (function(module) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanM/ZmM2NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc0NhbGxDaGVjazsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/construct.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/construct.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \"./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct */ \"./node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY29uc3RydWN0LmpzP2FiYmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLG1CQUFPLENBQUMsbUdBQWtCOztBQUUvQywrQkFBK0IsbUJBQU8sQ0FBQyx1SEFBNEI7O0FBRW5FO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NvbnN0cnVjdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL3NldFByb3RvdHlwZU9mXCIpO1xuXG52YXIgaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gcmVxdWlyZShcIi4vaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0XCIpO1xuXG5mdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHtcbiAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3Q7XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfY29uc3RydWN0ID0gZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7XG4gICAgICB2YXIgYSA9IFtudWxsXTtcbiAgICAgIGEucHVzaC5hcHBseShhLCBhcmdzKTtcbiAgICAgIHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTtcbiAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3RvcigpO1xuICAgICAgaWYgKENsYXNzKSBzZXRQcm90b3R5cGVPZihpbnN0YW5jZSwgQ2xhc3MucHJvdG90eXBlKTtcbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF9jb25zdHJ1Y3QuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfY29uc3RydWN0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/construct.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js ***!
  \******************************************************************************/
/***/ (function(module) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanM/OGI2NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jcmVhdGVDbGFzczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/extends.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _extends; }\n/* harmony export */ });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanM/MWMwMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/esm/extends.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \****************************************************************************************/
/***/ (function(module) {

eval("function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzPzAyYmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgXCJkZWZhdWx0XCI6IG9ialxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \*****************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZC5qcz9lY2EwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyx3R0FBK0I7O0FBRXJEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7XG4gIGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDtcbiAgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTtcblxuICBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7XG4gICAgcmV0dXJuIGNhY2hlO1xuICB9O1xuXG4gIHJldHVybiBjYWNoZTtcbn1cblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7XG4gIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG5cbiAgaWYgKG9iaiA9PT0gbnVsbCB8fCBfdHlwZW9mKG9iaikgIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiZGVmYXVsdFwiOiBvYmpcbiAgICB9O1xuICB9XG5cbiAgdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCk7XG5cbiAgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7XG4gICAgcmV0dXJuIGNhY2hlLmdldChvYmopO1xuICB9XG5cbiAgdmFyIG5ld09iaiA9IHt9O1xuICB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDtcblxuICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBuZXdPYmpbXCJkZWZhdWx0XCJdID0gb2JqO1xuXG4gIGlmIChjYWNoZSkge1xuICAgIGNhY2hlLnNldChvYmosIG5ld09iaik7XG4gIH1cblxuICByZXR1cm4gbmV3T2JqO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*******************************************************************************************/
/***/ (function(module) {

eval("function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0LmpzPzkyNWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyRUFBMkU7QUFDM0U7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlO1xuICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuXG4gIHRyeSB7XG4gICAgRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLCBbXSwgZnVuY3Rpb24gKCkge30pKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3Q7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \***************************************************************************************/
/***/ (function(module) {

eval("function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXRlcmFibGVUb0FycmF5TGltaXQuanM/OWIxYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2Q0FBNkMsK0JBQStCO0FBQzVFOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXRlcmFibGVUb0FycmF5TGltaXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuO1xuICB2YXIgX2FyciA9IFtdO1xuICB2YXIgX24gPSB0cnVlO1xuICB2YXIgX2QgPSBmYWxzZTtcbiAgdmFyIF9lID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2QgPSB0cnVlO1xuICAgIF9lID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9hcnI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2l0ZXJhYmxlVG9BcnJheUxpbWl0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \**********************************************************************************/
/***/ (function(module) {

eval("function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvbm9uSXRlcmFibGVSZXN0LmpzP2E1MjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvbm9uSXRlcmFibGVSZXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfbm9uSXRlcmFibGVSZXN0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \*********************************************************************************/
/***/ (function(module) {

eval("function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2V0UHJvdG90eXBlT2YuanM/YWExYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ \"./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js\");\n\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ \"./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ \"./node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\");\n\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ \"./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheS5qcz9jZTgwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixtQkFBTyxDQUFDLG1HQUFrQjs7QUFFL0MsMkJBQTJCLG1CQUFPLENBQUMsK0dBQXdCOztBQUUzRCxpQ0FBaUMsbUJBQU8sQ0FBQywySEFBOEI7O0FBRXZFLHNCQUFzQixtQkFBTyxDQUFDLHFHQUFtQjs7QUFFakQ7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcnJheVdpdGhIb2xlcyA9IHJlcXVpcmUoXCIuL2FycmF5V2l0aEhvbGVzXCIpO1xuXG52YXIgaXRlcmFibGVUb0FycmF5TGltaXQgPSByZXF1aXJlKFwiLi9pdGVyYWJsZVRvQXJyYXlMaW1pdFwiKTtcblxudmFyIHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5ID0gcmVxdWlyZShcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXlcIik7XG5cbnZhciBub25JdGVyYWJsZVJlc3QgPSByZXF1aXJlKFwiLi9ub25JdGVyYWJsZVJlc3RcIik7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkge1xuICByZXR1cm4gYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgbm9uSXRlcmFibGVSZXN0KCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3NsaWNlZFRvQXJyYXk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js ***!
  \*************************************************************************/
/***/ (function(module) {

eval("function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzPzBiZTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ \"./node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanM/MjljOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1QkFBdUIsbUJBQU8sQ0FBQyx1R0FBb0I7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcnJheUxpa2VUb0FycmF5ID0gcmVxdWlyZShcIi4vYXJyYXlMaWtlVG9BcnJheVwiKTtcblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\n");

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/regenerator/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/regenerator/index.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzP2JjOTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0hBQStDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZVwiKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanM/YTE1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsSUFBSSxJQUFxQztBQUN6Qyw2QkFBNkIsbUJBQU8sQ0FBQyx5RkFBNEI7QUFDakU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0R0FBNEc7QUFDNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuICB2YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIHZhciBoYXMgPSBGdW5jdGlvbi5jYWxsLmJpbmQoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSk7XG5cbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyB0ZXh0O1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG59XG5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKGhhcyh0eXBlU3BlY3MsIHR5cGVTcGVjTmFtZSkpIHtcbiAgICAgICAgdmFyIGVycm9yO1xuICAgICAgICAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGludGVudGlvbmFsbHkgYW4gaW52YXJpYW50IHRoYXQgZ2V0cyBjYXVnaHQuIEl0J3MgdGhlIHNhbWVcbiAgICAgICAgICAvLyBiZWhhdmlvciBhcyB3aXRob3V0IHRoaXMgc3RhdGVtZW50IGV4Y2VwdCB3aXRoIGEgYmV0dGVyIG1lc3NhZ2UuXG4gICAgICAgICAgaWYgKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKFxuICAgICAgICAgICAgICAoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6ICcgKyBsb2NhdGlvbiArICcgdHlwZSBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7ICcgK1xuICAgICAgICAgICAgICAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVycm9yID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IgPSBleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgJiYgIShlcnJvciBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgIChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICcgK1xuICAgICAgICAgICAgbG9jYXRpb24gKyAnIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciAnICtcbiAgICAgICAgICAgICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAnICsgdHlwZW9mIGVycm9yICsgJy4gJyArXG4gICAgICAgICAgICAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArXG4gICAgICAgICAgICAnY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCAnICtcbiAgICAgICAgICAgICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJ1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvci5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAvLyBPbmx5IG1vbml0b3IgdGhpcyBmYWlsdXJlIG9uY2UgYmVjYXVzZSB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiB0aGVcbiAgICAgICAgICAvLyBzYW1lIGVycm9yLlxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvci5tZXNzYWdlXSA9IHRydWU7XG5cbiAgICAgICAgICB2YXIgc3RhY2sgPSBnZXRTdGFjayA/IGdldFN0YWNrKCkgOiAnJztcblxuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgICdGYWlsZWQgJyArIGxvY2F0aW9uICsgJyB0eXBlOiAnICsgZXJyb3IubWVzc2FnZSArIChzdGFjayAhPSBudWxsID8gc3RhY2sgOiAnJylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUmVzZXRzIHdhcm5pbmcgY2FjaGUgd2hlbiB0ZXN0aW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlID0gZnVuY3Rpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjaGVja1Byb3BUeXBlcztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/prop-types/checkPropTypes.js\n");

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ (function(module) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzPzU5YjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-is/cjs/react-is.development.js\n");

/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzPzRjZWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0QsRUFBRSxnSUFBeUQ7QUFDM0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-is/index.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.13.1\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\nvar checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nvar ReactVersion = '16.13.1';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  suspense: null\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\nfunction describeComponentFrame (name, source, ownerName) {\n  var sourceInfo = '';\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n\n        if (match) {\n          var pathBeforeSlash = match[1];\n\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nvar Resolved = 1;\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\nvar currentlyValidatingElement = null;\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\nvar IsSomeRendererActing = {\n  current: false\n};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner,\n  IsSomeRendererActing: IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    printWarning('warn', format, args);\n  }\n}\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var hasExistingStack = args.length > 0 && typeof args[args.length - 1] === 'string' && args[args.length - 1].indexOf('\\n    in') === 0;\n\n    if (!hasExistingStack) {\n      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n      var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n      if (stack !== '') {\n        format += '%s';\n        args = args.concat([stack]);\n      }\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(message);\n    } catch (x) {}\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {\n    {\n      throw Error( \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\" );\n    }\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n_assign(pureComponentPrototype, Component.prototype);\n\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (!!(element === null || element === undefined)) {\n    {\n      throw Error( \"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\" );\n    }\n  }\n\n  var propName; // Original props are copied\n\n  var props = _assign({}, element.props); // Reserved names are extracted\n\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\n\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is deprecated and will be removed in ' + 'a future major release. Consider converting children to ' + 'an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n\n      var childrenString = '' + children;\n\n      {\n        {\n          throw Error( \"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \").\" + addendum );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n  func.call(context, child, bookKeeping.count++);\n}\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\n\n\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    {\n      throw Error( \"React.Children.only expected to receive a single React element child.\" );\n    }\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {\n        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n      }\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _ctor: ctor,\n    // React uses these fields to store the result.\n    _status: -1,\n    _result: null\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes;\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  if (!(dispatcher !== null)) {\n    {\n      throw Error( \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\" );\n    }\n  }\n\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (unstable_observedBits !== undefined) {\n      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n  }\n\n  setCurrentlyValidatingElement(element);\n\n  {\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var name = getComponentName(type);\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      setCurrentlyValidatingElement(element);\n      checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n      setCurrentlyValidatingElement(null);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true;\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    setCurrentlyValidatingElement(fragment);\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n    }\n\n    setCurrentlyValidatingElement(null);\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n{\n\n  try {\n    var frozenObject = Object.freeze({});\n    var testMap = new Map([[frozenObject, null]]);\n    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useEffect = useEffect;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.version = ReactVersion;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzP2FiNWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0QsRUFBRSx1SEFBc0Q7QUFDeEQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/index.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ (function(module) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : 0\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "?ca47":
/*!******************************************!*\
  !*** ./utils/resolve-rewrites (ignored) ***!
  \******************************************/
/***/ (function() {

/* (ignored) */

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ // runtime can't be in strict mode because a global variable is assign and maybe created.
/******/ 
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ var __webpack_exports__ = (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx!"), __webpack_exec__("./node_modules/next/dist/client/router.js"));
/******/ _N_E = __webpack_exports__;
/******/ }
]);