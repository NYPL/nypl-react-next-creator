import React from "react";
export interface SelectProps {
    /** When passed, will populate the aria-label on the select */
    ariaLabel?: string;
    /** Additional attributes passed to the <select> tag */
    attributes?: {
        [key: string]: any;
    };
    /** BlockName for use with BEM. See how to work with modifiers and BEM here: http://getbem.com/introduction/ */
    blockName?: string;
    /** ClassName you can add in addition to 'select' */
    className?: string;
    children?: React.ReactNode;
    /** When true, disables the select */
    disabled?: boolean;
    /** ID of associated HelperText */
    helperTextId?: string;
    /** ID that other components can cross reference for accessibility purposes */
    id?: string;
    /** Attribute indicating that an option with a non-empty string value must be selected */
    isRequired: boolean;
    /** ID of associated label */
    labelId?: string;
    /** Modifiers array for use with BEM. See how to work with modifiers and BEM here: http://getbem.com/introduction/ */
    modifiers?: string[];
    /** The name of the select element to use in form submission */
    name: string;
    /** Passes selects' current value to the React state handler */
    onBlur?: (event: React.FormEvent) => void;
    /** Passes selects' current value to the React state handler */
    onChange?: (event: React.FormEvent) => void;
    /** The selected value */
    selectedOption?: string;
}
/**
 * Select
 * A component that renders a `select` DOM element along with its `option`
 * children.
 */
declare const Select: React.ForwardRefExoticComponent<SelectProps & React.RefAttributes<HTMLSelectElement>>;
export default Select;
