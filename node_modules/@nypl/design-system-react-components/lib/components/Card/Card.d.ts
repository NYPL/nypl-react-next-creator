import * as React from "react";
interface CardProps {
    /** ClassName that appears in addition to "card" */
    className?: string;
    /** BlockName for use with BEM. See how to work with blockNames and BEM here: http://getbem.com/introduction/ */
    blockName?: string;
    /** Calls to Action for the card, such as "download" on a card for a book */
    ctas?: React.ReactNode;
    /** Footer that appears within the card but below the three columns within it */
    footer?: React.ReactNode;
    /** Heading that appears within the card but above the three columns within it */
    heading?: React.ReactNode;
    /** ID that other components can cross reference for accessibility purposes */
    id?: string;
    /** First column within the card */
    image?: React.ReactNode;
    /** Modifiers array for use with BEM. See how to work with modifiers and BEM here: http://getbem.com/introduction/ */
    modifiers?: string[];
}
declare function Card(props: React.PropsWithChildren<CardProps>): JSX.Element;
declare namespace Card {
    var displayName: string;
    var __docgenInfo: {
        description: string;
        displayName: string;
        props: {
            className: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            blockName: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            ctas: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            footer: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            heading: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            id: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            image: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            modifiers: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
        };
    };
}
export default Card;
