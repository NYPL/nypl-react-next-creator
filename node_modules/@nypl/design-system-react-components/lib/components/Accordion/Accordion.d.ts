import * as React from "react";
export interface AccordionProps {
    /** Inner label on the button that opens the accordion */
    accordionLabel?: React.ReactNode;
    /** BlockName for use with BEM. See how to work with blockNames and BEM here: http://getbem.com/introduction/ */
    blockName?: string;
    /** className you can add in addition to 'input' */
    className?: string;
    /** Whether the accordion is open by default */
    defaultOpen?: boolean;
    /** ID that other components can cross reference for accessibility purposes */
    id?: string;
    /** accordionLabel's input ID */
    inputId?: string;
    /** Modifiers array for use with BEM. See how to work with modifiers and BEM here: http://getbem.com/introduction/ */
    modifiers?: string[];
}
/** Accordion component that shows content on toggle */
declare function Accordion(props: React.PropsWithChildren<AccordionProps>): JSX.Element;
declare namespace Accordion {
    var displayName: string;
    var __docgenInfo: {
        description: string;
        displayName: string;
        props: {
            accordionLabel: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            blockName: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            className: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            defaultOpen: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            id: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            inputId: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            modifiers: {
                defaultValue: any;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
        };
    };
}
export default Accordion;
